{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./common/Actions.jsm","webpack:///external \"ReactIntl\"","webpack:///external \"ReactRedux\"","webpack:///./content-src/components/TopSites/TopSitesConstants.js","webpack:///(webpack)/buildin/global.js","webpack:///./content-src/asrouter/asrouter-content.jsx","webpack:///./content-src/lib/screenshot-utils.js","webpack:///./content-src/asrouter/template-utils.js","webpack:///./common/Reducers.jsm","webpack:///./common/Dedupe.jsm","webpack:///./node_modules/fluent/src/parser.js","webpack:///./node_modules/fluent/src/types.js","webpack:///./node_modules/fluent/src/builtins.js","webpack:///./node_modules/fluent/src/resolver.js","webpack:///./node_modules/fluent/src/context.js","webpack:///./node_modules/fluent/src/cached_iterable.js","webpack:///./node_modules/fluent/src/fallback.js","webpack:///./node_modules/fluent/src/index.js","webpack:///./content-src/components/ErrorBoundary/ErrorBoundary.jsx","webpack:///external \"ReactDOM\"","webpack:///./content-src/components/TopSites/TopSite.jsx","webpack:///./common/PerfService.jsm","webpack:///./content-src/components/ComponentPerfTimer/ComponentPerfTimer.jsx","webpack:///./content-src/lib/section-menu-options.js","webpack:///./content-src/components/CollapsibleSection/CollapsibleSection.jsx","webpack:///./content-src/components/ContextMenu/ContextMenu.jsx","webpack:///./content-src/components/LinkMenu/LinkMenu.jsx","webpack:///./content-src/lib/link-menu-options.js","webpack:///./content-src/lib/init-store.js","webpack:///external \"PropTypes\"","webpack:///external \"Redux\"","webpack:///./content-src/components/Card/types.js","webpack:///./content-src/components/Card/Card.jsx","webpack:///./node_modules/fluent-react/src/localization.js","webpack:///./node_modules/fluent-react/src/provider.js","webpack:///./node_modules/fluent-react/src/markup.js","webpack:///./node_modules/fluent-react/vendor/omittedCloseTags.js","webpack:///./node_modules/fluent-react/vendor/voidElementTags.js","webpack:///./node_modules/fluent-react/src/localized.js","webpack:///./node_modules/fluent-react/src/index.js","webpack:///./content-src/lib/constants.js","webpack:///./content-src/components/TopSites/TopSiteFormInput.jsx","webpack:///./content-src/components/TopSites/TopSiteForm.jsx","webpack:///./content-src/asrouter/components/ModalOverlay/ModalOverlay.jsx","webpack:///./content-src/asrouter/templates/OnboardingMessage/OnboardingMessage.jsx","webpack:///./content-src/asrouter/components/Button/Button.jsx","webpack:///./content-src/asrouter/components/SnippetBase/SnippetBase.jsx","webpack:///./content-src/asrouter/templates/SimpleSnippet/SimpleSnippet.jsx","webpack:///./content-src/lib/detect-user-session-start.js","webpack:///./content-src/components/StartupOverlay/StartupOverlay.jsx","webpack:///./content-src/components/TopSites/TopSites.jsx","webpack:///./content-src/components/Topics/Topics.jsx","webpack:///./content-src/components/SectionMenu/SectionMenu.jsx","webpack:///./content-src/components/Sections/Sections.jsx","webpack:///./content-src/components/Search/Search.jsx","webpack:///./common/PrerenderData.jsm","webpack:///./content-src/components/ManualMigration/ManualMigration.jsx","webpack:///./content-src/components/ConfirmDialog/ConfirmDialog.jsx","webpack:///./content-src/components/ASRouterAdmin/ASRouterAdmin.jsx","webpack:///./content-src/components/Base/Base.jsx","webpack:///./content-src/asrouter/components/ImpressionsWrapper/ImpressionsWrapper.jsx","webpack:///./content-src/lib/snippets.js","webpack:///./content-src/activity-stream.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","__webpack_exports__","actionUtils","globalImportContext","Window","UI_CODE","actionTypes","type","ASRouterActions","_RouteMessage","action","options","meta","assign","from","to","Error","forEach","AlsoToMain","fromTarget","skipLocal","CONTENT_MESSAGE_TYPE","MAIN_MESSAGE_TYPE","AlsoToOneContent","target","skipMain","toTarget","BroadcastToContent","UserEvent","data","TELEMETRY_USER_EVENT","ASRouterUserEvent","AS_ROUTER_TELEMETRY_USER_EVENT","UndesiredEvent","importContext","TELEMETRY_UNDESIRED_EVENT","PerfEvent","TELEMETRY_PERFORMANCE_EVENT","ImpressionStats","TELEMETRY_IMPRESSION_STATS","OnlyToOneContent","OnlyToMain","AlsoToPreloaded","PRELOAD_MESSAGE_TYPE","SetPref","SET_PREF","WebExtEvent","source","isSendToMain","isBroadcastToContent","isSendToOneContent","isSendToPreloaded","isFromMain","getPortIdOfSender","ReactIntl","ReactRedux","TOP_SITES_SOURCE","TOP_SITES_CONTEXT_MENU_OPTIONS","MIN_RICH_FAVICON_SIZE","MIN_CORNER_FAVICON_SIZE","g","this","Function","eval","e","window","ASRouterUtils","addListener","listener","global","addMessageListener","removeListener","removeMessageListener","sendMessage","sendAsyncMessage","blockById","id","blockBundle","bundle","executeAction","button_action","button_action_params","common_Actions_jsm__WEBPACK_IMPORTED_MODULE_0__","unblockById","unblockBundle","getNextMessage","overrideMessage","sendTelemetry","ping","payload","content_src_lib_init_store__WEBPACK_IMPORTED_MODULE_2__","shouldSendImpressionOnUpdate","nextProps","prevProps","message","ALLOWED_TAGS","b","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","u","strong","em","br","RichText","props","fluent_react__WEBPACK_IMPORTED_MODULE_1__","_extends","links","sendClick","keys","reduce","acc","linkTag","href","_template_utils__WEBPACK_IMPORTED_MODULE_8__","url","data-metric","metric","onClick","convertLinks","text","ASRouterUISurface","PureComponent","constructor","super","onMessageFromParent","sendImpression","sendUserActionTelemetry","state","extraProps","message_id","eventType","provider","event","dataset","onBlockById","clearBundle","setState","componentWillMount","document","location","trigger","componentWillUnmount","renderSnippets","_components_ImpressionsWrapper_ImpressionsWrapper__WEBPACK_IMPORTED_MODULE_3__","messages","content","cx","fluent__WEBPACK_IMPORTED_MODULE_4__","addMessages","generateMessages","_templates_SimpleSnippet_SimpleSnippet__WEBPACK_IMPORTED_MODULE_9__","richText","UISurface","onBlock","renderOnboarding","_templates_OnboardingMessage_OnboardingMessage__WEBPACK_IMPORTED_MODULE_5__","onAction","onDoneButton","render","template","defaultProps","ASRouterContent","initialized","containerElement","_mount","getElementById","react_dom__WEBPACK_IMPORTED_MODULE_7___default","_unmount","unmountComponentAtNode","init","uninit","ScreenshotUtils","isBlob","isLocal","image","path","createLocalImageObject","remoteImage","URL","createObjectURL","maybeRevokeBlobObjectURL","localImage","revokeObjectURL","isRemoteImageLocal","safeURI","protocol","isAllowed","includes","console","warn","reducers","TOP_SITES_MAX_SITES_PER_ROW","dedupe","createKey","defaultCreateKey","item","group","groups","globalKeys","Set","result","values","valueMap","Map","has","set","push","add","map","Array","site","INITIAL_STATE","App","version","Snippets","TopSites","rows","editForm","Prefs","Theme","className","Dialog","visible","Sections","prevState","hasMatch","newRows","Actions","TOP_SITES_UPDATED","pref","TOP_SITES_PREFS_UPDATED","TOP_SITES_EDIT","index","previewResponse","TOP_SITES_CANCEL_EDIT","PREVIEW_RESPONSE","previewUrl","preview","PREVIEW_REQUEST","PREVIEW_REQUEST_CANCEL","SCREENSHOT_UPDATED","row","screenshot","PLACES_BOOKMARK_ADDED","bookmarkGuid","bookmarkTitle","dateAdded","bookmarkDateCreated","PLACES_BOOKMARK_REMOVED","newSite","PLACES_LINK_DELETED","filter","INIT","SNIPPETS_DATA","SNIPPET_BLOCKED","blockList","concat","SNIPPETS_BLOCKLIST_CLEARED","SNIPPETS_RESET","newValues","PREFS_INITIAL_VALUES","PREF_CHANGED","DIALOG_OPEN","DIALOG_CANCEL","DELETE_HISTORY_URL","newState","SECTION_DEREGISTER","section","SECTION_REGISTER","length","title","enabled","SECTION_UPDATE","find","card","pinned","splice","dedupeConfigurations","dedupeConf","dedupedRows","dedupeFrom","dedupeSectionId","dedupeSection","SECTION_UPDATE_CARD","PLACES_SAVED_TO_POCKET","open_url","pocket_id","PLACES_LINK_BLOCKED","DELETE_FROM_POCKET","ARCHIVE_FROM_POCKET","THEME_UPDATE","MAX_PLACEABLES","entryIdentifierRe","identifierRe","functionIdentifierRe","RuntimeParser","getResource","string","_source","_index","_length","entries","errors","skipWS","getEntry","SyntaxError","skipToNextEntryStart","error","ch","skipComment","getMessage","skipSection","skipInlineWS","getVariantName","getEntryIdentifier","val","getPattern","startsWith","attrs","lineStart","getAttributes","skipBlankLines","ptr","getIdentifier","re","lastIndex","exec","toString","start","cc","charCodeAt","slice","getString","substring","eol","indexOf","firstLineContent","getComplexPattern","buffer","placeables","ch2","getPlaceable","blankLinesStart","blankLinesEnd","variants","getVariants","exp","vars","def","selector","getSelectorExpression","literal","getLiteral","getVariantKey","args","getCallArgs","test","fun","isArray","lastIndexOf","getNumber","num","defaultIndex","cc0","cc1","parse","FluentType","opts","valueOf","FluentNone","FluentNumber","parseFloat","ctx","_memoizeIntlObject","Intl","NumberFormat","format","match","other","FluentDateTime","Date","DateTimeFormat","FluentSymbol","pr","PluralRules","select","builtins","NUMBER","arg","merge","DATETIME","argopts","unwrapped","opt","MAX_PLACEABLE_LENGTH","FSI","PDI","DefaultMember","env","members","RangeError","MessageReference","_terms","_messages","err","ReferenceError","Type","expr","ptn","dirty","useIsolating","_useIsolating","elem","part","delete","join","Pattern","TypeError","ExternalArgument","FunctionReference","callee","posargs","keyargs","CallExpression","attrName","AttributeExpression","keyword","node","isVariantList","variant","variantKey","VariantExpression","SelectExpression","undefined","_functions","func","context_MessageContext","locales","functions","_intls","WeakMap","iterator","hasMessage","WeakSet","resolve","ctor","cache","JSON","stringify","CachedIterable","iterable","asyncIterator","seen","[object Object]","cur","next","_asyncToGenerator","touchNext","done","mapContextSync","ids","getContextForId","context","_ref","fallback_asyncToGenerator","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_value","_iterator","_asyncIterator","return","remainingCount","foundContexts","fill","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_value2","_iterator2","ErrorBoundaryFallback","react__WEBPACK_IMPORTED_MODULE_1___default","windowObj","reload","react_intl__WEBPACK_IMPORTED_MODULE_0__","defaultMessage","ErrorBoundary","hasError","componentDidCatch","info","FallbackComponent","children","ReactDOM","TopSiteLink","react__WEBPACK_IMPORTED_MODULE_4___default","screenshotImage","onDragEvent","_allowDrop","dataTransfer","types","dragged","preventDefault","effectAllowed","setData","blur","link","content_src_lib_screenshot_utils__WEBPACK_IMPORTED_MODULE_5__","nextState","getNextStateFromProps","componentWillReceiveProps","defaultStyle","isDraggable","topSiteOuterClassName","isDragged","tippyTopIcon","faviconSize","letterFallback","imageClassName","imageStyle","smallFaviconStyle","smallFaviconFallback","showSmallFavicon","hasScreenshotImage","customScreenshotURL","backgroundColor","backgroundImage","_TopSitesConstants__WEBPACK_IMPORTED_MODULE_2__","favicon","draggableProps","onDragEnd","onDragStart","onMouseDown","onDrop","onDragOver","onDragEnter","onDragLeave","aria-hidden","data-fallback","style","isPinned","dir","TopSite","showContextMenu","onLinkClick","onMenuButtonClick","onMenuUpdate","_getTelemetryInfo","icon_type","iconType","card_type","userEvent","dispatch","action_position","altKey","button","ctrlKey","metaKey","shiftKey","OPEN_LINK","onActivate","isContextMenuOpen","activeIndex","label","hostname","react_intl__WEBPACK_IMPORTED_MODULE_1__","content_src_components_LinkMenu_LinkMenu__WEBPACK_IMPORTED_MODULE_3__","onUpdate","siteInfo","TopSitePlaceholder","onEditButtonClick","intl","formatMessage","_TopSiteList","DEFAULT_STATE","draggedIndex","draggedSite","draggedTitle","topSitesPreview","prevTopSites","newTopSites","dropped","_makeTopSitesPreview","TOP_SITES_INSERT","draggedFromIndex","_getTopSites","topSites","TopSitesRows","common_Reducers_jsm__WEBPACK_IMPORTED_MODULE_6__","pinnedOnly","unpinned","siteToInsert","holeIndex","indexStep","shiftingStep","nextIndex","shift","topSitesUI","commonProps","maxNarrowVisibleIndex","topSiteIconType","slotProps","TopSiteList","usablePerfObj","_PerfService","performanceObj","_perf","perfService","ChromeUtils","import","Services","appShell","hiddenDOMWindow","performance","now","mark","str","getEntriesByName","timeOrigin","absNow","getMostRecentAbsMarkStartByName","mostRecentEntry","startTime","RECORDED_SECTIONS","ComponentPerfTimer","react__WEBPACK_IMPORTED_MODULE_2___default","Component","perfSvc","common_PerfService_jsm__WEBPACK_IMPORTED_MODULE_1__","_sendBadStateEvent","_sendPaintedEvent","_reportMissingData","_timestampHandled","_recordedFirstRender","componentDidMount","_maybeSendPaintedEvent","componentDidUpdate","_afterFramePaint","callback","requestAnimationFrame","setTimeout","_maybeSendBadStateEvent","_ensureFirstRenderTsRecorded","dataReadyKey","firstRenderKey","parseInt","SAVE_SESSION_PERF_DATA","ex","SectionMenuOptions","Separator","MoveUp","icon","SECTION_MOVE","direction","disabled","isFirst","MoveDown","isLast","RemoveSection","showPrefName","CollapseSection","UPDATE_SECTION_PREFS","collapsed","ExpandSection","ManageSection","SETTINGS_OPEN","ManageWebExtension","OPEN_WEBEXT_SETTINGS","AddTopSite","PrivacyNotice","privacyNoticeURL","CheckCollapsed","VISIBLE","VISIBILITY_CHANGE_EVENT","getFormattedMessage","react__WEBPACK_IMPORTED_MODULE_3___default","DisclaimerIntl","onAcknowledge","common_Actions_jsm__WEBPACK_IMPORTED_MODULE_1__","disclaimerPref","eventSource","disclaimer","rel","_CollapsibleSection","onBodyMount","onHeaderClick","onTransitionEnd","enableOrDisableAnimation","onMenuButtonMouseEnter","onMenuButtonMouseLeave","enableAnimation","isAnimating","menuButtonHover","addEventListener","componentWillUpdate","sectionBody","scrollHeight","removeEventListener","visibilityState","maxHeight","content_src_lib_section_menu_options__WEBPACK_IMPORTED_MODULE_5__","currentTarget","renderIcon","isCollapsible","extraMenuOptions","isWebExtension","needsDisclaimer","active","data-section-id","onMouseEnter","onMouseLeave","content_src_components_SectionMenu_SectionMenu__WEBPACK_IMPORTED_MODULE_4__","extraOptions","content_src_components_ErrorBoundary_ErrorBoundary__WEBPACK_IMPORTED_MODULE_2__","ref","CollapsibleSection","ContextMenu","react__WEBPACK_IMPORTED_MODULE_0___default","hideContext","stopPropagation","role","option","ContextMenuItem","onKeyDown","first","last","tabIndex","DEFAULT_SITE_MENU_OPTIONS","LinkMenu","react_redux__WEBPACK_IMPORTED_MODULE_1__","isPrivateBrowsingEnabled","platform","react_intl__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_5___default","getOptions","isDefault","content_src_lib_link_menu_options__WEBPACK_IMPORTED_MODULE_4__","impression","string_id","userEventData","shouldSendImpressionStats","content_src_components_ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_2__","GetPlatformString","LinkMenuOptions","EmptyItem","RemoveBookmark","DELETE_BOOKMARK_BY_ID","AddBookmark","BOOKMARK_URL","OpenInNewWindow","OPEN_NEW_WINDOW","referrer","typedBonus","BlockUrl","BLOCK_URL","block","tiles","guid","pos","WebExtDismiss","WEBEXT_DISMISS","DeleteUrl","isEnabled","onConfirm","forceBlock","body_string_id","confirm_button_string_id","cancel_button_string_id","ShowFile","SHOW_DOWNLOAD_FILE","OpenFile","OPEN_DOWNLOAD_FILE","CopyDownloadLink","COPY_DOWNLOAD_LINK","GoToDownloadPage","RemoveDownload","REMOVE_DOWNLOAD_FILE","PinTopSite","TOP_SITES_PIN","UnpinTopSite","TOP_SITES_UNPIN","SaveToPocket","SAVE_TO_POCKET","pocket","DeleteFromPocket","ArchiveFromPocket","EditTopSite","CheckBookmark","CheckPinTopSite","CheckSavedToPocket","CheckBookmarkOrArchive","OpenInPrivateWindow","OPEN_PRIVATE_WINDOW","_OpenInPrivateWindow","redux__WEBPACK_IMPORTED_MODULE_1__","MERGE_STORE_ACTION","OUTGOING_MESSAGE_NAME","INCOMING_MESSAGE_NAME","EARLY_QUEUED_ACTIONS","PAGE_PRERENDERED","messageMiddleware","store","rehydrationMiddleware","_didRehydrate","isMergeStoreAction","NEW_TAB_STATE_REQUEST","_didRequestInitialState","queueEarlyMessageMiddleware","_receivedFromMain","_earlyActionQueue","initStore","initialState","mainReducer","mergeStateReducer","msg","dump","stack","PropTypes","Redux","cardContextTypes","history","intlID","bookmark","trending","download","gImageLoading","Card_Card","external_React_default","activeCard","imageLoaded","cardImage","maybeLoadImage","_this","imageUrl","loaderPromise","Promise","reject","loader","Image","src","catch","then","screenshot_utils","imageInState","WEBEXT_CLICK","click","contextMenuOptions","hasImage","outerClassName","placeholder","v","external_ReactIntl_","link_menu_options","description","Card","external_ReactRedux_","PlaceholderCard","localization_ReactLocalization","contexts","subs","subscribe","comp","unsubscribe","setMessages","relocalize","getMessageContext","formatCompound","mcx","fallback","isReactLocalization","propName","provider_LocalizationProvider","external_React_","l10n","getChildContext","only","childContextTypes","propTypes","external_PropTypes_default","element","isRequired","componentName","prop","TEMPLATE","vendor_omittedCloseTags","area","base","col","embed","hr","img","input","keygen","param","track","wbr","vendor_voidElementTags","voidElementTags","menuitem","reMarkup","localized_Localized","forceUpdate","elems","propname","propval","substr","toLowerCase","toArguments","messageValue","messageAttrs","localizedProps","translatedChildren","innerHTML","parseMarkup","childNodes","childNode","nodeType","TEXT_NODE","textContent","localName","sourceChild","contextTypes","IS_NEWTAB","documentURI","TopSiteFormInput_TopSiteFormInput","validationError","onChange","onMount","shouldFocus","focus","ev","showClearButton","onClear","typeUrl","titleId","loading","placeholderId","autoFocus","errorMessageId","TopSiteForm_TopSiteForm","customScreenshotUrl","showCustomScreenshotForm","onClearScreenshotInput","onLabelChange","onUrlChange","onCancelButtonClick","onClearUrlClick","onDoneButtonClick","onCustomScreenshotUrlChange","onPreviewButtonClick","onEnableScreenshotUrlForm","validateUrl","_updateCustomScreenshotInput","onClose","validateForm","cleanUrl","TopSitesConstants","_tryParseUrl","urlObj","validateCustomScreenshotUrl","validate","_renderCustomScreenshotInput","requestFailed","isLoading","showAsAdd","previous","previewMode","previewLink","ModalOverlay_ModalOverlay","body","classList","remove","button_label","OnboardingMessage_OnboardingCard","OnboardingMessage_OnboardingMessage","ALLOWED_STYLE_TAGS","Button","tag","border","template_utils","SnippetBase_SnippetBase","onBlockClicked","containerClassName","DEFAULT_ICON_PATH","SimpleSnippet_SimpleSnippet","onButtonClick","renderTitle","renderTitleIcon","titleIcon","title_icon","renderButton","button_url","color","button_color","button_background_color","hasLink","button_type","hasButton","tall","DetectUserSessionStart","_store","_perfService","_onVisibilityChange","sendEventOrAddListener","_sendEvent","visibility_event_rcvd_ts","StartupOverlay","react_redux__WEBPACK_IMPORTED_MODULE_2__","onInputChange","onSubmit","clickSkip","initScene","removeOverlay","emailInput","overlayRemoved","show","termsLink","privacyLink","method","required","terms","privacy","faviconRef","_TopSitesConstants__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_4__","topSitesRows","react_intl__WEBPACK_IMPORTED_MODULE_5__","onFormClose","_dispatchTopSitesStats","_getVisibleTopSites","topSitesIconsStats","custom_screenshot","screenshot_with_icon","tippytop","rich_icon","no_image","countTopSitesIconsTypes","topSitesPinned","topsites_icon_stats","topsites_pinned","sitesPerRow","common_Reducers_jsm__WEBPACK_IMPORTED_MODULE_7__","matchMedia","matches","content_src_components_ComponentPerfTimer_ComponentPerfTimer__WEBPACK_IMPORTED_MODULE_3__","content_src_components_CollapsibleSection_CollapsibleSection__WEBPACK_IMPORTED_MODULE_2__","_TopSite__WEBPACK_IMPORTED_MODULE_9__","_TopSiteForm__WEBPACK_IMPORTED_MODULE_8__","Topic","Topics","topics","read_more_endpoint","DEFAULT_SECTION_MENU_OPTIONS","WEBEXT_SECTION_MENU_OPTIONS","SectionMenu","react_intl__WEBPACK_IMPORTED_MODULE_2__","propOptions","content_src_lib_section_menu_options__WEBPACK_IMPORTED_MODULE_4__","content_src_components_ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_1__","CARDS_PER_ROW_DEFAULT","CARDS_PER_ROW_COMPACT_WIDE","Section","numRows","rowsPref","maxRows","_dispatchImpressionStats","cardsPerRow","compactCards","maxCards","cards","needsImpressionStats","common_Actions_jsm__WEBPACK_IMPORTED_MODULE_2__","impressionCardGuids","sendImpressionStatsOrAddListener","isCollapsed","wasCollapsed","emptyState","maxCardsPerRow","maxCardsOnNarrow","shouldShowTopics","realRows","shouldShowEmptyState","content_src_components_Card_Card__WEBPACK_IMPORTED_MODULE_0__","sectionClassName","content_src_components_ComponentPerfTimer_ComponentPerfTimer__WEBPACK_IMPORTED_MODULE_4__","content_src_components_CollapsibleSection_CollapsibleSection__WEBPACK_IMPORTED_MODULE_3__","feed","padding","background-image","content_src_components_Topics_Topics__WEBPACK_IMPORTED_MODULE_7__","SectionIntl","react_redux__WEBPACK_IMPORTED_MODULE_5__","renderSections","sections","enabledSections","sectionOrder","feeds.topsites","showTopSites","expectedCount","sectionId","split","content_src_components_TopSites_TopSites__WEBPACK_IMPORTED_MODULE_8__","react__WEBPACK_IMPORTED_MODULE_4__","Search","onInputMount","handleEvent","detail","gContentSearchController","search","healthReportKey","content_src_lib_constants__WEBPACK_IMPORTED_MODULE_3__","searchSource","ContentSearchUIController","parentNode","htmlFor","maxLength","initialPrefs","initialSections","_setValidation","validation","_validation","invalidatingPrefs","_invalidatingPrefs","oneOf","indexedDB","arePrefsValid","getPref","indexedDBPrefs","prefs","some","prefName","migrationExpired","showSearch","feeds.section.topstories","feeds.section.highlights","order","ManualMigration","onLaunchTour","onCancelTour","MIGRATION_START","MIGRATION_CANCEL","ConfirmDialog","_handleCancelBtn","_handleConfirmBtn","_renderModalMessage","message_body","ASRouterAdmin","onMessage","findOtherBundledMessagesOfSameTemplate","_asrouter_asrouter_content__WEBPACK_IMPORTED_MODULE_0__","bundled","handleBlock","handleUnblock","handleOverride","renderMessageItem","isCurrent","lastMessageId","isBlocked","itemClassName","renderMessages","renderProviders","providers","PrefsButton","react__WEBPACK_IMPORTED_MODULE_8___default","BaseContent","openPreferences","common_PrerenderData_jsm__WEBPACK_IMPORTED_MODULE_7__","content_src_components_ErrorBoundary_ErrorBoundary__WEBPACK_IMPORTED_MODULE_5__","content_src_components_Search_Search__WEBPACK_IMPORTED_MODULE_9__","content_src_components_ManualMigration_ManualMigration__WEBPACK_IMPORTED_MODULE_6__","content_src_components_Sections_Sections__WEBPACK_IMPORTED_MODULE_10__","content_src_components_ConfirmDialog_ConfirmDialog__WEBPACK_IMPORTED_MODULE_3__","isFirstrun","content_src_components_StartupOverlay_StartupOverlay__WEBPACK_IMPORTED_MODULE_11__","Base","locale","updateTheme","sendNewTabRehydrated","parentLocale","addLocaleDataForReactIntl","isPrerendered","bodyClassName","contains","renderNotified","NEW_TAB_REHYDRATED","strings","asrouterExperimentEnabled","asrouterOnboardingCohort","hash","content_src_components_ASRouterAdmin_ASRouterAdmin__WEBPACK_IMPORTED_MODULE_2__","ImpressionsWrapper","sendImpressionOrAddListener","sendOnMount","DATABASE_NAME","DATABASE_VERSION","SNIPPETS_OBJECTSTORE_NAME","SNIPPETS_UPDATE_INTERVAL_MS","SNIPPETS_ENABLED_EVENT","SNIPPETS_DISABLED_EVENT","SnippetsMap","_db","_dispatch","_dbTransaction","db","put","clear","blockSnippetById","SNIPPETS_BLOCKLIST_UPDATED","disableOnboarding","DISABLE_ONBOARDING","showFirefoxAccounts","SHOW_FIREFOX_ACCOUNTS","getTotalBookmarksCount","TOTAL_BOOKMARKS_REQUEST","TOTAL_BOOKMARKS_RESPONSE","getAddonsInfo","ADDONS_INFO_REQUEST","ADDONS_INFO_RESPONSE","connect","_this2","_openDB","_restoreFromDb","modifier","transaction","objectStore","onsuccess","onerror","openRequest","open","deleteDatabase","onupgradeneeded","objectStoreNames","createObjectStore","onversionchange","versionChangeEvent","close","cursorRequest","openCursor","cursor","continue","SnippetsProvider","gSnippetsMap","_onAction","snippetsMap","_refreshSnippets","_this3","appData","lastUpdate","snippetsURL","response","fetch","status","_noSnippetFallback","_forceOnboardingVisibility","shouldBeVisible","onboardingEl","display","_showRemoteSnippets","snippetsEl","elementId","scriptEl","getElementsByTagName","relocatedScript","replaceChild","_this4","dispatchEvent","Event","addSnippetsSubscriber","snippets","asrouterContent","content_src_asrouter_asrouter_content__WEBPACK_IMPORTED_MODULE_1__","initializing","getState","isASRouterEnabled","disableSnippets","content_src_lib_init_store__WEBPACK_IMPORTED_MODULE_4__","common_Reducers_jsm__WEBPACK_IMPORTED_MODULE_8__","gActivityStreamPrerenderedState","content_src_lib_detect_user_session_start__WEBPACK_IMPORTED_MODULE_3__","hydrate","content_src_components_Base_Base__WEBPACK_IMPORTED_MODULE_2__","documentElement","lang","gActivityStreamStrings","content_src_lib_snippets__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,oICAApC,EAAAU,EAAA2B,EAAA,sBAAAC,UAKyB,wBACG,2BACA,oCACb,EAQf,MAAMC,EAAwC,oBAAXC,OAPT,EAOuDC,EAS3EC,KACN,IAAK,MAAMC,KACT,sBACA,uBACA,sBACA,iCACA,YACA,eACA,qBACA,wBACA,qBACA,qBACA,gBACA,cACA,qBACA,mBACA,OACA,mBACA,sBACA,kBACA,eACA,wBACA,eACA,qBACA,wBACA,iBACA,qBACA,YACA,kBACA,sBACA,uBACA,mBACA,wBACA,0BACA,yBACA,uBACA,sBACA,sBACA,yBACA,uBACA,eACA,kBACA,yBACA,mBACA,uBACA,oBACA,yBACA,iBACA,qBACA,qBACA,kBACA,iBACA,eACA,0BACA,mBACA,iBACA,sBACA,iBACA,gBACA,WACA,qBACA,wBACA,iBACA,6BACA,6BACA,gBACA,iBACA,kBACA,eACA,cACA,6BACA,8BACA,4BACA,uBACA,eACA,wBACA,iBACA,mBACA,gBACA,0BACA,kBACA,oBACA,0BACA,2BACA,SACA,uBACA,eACA,kBAEAD,EAAYC,GAAQA,EAKtB,MAAMC,KACN,IAAK,MAAMD,KACT,8BACA,WACA,mBAEAC,EAAgBD,GAAQA,EAK1B,SAASE,EAAcC,EAAQC,GAC7B,MAAMC,EAAOF,EAAOE,KAAPlC,OAAAmC,UAAkBH,EAAOE,SACtC,IAAKD,IAAYA,EAAQG,OAASH,EAAQI,GACxC,MAAM,IAAIC,MAAM,kHAWlB,OAPC,OAAQ,KAAM,WAAY,aAAc,WAAY,aAAaC,QAAQxC,SAC9C,IAAfkC,EAAQlC,GACjBmC,EAAKnC,GAAKkC,EAAQlC,GACTmC,EAAKnC,WACPmC,EAAKnC,KAGhBC,OAAAmC,UAAWH,GAAQE,SAYrB,SAASM,EAAWR,EAAQS,EAAYC,GACtC,OAAOX,EAAcC,GACnBI,KAAMO,EACNN,GAAIO,EACJH,aACAC,cAsCJ,SAASG,EAAiBb,EAAQc,EAAQC,GACxC,IAAKD,EACH,MAAM,IAAIR,MAAM,kJAElB,OAAOP,EAAcC,GACnBI,KAAMQ,EACNP,GAAIM,EACJK,SAAUF,EACVC,oBAuHFE,mBA/IF,SAA4BjB,GAC1B,OAAOD,EAAcC,GACnBI,KAAMQ,EACNP,GAAIM,KA6INO,UApFF,SAAmBC,GACjB,OAAOX,GACLX,KAAMD,EAAYwB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","file":"activity-stream.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","module.exports = React;","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nthis.MAIN_MESSAGE_TYPE = \"ActivityStream:Main\";\nthis.CONTENT_MESSAGE_TYPE = \"ActivityStream:Content\";\nthis.PRELOAD_MESSAGE_TYPE = \"ActivityStream:PreloadedBrowser\";\nthis.UI_CODE = 1;\nthis.BACKGROUND_PROCESS = 2;\n\n/**\n * globalImportContext - Are we in UI code (i.e. react, a dom) or some kind of background process?\n *                       Use this in action creators if you need different logic\n *                       for ui/background processes.\n */\nconst globalImportContext = typeof Window === \"undefined\" ? BACKGROUND_PROCESS : UI_CODE;\n// Export for tests\nthis.globalImportContext = globalImportContext;\n\n// Create an object that avoids accidental differing key/value pairs:\n// {\n//   INIT: \"INIT\",\n//   UNINIT: \"UNINIT\"\n// }\nconst actionTypes = {};\nfor (const type of [\n  \"ADDONS_INFO_REQUEST\",\n  \"ADDONS_INFO_RESPONSE\",\n  \"ARCHIVE_FROM_POCKET\",\n  \"AS_ROUTER_TELEMETRY_USER_EVENT\",\n  \"BLOCK_URL\",\n  \"BOOKMARK_URL\",\n  \"COPY_DOWNLOAD_LINK\",\n  \"DELETE_BOOKMARK_BY_ID\",\n  \"DELETE_FROM_POCKET\",\n  \"DELETE_HISTORY_URL\",\n  \"DIALOG_CANCEL\",\n  \"DIALOG_OPEN\",\n  \"DISABLE_ONBOARDING\",\n  \"DOWNLOAD_CHANGED\",\n  \"INIT\",\n  \"MIGRATION_CANCEL\",\n  \"MIGRATION_COMPLETED\",\n  \"MIGRATION_START\",\n  \"NEW_TAB_INIT\",\n  \"NEW_TAB_INITIAL_STATE\",\n  \"NEW_TAB_LOAD\",\n  \"NEW_TAB_REHYDRATED\",\n  \"NEW_TAB_STATE_REQUEST\",\n  \"NEW_TAB_UNLOAD\",\n  \"OPEN_DOWNLOAD_FILE\",\n  \"OPEN_LINK\",\n  \"OPEN_NEW_WINDOW\",\n  \"OPEN_PRIVATE_WINDOW\",\n  \"OPEN_WEBEXT_SETTINGS\",\n  \"PAGE_PRERENDERED\",\n  \"PLACES_BOOKMARK_ADDED\",\n  \"PLACES_BOOKMARK_REMOVED\",\n  \"PLACES_HISTORY_CLEARED\",\n  \"PLACES_LINKS_CHANGED\",\n  \"PLACES_LINK_BLOCKED\",\n  \"PLACES_LINK_DELETED\",\n  \"PLACES_SAVED_TO_POCKET\",\n  \"PREFS_INITIAL_VALUES\",\n  \"PREF_CHANGED\",\n  \"PREVIEW_REQUEST\",\n  \"PREVIEW_REQUEST_CANCEL\",\n  \"PREVIEW_RESPONSE\",\n  \"REMOVE_DOWNLOAD_FILE\",\n  \"RICH_ICON_MISSING\",\n  \"SAVE_SESSION_PERF_DATA\",\n  \"SAVE_TO_POCKET\",\n  \"SCREENSHOT_UPDATED\",\n  \"SECTION_DEREGISTER\",\n  \"SECTION_DISABLE\",\n  \"SECTION_ENABLE\",\n  \"SECTION_MOVE\",\n  \"SECTION_OPTIONS_CHANGED\",\n  \"SECTION_REGISTER\",\n  \"SECTION_UPDATE\",\n  \"SECTION_UPDATE_CARD\",\n  \"SETTINGS_CLOSE\",\n  \"SETTINGS_OPEN\",\n  \"SET_PREF\",\n  \"SHOW_DOWNLOAD_FILE\",\n  \"SHOW_FIREFOX_ACCOUNTS\",\n  \"SKIPPED_SIGNIN\",\n  \"SNIPPETS_BLOCKLIST_CLEARED\",\n  \"SNIPPETS_BLOCKLIST_UPDATED\",\n  \"SNIPPETS_DATA\",\n  \"SNIPPETS_RESET\",\n  \"SNIPPET_BLOCKED\",\n  \"SUBMIT_EMAIL\",\n  \"SYSTEM_TICK\",\n  \"TELEMETRY_IMPRESSION_STATS\",\n  \"TELEMETRY_PERFORMANCE_EVENT\",\n  \"TELEMETRY_UNDESIRED_EVENT\",\n  \"TELEMETRY_USER_EVENT\",\n  \"THEME_UPDATE\",\n  \"TOP_SITES_CANCEL_EDIT\",\n  \"TOP_SITES_EDIT\",\n  \"TOP_SITES_INSERT\",\n  \"TOP_SITES_PIN\",\n  \"TOP_SITES_PREFS_UPDATED\",\n  \"TOP_SITES_UNPIN\",\n  \"TOP_SITES_UPDATED\",\n  \"TOTAL_BOOKMARKS_REQUEST\",\n  \"TOTAL_BOOKMARKS_RESPONSE\",\n  \"UNINIT\",\n  \"UPDATE_SECTION_PREFS\",\n  \"WEBEXT_CLICK\",\n  \"WEBEXT_DISMISS\"\n]) {\n  actionTypes[type] = type;\n}\n\n// These are acceptable actions for AS Router messages to have. They can show up\n// as call-to-action buttons in snippets, onboarding tour, etc.\nconst ASRouterActions = {};\nfor (const type of [\n  \"OPEN_PRIVATE_BROWSER_WINDOW\",\n  \"OPEN_URL\",\n  \"OPEN_ABOUT_PAGE\"\n]) {\n  ASRouterActions[type] = type;\n}\n\n// Helper function for creating routed actions between content and main\n// Not intended to be used by consumers\nfunction _RouteMessage(action, options) {\n  const meta = action.meta ? {...action.meta} : {};\n  if (!options || !options.from || !options.to) {\n    throw new Error(\"Routed Messages must have options as the second parameter, and must at least include a .from and .to property.\");\n  }\n  // For each of these fields, if they are passed as an option,\n  // add them to the action. If they are not defined, remove them.\n  [\"from\", \"to\", \"toTarget\", \"fromTarget\", \"skipMain\", \"skipLocal\"].forEach(o => {\n    if (typeof options[o] !== \"undefined\") {\n      meta[o] = options[o];\n    } else if (meta[o]) {\n      delete meta[o];\n    }\n  });\n  return {...action, meta};\n}\n\n/**\n * AlsoToMain - Creates a message that will be dispatched locally and also sent to the Main process.\n *\n * @param  {object} action Any redux action (required)\n * @param  {object} options\n * @param  {bool}   skipLocal Used by OnlyToMain to skip the main reducer\n * @param  {string} fromTarget The id of the content port from which the action originated. (optional)\n * @return {object} An action with added .meta properties\n */\nfunction AlsoToMain(action, fromTarget, skipLocal) {\n  return _RouteMessage(action, {\n    from: CONTENT_MESSAGE_TYPE,\n    to: MAIN_MESSAGE_TYPE,\n    fromTarget,\n    skipLocal\n  });\n}\n\n/**\n * OnlyToMain - Creates a message that will be sent to the Main process and skip the local reducer.\n *\n * @param  {object} action Any redux action (required)\n * @param  {object} options\n * @param  {string} fromTarget The id of the content port from which the action originated. (optional)\n * @return {object} An action with added .meta properties\n */\nfunction OnlyToMain(action, fromTarget) {\n  return AlsoToMain(action, fromTarget, true);\n}\n\n/**\n * BroadcastToContent - Creates a message that will be dispatched to main and sent to ALL content processes.\n *\n * @param  {object} action Any redux action (required)\n * @return {object} An action with added .meta properties\n */\nfunction BroadcastToContent(action) {\n  return _RouteMessage(action, {\n    from: MAIN_MESSAGE_TYPE,\n    to: CONTENT_MESSAGE_TYPE\n  });\n}\n\n/**\n * AlsoToOneContent - Creates a message that will be will be dispatched to the main store\n *                    and also sent to a particular Content process.\n *\n * @param  {object} action Any redux action (required)\n * @param  {string} target The id of a content port\n * @param  {bool} skipMain Used by OnlyToOneContent to skip the main process\n * @return {object} An action with added .meta properties\n */\nfunction AlsoToOneContent(action, target, skipMain) {\n  if (!target) {\n    throw new Error(\"You must provide a target ID as the second parameter of AlsoToOneContent. If you want to send to all content processes, use BroadcastToContent\");\n  }\n  return _RouteMessage(action, {\n    from: MAIN_MESSAGE_TYPE,\n    to: CONTENT_MESSAGE_TYPE,\n    toTarget: target,\n    skipMain\n  });\n}\n\n/**\n * OnlyToOneContent - Creates a message that will be sent to a particular Content process\n *                    and skip the main reducer.\n *\n * @param  {object} action Any redux action (required)\n * @param  {string} target The id of a content port\n * @return {object} An action with added .meta properties\n */\nfunction OnlyToOneContent(action, target) {\n  return AlsoToOneContent(action, target, true);\n}\n\n/**\n * AlsoToPreloaded - Creates a message that dispatched to the main reducer and also sent to the preloaded tab.\n *\n * @param  {object} action Any redux action (required)\n * @return {object} An action with added .meta properties\n */\nfunction AlsoToPreloaded(action) {\n  return _RouteMessage(action, {\n    from: MAIN_MESSAGE_TYPE,\n    to: PRELOAD_MESSAGE_TYPE\n  });\n}\n\n/**\n * UserEvent - A telemetry ping indicating a user action. This should only\n *                   be sent from the UI during a user session.\n *\n * @param  {object} data Fields to include in the ping (source, etc.)\n * @return {object} An AlsoToMain action\n */\nfunction UserEvent(data) {\n  return AlsoToMain({\n    type: actionTypes.TELEMETRY_USER_EVENT,\n    data\n  });\n}\n\n/**\n * ASRouterUserEvent - A telemetry ping indicating a user action from AS router. This should only\n *                     be sent from the UI during a user session.\n *\n * @param  {object} data Fields to include in the ping (source, etc.)\n * @return {object} An AlsoToMain action\n */\nfunction ASRouterUserEvent(data) {\n  return AlsoToMain({\n    type: actionTypes.AS_ROUTER_TELEMETRY_USER_EVENT,\n    data\n  });\n}\n\n/**\n * UndesiredEvent - A telemetry ping indicating an undesired state.\n *\n * @param  {object} data Fields to include in the ping (value, etc.)\n * @param  {int} importContext (For testing) Override the import context for testing.\n * @return {object} An action. For UI code, a AlsoToMain action.\n */\nfunction UndesiredEvent(data, importContext = globalImportContext) {\n  const action = {\n    type: actionTypes.TELEMETRY_UNDESIRED_EVENT,\n    data\n  };\n  return importContext === UI_CODE ? AlsoToMain(action) : action;\n}\n\n/**\n * PerfEvent - A telemetry ping indicating a performance-related event.\n *\n * @param  {object} data Fields to include in the ping (value, etc.)\n * @param  {int} importContext (For testing) Override the import context for testing.\n * @return {object} An action. For UI code, a AlsoToMain action.\n */\nfunction PerfEvent(data, importContext = globalImportContext) {\n  const action = {\n    type: actionTypes.TELEMETRY_PERFORMANCE_EVENT,\n    data\n  };\n  return importContext === UI_CODE ? AlsoToMain(action) : action;\n}\n\n/**\n * ImpressionStats - A telemetry ping indicating an impression stats.\n *\n * @param  {object} data Fields to include in the ping\n * @param  {int} importContext (For testing) Override the import context for testing.\n * #return {object} An action. For UI code, a AlsoToMain action.\n */\nfunction ImpressionStats(data, importContext = globalImportContext) {\n  const action = {\n    type: actionTypes.TELEMETRY_IMPRESSION_STATS,\n    data\n  };\n  return importContext === UI_CODE ? AlsoToMain(action) : action;\n}\n\nfunction SetPref(name, value, importContext = globalImportContext) {\n  const action = {type: actionTypes.SET_PREF, data: {name, value}};\n  return importContext === UI_CODE ? AlsoToMain(action) : action;\n}\n\nfunction WebExtEvent(type, data, importContext = globalImportContext) {\n  if (!data || !data.source) {\n    throw new Error(\"WebExtEvent actions should include a property \\\"source\\\", the id of the webextension that should receive the event.\");\n  }\n  const action = {type, data};\n  return importContext === UI_CODE ? AlsoToMain(action) : action;\n}\n\nthis.actionTypes = actionTypes;\nthis.ASRouterActions = ASRouterActions;\n\nthis.actionCreators = {\n  BroadcastToContent,\n  UserEvent,\n  ASRouterUserEvent,\n  UndesiredEvent,\n  PerfEvent,\n  ImpressionStats,\n  AlsoToOneContent,\n  OnlyToOneContent,\n  AlsoToMain,\n  OnlyToMain,\n  AlsoToPreloaded,\n  SetPref,\n  WebExtEvent\n};\n\n// These are helpers to test for certain kinds of actions\nthis.actionUtils = {\n  isSendToMain(action) {\n    if (!action.meta) {\n      return false;\n    }\n    return action.meta.to === MAIN_MESSAGE_TYPE && action.meta.from === CONTENT_MESSAGE_TYPE;\n  },\n  isBroadcastToContent(action) {\n    if (!action.meta) {\n      return false;\n    }\n    if (action.meta.to === CONTENT_MESSAGE_TYPE && !action.meta.toTarget) {\n      return true;\n    }\n    return false;\n  },\n  isSendToOneContent(action) {\n    if (!action.meta) {\n      return false;\n    }\n    if (action.meta.to === CONTENT_MESSAGE_TYPE && action.meta.toTarget) {\n      return true;\n    }\n    return false;\n  },\n  isSendToPreloaded(action) {\n    if (!action.meta) {\n      return false;\n    }\n    return action.meta.to === PRELOAD_MESSAGE_TYPE &&\n      action.meta.from === MAIN_MESSAGE_TYPE;\n  },\n  isFromMain(action) {\n    if (!action.meta) {\n      return false;\n    }\n    return action.meta.from === MAIN_MESSAGE_TYPE &&\n      action.meta.to === CONTENT_MESSAGE_TYPE;\n  },\n  getPortIdOfSender(action) {\n    return (action.meta && action.meta.fromTarget) || null;\n  },\n  _RouteMessage\n};\n\nconst EXPORTED_SYMBOLS = [\n  \"actionTypes\",\n  \"actionCreators\",\n  \"actionUtils\",\n  \"ASRouterActions\",\n  \"globalImportContext\",\n  \"UI_CODE\",\n  \"BACKGROUND_PROCESS\",\n  \"MAIN_MESSAGE_TYPE\",\n  \"CONTENT_MESSAGE_TYPE\",\n  \"PRELOAD_MESSAGE_TYPE\"\n];\n","module.exports = ReactIntl;","module.exports = ReactRedux;","export const TOP_SITES_SOURCE = \"TOP_SITES\";\nexport const TOP_SITES_CONTEXT_MENU_OPTIONS = [\"CheckPinTopSite\", \"EditTopSite\", \"Separator\",\n  \"OpenInNewWindow\", \"OpenInPrivateWindow\", \"Separator\", \"BlockUrl\", \"DeleteUrl\"];\n// minimum size necessary to show a rich icon instead of a screenshot\nexport const MIN_RICH_FAVICON_SIZE = 96;\n// minimum size necessary to show any icon in the top left corner with a screenshot\nexport const MIN_CORNER_FAVICON_SIZE = 16;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import {actionCreators as ac, ASRouterActions as ra} from \"common/Actions.jsm\";\nimport {LocalizationProvider, Localized} from \"fluent-react\";\nimport {OUTGOING_MESSAGE_NAME as AS_GENERAL_OUTGOING_MESSAGE_NAME} from \"content-src/lib/init-store\";\nimport {ImpressionsWrapper} from \"./components/ImpressionsWrapper/ImpressionsWrapper\";\nimport {MessageContext} from \"fluent\";\nimport {OnboardingMessage} from \"./templates/OnboardingMessage/OnboardingMessage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {safeURI} from \"./template-utils\";\nimport {SimpleSnippet} from \"./templates/SimpleSnippet/SimpleSnippet\";\n\nconst INCOMING_MESSAGE_NAME = \"ASRouter:parent-to-child\";\nconst OUTGOING_MESSAGE_NAME = \"ASRouter:child-to-parent\";\n\nexport const ASRouterUtils = {\n  addListener(listener) {\n    global.addMessageListener(INCOMING_MESSAGE_NAME, listener);\n  },\n  removeListener(listener) {\n    global.removeMessageListener(INCOMING_MESSAGE_NAME, listener);\n  },\n  sendMessage(action) {\n    global.sendAsyncMessage(OUTGOING_MESSAGE_NAME, action);\n  },\n  blockById(id) {\n    ASRouterUtils.sendMessage({type: \"BLOCK_MESSAGE_BY_ID\", data: {id}});\n  },\n  blockBundle(bundle) {\n    ASRouterUtils.sendMessage({type: \"BLOCK_BUNDLE\", data: {bundle}});\n  },\n  executeAction({button_action, button_action_params}) {\n    if (button_action in ra) {\n      ASRouterUtils.sendMessage({type: button_action, data: {button_action_params}});\n    }\n  },\n  unblockById(id) {\n    ASRouterUtils.sendMessage({type: \"UNBLOCK_MESSAGE_BY_ID\", data: {id}});\n  },\n  unblockBundle(bundle) {\n    ASRouterUtils.sendMessage({type: \"UNBLOCK_BUNDLE\", data: {bundle}});\n  },\n  getNextMessage() {\n    ASRouterUtils.sendMessage({type: \"GET_NEXT_MESSAGE\"});\n  },\n  overrideMessage(id) {\n    ASRouterUtils.sendMessage({type: \"OVERRIDE_MESSAGE\", data: {id}});\n  },\n  sendTelemetry(ping) {\n    const payload = ac.ASRouterUserEvent(ping);\n    global.sendAsyncMessage(AS_GENERAL_OUTGOING_MESSAGE_NAME, payload);\n  }\n};\n\n// Note: nextProps/prevProps refer to props passed to <ImpressionsWrapper />, not <ASRouterUISurface />\nfunction shouldSendImpressionOnUpdate(nextProps, prevProps) {\n  return (nextProps.message.id && (!prevProps.message || prevProps.message.id !== nextProps.message.id));\n}\n\nfunction generateMessages(content) {\n  const cx = new MessageContext(\"en-US\");\n  cx.addMessages(`RichTextSnippet = ${content}`);\n  return [cx];\n}\n\n// Elements allowed in snippet content\nconst ALLOWED_TAGS = {\n  b: <b />,\n  i: <i />,\n  u: <u />,\n  strong: <strong />,\n  em: <em />,\n  br: <br />\n};\n\n/**\n * Transform an object (tag name: {url}) into (tag name: anchor) where the url\n * is used as href, in order to render links inside a Fluent.Localized component.\n */\nexport function convertLinks(links, sendClick) {\n  if (links) {\n    return Object.keys(links).reduce((acc, linkTag) => {\n      acc[linkTag] = <a href={safeURI(links[linkTag].url)} data-metric={links[linkTag].metric} onClick={sendClick} />;\n      return acc;\n    }, {});\n  }\n\n  return null;\n}\n\n/**\n * Message wrapper used to sanitize markup and render HTML.\n */\nfunction RichText(props) {\n  return (\n    <Localized id=\"RichTextSnippet\" {...ALLOWED_TAGS} {...convertLinks(props.links, props.sendClick)}>\n      <span>{props.text}</span>\n    </Localized>\n  );\n}\n\nexport class ASRouterUISurface extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onMessageFromParent = this.onMessageFromParent.bind(this);\n    this.sendClick = this.sendClick.bind(this);\n    this.sendImpression = this.sendImpression.bind(this);\n    this.sendUserActionTelemetry = this.sendUserActionTelemetry.bind(this);\n    this.state = {message: {}, bundle: {}};\n  }\n\n  sendUserActionTelemetry(extraProps = {}) {\n    const {message, bundle} = this.state;\n    if (!message && !extraProps.message_id) {\n      throw new Error(`You must provide a message_id for bundled messages`);\n    }\n    const eventType = `${message.provider || bundle.provider}_user_event`;\n    ASRouterUtils.sendTelemetry({\n      message_id: message.id || extraProps.message_id,\n      source: extraProps.id,\n      action: eventType,\n      ...extraProps\n    });\n  }\n\n  sendImpression(extraProps) {\n    this.sendUserActionTelemetry({event: \"IMPRESSION\", ...extraProps});\n  }\n\n  // If link has a `metric` data attribute send it as part of the `value`\n  // telemetry field which can have arbitrary values.\n  // Used for router messages with links as part of the content.\n  sendClick(event) {\n    const metric = {\n      value: event.target.dataset.metric,\n      // Used for the `source` of the event. Needed to differentiate\n      // from other snippet or onboarding events that may occur.\n      id: \"NEWTAB_FOOTER_BAR_CONTENT\"\n    };\n    this.sendUserActionTelemetry({event: \"CLICK_BUTTON\", ...metric});\n  }\n\n  onBlockById(id) {\n    return () => ASRouterUtils.blockById(id);\n  }\n\n  clearBundle(bundle) {\n    return () => ASRouterUtils.blockBundle(bundle);\n  }\n\n  onMessageFromParent({data: action}) {\n    switch (action.type) {\n      case \"SET_MESSAGE\":\n        this.setState({message: action.data});\n        break;\n      case \"SET_BUNDLED_MESSAGES\":\n        this.setState({bundle: action.data});\n        break;\n      case \"CLEAR_MESSAGE\":\n        if (action.data.id === this.state.message.id) {\n          this.setState({message: {}});\n        }\n        break;\n      case \"CLEAR_BUNDLE\":\n        if (this.state.bundle.bundle) {\n          this.setState({bundle: {}});\n        }\n        break;\n      case \"CLEAR_ALL\":\n        this.setState({message: {}, bundle: {}});\n    }\n  }\n\n  componentWillMount() {\n    ASRouterUtils.addListener(this.onMessageFromParent);\n\n    // If we are loading about:welcome we want to trigger the onboarding messages\n    if (this.props.document.location.href === \"about:welcome\") {\n      ASRouterUtils.sendMessage({type: \"TRIGGER\", data: {trigger: \"firstRun\"}});\n    } else {\n      ASRouterUtils.sendMessage({type: \"CONNECT_UI_REQUEST\"});\n    }\n  }\n\n  componentWillUnmount() {\n    ASRouterUtils.removeListener(this.onMessageFromParent);\n  }\n\n  renderSnippets() {\n    return (\n      <ImpressionsWrapper\n        id=\"NEWTAB_FOOTER_BAR\"\n        message={this.state.message}\n        sendImpression={this.sendImpression}\n        shouldSendImpressionOnUpdate={shouldSendImpressionOnUpdate}\n        // This helps with testing\n        document={this.props.document}>\n          <LocalizationProvider messages={generateMessages(this.state.message.content.text)}>\n            <SimpleSnippet\n              {...this.state.message}\n              richText={<RichText text={this.state.message.content.text}\n                                  links={this.state.message.content.links}\n                                  sendClick={this.sendClick} />}\n              UISurface=\"NEWTAB_FOOTER_BAR\"\n              getNextMessage={ASRouterUtils.getNextMessage}\n              onBlock={this.onBlockById(this.state.message.id)}\n              sendUserActionTelemetry={this.sendUserActionTelemetry} />\n          </LocalizationProvider>\n      </ImpressionsWrapper>);\n  }\n\n  renderOnboarding() {\n    return (\n      <OnboardingMessage\n        {...this.state.bundle}\n        UISurface=\"NEWTAB_OVERLAY\"\n        onAction={ASRouterUtils.executeAction}\n        onDoneButton={this.clearBundle(this.state.bundle.bundle)}\n        getNextMessage={ASRouterUtils.getNextMessage}\n        sendUserActionTelemetry={this.sendUserActionTelemetry} />);\n  }\n\n  render() {\n    const {message, bundle} = this.state;\n    if (!message.id && !bundle.template) { return null; }\n    if (bundle.template === \"onboarding\") { return this.renderOnboarding(); }\n    return this.renderSnippets();\n  }\n}\n\nASRouterUISurface.defaultProps = {document: global.document};\n\nexport class ASRouterContent {\n  constructor() {\n    this.initialized = false;\n    this.containerElement = null;\n  }\n\n  _mount() {\n    this.containerElement = global.document.getElementById(\"snippets-container\");\n    ReactDOM.render(<ASRouterUISurface />, this.containerElement);\n  }\n\n  _unmount() {\n    ReactDOM.unmountComponentAtNode(this.containerElement);\n  }\n\n  init() {\n    this._mount();\n    this.initialized = true;\n  }\n\n  uninit() {\n    if (this.initialized) {\n      this._unmount();\n      this.initialized = false;\n    }\n  }\n}\n","/**\n * List of helper functions for screenshot-based images.\n *\n * There are two kinds of images:\n * 1. Remote Image: This is the image from the main process and it refers to\n *    the image in the React props. This can either be an object with the `data`\n *    and `path` properties, if it is a blob, or a string, if it is a normal image.\n * 2. Local Image: This is the image object in the content process and it refers\n *    to the image *object* in the React component's state. All local image\n *    objects have the `url` property, and an additional property `path`, if they\n *    are blobs.\n */\nexport const ScreenshotUtils = {\n  isBlob(isLocal, image) {\n    return !!(image && image.path && ((!isLocal && image.data) || (isLocal && image.url)));\n  },\n\n  // This should always be called with a remote image and not a local image.\n  createLocalImageObject(remoteImage) {\n    if (!remoteImage) {\n      return null;\n    }\n    if (this.isBlob(false, remoteImage)) {\n      return {url: global.URL.createObjectURL(remoteImage.data), path: remoteImage.path};\n    }\n    return {url: remoteImage};\n  },\n\n  // Revokes the object URL of the image if the local image is a blob.\n  // This should always be called with a local image and not a remote image.\n  maybeRevokeBlobObjectURL(localImage) {\n    if (this.isBlob(true, localImage)) {\n      global.URL.revokeObjectURL(localImage.url);\n    }\n  },\n\n  // Checks if remoteImage and localImage are the same.\n  isRemoteImageLocal(localImage, remoteImage) {\n    // Both remoteImage and localImage are present.\n    if (remoteImage && localImage) {\n      return this.isBlob(false, remoteImage) ?\n             localImage.path === remoteImage.path :\n             localImage.url === remoteImage;\n    }\n\n    // This will only handle the remaining three possible outcomes.\n    // (i.e. everything except when both image and localImage are present)\n    return !remoteImage && !localImage;\n  }\n};\n","export function safeURI(url) {\n  if (!url) {\n    return \"\";\n  }\n  const {protocol} = new URL(url);\n  const isAllowed = [\n    \"http:\",\n    \"https:\",\n    \"data:\",\n    \"resource:\",\n    \"chrome:\"\n  ].includes(protocol);\n  if (!isAllowed) {\n    console.warn(`The protocol ${protocol} is not allowed for template URLs.`); // eslint-disable-line no-console\n  }\n  return isAllowed ? url : \"\";\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nconst {actionTypes: at} = ChromeUtils.import(\"resource://activity-stream/common/Actions.jsm\", {});\nconst {Dedupe} = ChromeUtils.import(\"resource://activity-stream/common/Dedupe.jsm\", {});\n\nconst TOP_SITES_DEFAULT_ROWS = 1;\nconst TOP_SITES_MAX_SITES_PER_ROW = 8;\n\nconst dedupe = new Dedupe(site => site && site.url);\n\nconst INITIAL_STATE = {\n  App: {\n    // Have we received real data from the app yet?\n    initialized: false,\n    // The version of the system-addon\n    version: null\n  },\n  Snippets: {initialized: false},\n  TopSites: {\n    // Have we received real data from history yet?\n    initialized: false,\n    // The history (and possibly default) links\n    rows: [],\n    // Used in content only to dispatch action to TopSiteForm.\n    editForm: null\n  },\n  Prefs: {\n    initialized: false,\n    values: {}\n  },\n  Theme: {className: \"\"},\n  Dialog: {\n    visible: false,\n    data: {}\n  },\n  Sections: []\n};\n\nfunction App(prevState = INITIAL_STATE.App, action) {\n  switch (action.type) {\n    case at.INIT:\n      return Object.assign({}, prevState, action.data || {}, {initialized: true});\n    default:\n      return prevState;\n  }\n}\n\n/**\n * insertPinned - Inserts pinned links in their specified slots\n *\n * @param {array} a list of links\n * @param {array} a list of pinned links\n * @return {array} resulting list of links with pinned links inserted\n */\nfunction insertPinned(links, pinned) {\n  // Remove any pinned links\n  const pinnedUrls = pinned.map(link => link && link.url);\n  let newLinks = links.filter(link => (link ? !pinnedUrls.includes(link.url) : false));\n  newLinks = newLinks.map(link => {\n    if (link && link.isPinned) {\n      delete link.isPinned;\n      delete link.pinIndex;\n    }\n    return link;\n  });\n\n  // Then insert them in their specified location\n  pinned.forEach((val, index) => {\n    if (!val) { return; }\n    let link = Object.assign({}, val, {isPinned: true, pinIndex: index});\n    if (index > newLinks.length) {\n      newLinks[index] = link;\n    } else {\n      newLinks.splice(index, 0, link);\n    }\n  });\n\n  return newLinks;\n}\n\nfunction TopSites(prevState = INITIAL_STATE.TopSites, action) {\n  let hasMatch;\n  let newRows;\n  switch (action.type) {\n    case at.TOP_SITES_UPDATED:\n      if (!action.data || !action.data.links) {\n        return prevState;\n      }\n      return Object.assign({}, prevState, {initialized: true, rows: action.data.links}, action.data.pref ? {pref: action.data.pref} : {});\n    case at.TOP_SITES_PREFS_UPDATED:\n      return Object.assign({}, prevState, {pref: action.data.pref});\n    case at.TOP_SITES_EDIT:\n      return Object.assign({}, prevState, {\n        editForm: {\n          index: action.data.index,\n          previewResponse: null\n        }\n      });\n    case at.TOP_SITES_CANCEL_EDIT:\n      return Object.assign({}, prevState, {editForm: null});\n    case at.PREVIEW_RESPONSE:\n      if (!prevState.editForm || action.data.url !== prevState.editForm.previewUrl) {\n        return prevState;\n      }\n      return Object.assign({}, prevState, {\n        editForm: {\n          index: prevState.editForm.index,\n          previewResponse: action.data.preview,\n          previewUrl: action.data.url\n        }\n      });\n    case at.PREVIEW_REQUEST:\n      if (!prevState.editForm) {\n        return prevState;\n      }\n      return Object.assign({}, prevState, {\n        editForm: {\n          index: prevState.editForm.index,\n          previewResponse: null,\n          previewUrl: action.data.url\n        }\n      });\n    case at.PREVIEW_REQUEST_CANCEL:\n      if (!prevState.editForm) {\n        return prevState;\n      }\n      return Object.assign({}, prevState, {\n        editForm: {\n          index: prevState.editForm.index,\n          previewResponse: null\n        }\n      });\n    case at.SCREENSHOT_UPDATED:\n      newRows = prevState.rows.map(row => {\n        if (row && row.url === action.data.url) {\n          hasMatch = true;\n          return Object.assign({}, row, {screenshot: action.data.screenshot});\n        }\n        return row;\n      });\n      return hasMatch ? Object.assign({}, prevState, {rows: newRows}) : prevState;\n    case at.PLACES_BOOKMARK_ADDED:\n      if (!action.data) {\n        return prevState;\n      }\n      newRows = prevState.rows.map(site => {\n        if (site && site.url === action.data.url) {\n          const {bookmarkGuid, bookmarkTitle, dateAdded} = action.data;\n          return Object.assign({}, site, {bookmarkGuid, bookmarkTitle, bookmarkDateCreated: dateAdded});\n        }\n        return site;\n      });\n      return Object.assign({}, prevState, {rows: newRows});\n    case at.PLACES_BOOKMARK_REMOVED:\n      if (!action.data) {\n        return prevState;\n      }\n      newRows = prevState.rows.map(site => {\n        if (site && site.url === action.data.url) {\n          const newSite = Object.assign({}, site);\n          delete newSite.bookmarkGuid;\n          delete newSite.bookmarkTitle;\n          delete newSite.bookmarkDateCreated;\n          return newSite;\n        }\n        return site;\n      });\n      return Object.assign({}, prevState, {rows: newRows});\n    case at.PLACES_LINK_DELETED:\n      if (!action.data) {\n        return prevState;\n      }\n      newRows = prevState.rows.filter(site => action.data.url !== site.url);\n      return Object.assign({}, prevState, {rows: newRows});\n    default:\n      return prevState;\n  }\n}\n\nfunction Dialog(prevState = INITIAL_STATE.Dialog, action) {\n  switch (action.type) {\n    case at.DIALOG_OPEN:\n      return Object.assign({}, prevState, {visible: true, data: action.data});\n    case at.DIALOG_CANCEL:\n      return Object.assign({}, prevState, {visible: false});\n    case at.DELETE_HISTORY_URL:\n      return Object.assign({}, INITIAL_STATE.Dialog);\n    default:\n      return prevState;\n  }\n}\n\nfunction Prefs(prevState = INITIAL_STATE.Prefs, action) {\n  let newValues;\n  switch (action.type) {\n    case at.PREFS_INITIAL_VALUES:\n      return Object.assign({}, prevState, {initialized: true, values: action.data});\n    case at.PREF_CHANGED:\n      newValues = Object.assign({}, prevState.values);\n      newValues[action.data.name] = action.data.value;\n      return Object.assign({}, prevState, {values: newValues});\n    default:\n      return prevState;\n  }\n}\n\nfunction Sections(prevState = INITIAL_STATE.Sections, action) {\n  let hasMatch;\n  let newState;\n  switch (action.type) {\n    case at.SECTION_DEREGISTER:\n      return prevState.filter(section => section.id !== action.data);\n    case at.SECTION_REGISTER:\n      // If section exists in prevState, update it\n      newState = prevState.map(section => {\n        if (section && section.id === action.data.id) {\n          hasMatch = true;\n          return Object.assign({}, section, action.data);\n        }\n        return section;\n      });\n      // Otherwise, append it\n      if (!hasMatch) {\n        const initialized = !!(action.data.rows && action.data.rows.length > 0);\n        const section = Object.assign({title: \"\", rows: [], enabled: false}, action.data, {initialized});\n        newState.push(section);\n      }\n      return newState;\n    case at.SECTION_UPDATE:\n      newState = prevState.map(section => {\n        if (section && section.id === action.data.id) {\n          // If the action is updating rows, we should consider initialized to be true.\n          // This can be overridden if initialized is defined in the action.data\n          const initialized = action.data.rows ? {initialized: true} : {};\n\n          // Make sure pinned cards stay at their current position when rows are updated.\n          // Disabling a section (SECTION_UPDATE with empty rows) does not retain pinned cards.\n          if (action.data.rows && action.data.rows.length > 0 && section.rows.find(card => card.pinned)) {\n            const rows = Array.from(action.data.rows);\n            section.rows.forEach((card, index) => {\n              if (card.pinned) {\n                rows.splice(index, 0, card);\n              }\n            });\n            return Object.assign({}, section, initialized, Object.assign({}, action.data, {rows}));\n          }\n\n          return Object.assign({}, section, initialized, action.data);\n        }\n        return section;\n      });\n\n      if (!action.data.dedupeConfigurations) {\n        return newState;\n      }\n\n      action.data.dedupeConfigurations.forEach(dedupeConf => {\n        newState = newState.map(section => {\n          if (section.id === dedupeConf.id) {\n            const dedupedRows = dedupeConf.dedupeFrom.reduce((rows, dedupeSectionId) => {\n              const dedupeSection = newState.find(s => s.id === dedupeSectionId);\n              const [, newRows] = dedupe.group(dedupeSection.rows, rows);\n              return newRows;\n            }, section.rows);\n\n            return Object.assign({}, section, {rows: dedupedRows});\n          }\n\n          return section;\n        });\n      });\n\n      return newState;\n    case at.SECTION_UPDATE_CARD:\n      return prevState.map(section => {\n        if (section && section.id === action.data.id && section.rows) {\n          const newRows = section.rows.map(card => {\n            if (card.url === action.data.url) {\n              return Object.assign({}, card, action.data.options);\n            }\n            return card;\n          });\n          return Object.assign({}, section, {rows: newRows});\n        }\n        return section;\n      });\n    case at.PLACES_BOOKMARK_ADDED:\n      if (!action.data) {\n        return prevState;\n      }\n      return prevState.map(section => Object.assign({}, section, {\n        rows: section.rows.map(item => {\n          // find the item within the rows that is attempted to be bookmarked\n          if (item.url === action.data.url) {\n            const {bookmarkGuid, bookmarkTitle, dateAdded} = action.data;\n            return Object.assign({}, item, {\n              bookmarkGuid,\n              bookmarkTitle,\n              bookmarkDateCreated: dateAdded,\n              type: \"bookmark\"\n            });\n          }\n          return item;\n        })\n      }));\n    case at.PLACES_SAVED_TO_POCKET:\n      if (!action.data) {\n        return prevState;\n      }\n      return prevState.map(section => Object.assign({}, section, {\n        rows: section.rows.map(item => {\n          if (item.url === action.data.url) {\n            return Object.assign({}, item, {\n              open_url: action.data.open_url,\n              pocket_id: action.data.pocket_id,\n              title: action.data.title,\n              type: \"pocket\"\n            });\n          }\n          return item;\n        })\n      }));\n    case at.PLACES_BOOKMARK_REMOVED:\n      if (!action.data) {\n        return prevState;\n      }\n      return prevState.map(section => Object.assign({}, section, {\n        rows: section.rows.map(item => {\n          // find the bookmark within the rows that is attempted to be removed\n          if (item.url === action.data.url) {\n            const newSite = Object.assign({}, item);\n            delete newSite.bookmarkGuid;\n            delete newSite.bookmarkTitle;\n            delete newSite.bookmarkDateCreated;\n            if (!newSite.type || newSite.type === \"bookmark\") {\n              newSite.type = \"history\";\n            }\n            return newSite;\n          }\n          return item;\n        })\n      }));\n    case at.PLACES_LINK_DELETED:\n    case at.PLACES_LINK_BLOCKED:\n      if (!action.data) {\n        return prevState;\n      }\n      return prevState.map(section =>\n        Object.assign({}, section, {rows: section.rows.filter(site => site.url !== action.data.url)}));\n    case at.DELETE_FROM_POCKET:\n    case at.ARCHIVE_FROM_POCKET:\n      return prevState.map(section =>\n        Object.assign({}, section, {rows: section.rows.filter(site => site.pocket_id !== action.data.pocket_id)}));\n    default:\n      return prevState;\n  }\n}\n\nfunction Snippets(prevState = INITIAL_STATE.Snippets, action) {\n  switch (action.type) {\n    case at.SNIPPETS_DATA:\n      return Object.assign({}, prevState, {initialized: true}, action.data);\n    case at.SNIPPET_BLOCKED:\n      return Object.assign({}, prevState, {blockList: prevState.blockList.concat(action.data)});\n    case at.SNIPPETS_BLOCKLIST_CLEARED:\n      return Object.assign({}, prevState, {blockList: []});\n    case at.SNIPPETS_RESET:\n      return INITIAL_STATE.Snippets;\n    default:\n      return prevState;\n  }\n}\n\nfunction Theme(prevState = INITIAL_STATE.Theme, action) {\n  switch (action.type) {\n    case at.THEME_UPDATE:\n      return Object.assign({}, prevState, action.data);\n    default:\n      return prevState;\n  }\n}\n\nthis.INITIAL_STATE = INITIAL_STATE;\nthis.TOP_SITES_DEFAULT_ROWS = TOP_SITES_DEFAULT_ROWS;\nthis.TOP_SITES_MAX_SITES_PER_ROW = TOP_SITES_MAX_SITES_PER_ROW;\n\nthis.reducers = {TopSites, App, Snippets, Prefs, Dialog, Sections, Theme};\n\nconst EXPORTED_SYMBOLS = [\"reducers\", \"INITIAL_STATE\", \"insertPinned\", \"TOP_SITES_DEFAULT_ROWS\", \"TOP_SITES_MAX_SITES_PER_ROW\"];\n","this.Dedupe = class Dedupe {\n  constructor(createKey) {\n    this.createKey = createKey || this.defaultCreateKey;\n  }\n\n  defaultCreateKey(item) {\n    return item;\n  }\n\n  /**\n   * Dedupe any number of grouped elements favoring those from earlier groups.\n   *\n   * @param {Array} groups Contains an arbitrary number of arrays of elements.\n   * @returns {Array} A matching array of each provided group deduped.\n   */\n  group(...groups) {\n    const globalKeys = new Set();\n    const result = [];\n    for (const values of groups) {\n      const valueMap = new Map();\n      for (const value of values) {\n        const key = this.createKey(value);\n        if (!globalKeys.has(key) && !valueMap.has(key)) {\n          valueMap.set(key, value);\n        }\n      }\n      result.push(valueMap);\n      valueMap.forEach((value, key) => globalKeys.add(key));\n    }\n    return result.map(m => Array.from(m.values()));\n  }\n};\n\nconst EXPORTED_SYMBOLS = [\"Dedupe\"];\n","/*  eslint no-magic-numbers: [0]  */\n\nconst MAX_PLACEABLES = 100;\n\nconst entryIdentifierRe = /-?[a-zA-Z][a-zA-Z0-9_-]*/y;\nconst identifierRe = /[a-zA-Z][a-zA-Z0-9_-]*/y;\nconst functionIdentifierRe = /^[A-Z][A-Z_?-]*$/;\n\n/**\n * The `Parser` class is responsible for parsing FTL resources.\n *\n * It's only public method is `getResource(source)` which takes an FTL string\n * and returns a two element Array with an Object of entries generated from the\n * source as the first element and an array of SyntaxError objects as the\n * second.\n *\n * This parser is optimized for runtime performance.\n *\n * There is an equivalent of this parser in syntax/parser which is\n * generating full AST which is useful for FTL tools.\n */\nclass RuntimeParser {\n  /**\n   * Parse FTL code into entries formattable by the MessageContext.\n   *\n   * Given a string of FTL syntax, return a map of entries that can be passed\n   * to MessageContext.format and a list of errors encountered during parsing.\n   *\n   * @param {String} string\n   * @returns {Array<Object, Array>}\n   */\n  getResource(string) {\n    this._source = string;\n    this._index = 0;\n    this._length = string.length;\n    this.entries = {};\n\n    const errors = [];\n\n    this.skipWS();\n    while (this._index < this._length) {\n      try {\n        this.getEntry();\n      } catch (e) {\n        if (e instanceof SyntaxError) {\n          errors.push(e);\n\n          this.skipToNextEntryStart();\n        } else {\n          throw e;\n        }\n      }\n      this.skipWS();\n    }\n\n    return [this.entries, errors];\n  }\n\n  /**\n   * Parse the source string from the current index as an FTL entry\n   * and add it to object's entries property.\n   *\n   * @private\n   */\n  getEntry() {\n    // The index here should either be at the beginning of the file\n    // or right after new line.\n    if (this._index !== 0 &&\n        this._source[this._index - 1] !== \"\\n\") {\n      throw this.error(`Expected an entry to start\n        at the beginning of the file or on a new line.`);\n    }\n\n    const ch = this._source[this._index];\n\n    // We don't care about comments or sections at runtime\n    if (ch === \"/\" ||\n      (ch === \"#\" &&\n        [\" \", \"#\", \"\\n\"].includes(this._source[this._index + 1]))) {\n      this.skipComment();\n      return;\n    }\n\n    if (ch === \"[\") {\n      this.skipSection();\n      return;\n    }\n\n    this.getMessage();\n  }\n\n  /**\n   * Skip the section entry from the current index.\n   *\n   * @private\n   */\n  skipSection() {\n    this._index += 1;\n    if (this._source[this._index] !== \"[\") {\n      throw this.error('Expected \"[[\" to open a section');\n    }\n\n    this._index += 1;\n\n    this.skipInlineWS();\n    this.getVariantName();\n    this.skipInlineWS();\n\n    if (this._source[this._index] !== \"]\" ||\n        this._source[this._index + 1] !== \"]\") {\n      throw this.error('Expected \"]]\" to close a section');\n    }\n\n    this._index += 2;\n  }\n\n  /**\n   * Parse the source string from the current index as an FTL message\n   * and add it to the entries property on the Parser.\n   *\n   * @private\n   */\n  getMessage() {\n    const id = this.getEntryIdentifier();\n\n    this.skipInlineWS();\n\n    if (this._source[this._index] === \"=\") {\n      this._index++;\n    }\n\n    this.skipInlineWS();\n\n    const val = this.getPattern();\n\n    if (id.startsWith(\"-\") && val === null) {\n      throw this.error(\"Expected term to have a value\");\n    }\n\n    let attrs = null;\n\n    if (this._source[this._index] === \" \") {\n      const lineStart = this._index;\n      this.skipInlineWS();\n\n      if (this._source[this._index] === \".\") {\n        this._index = lineStart;\n        attrs = this.getAttributes();\n      }\n    }\n\n    if (attrs === null && typeof val === \"string\") {\n      this.entries[id] = val;\n    } else {\n      if (val === null && attrs === null) {\n        throw this.error(\"Expected message to have a value or attributes\");\n      }\n\n      this.entries[id] = {};\n\n      if (val !== null) {\n        this.entries[id].val = val;\n      }\n\n      if (attrs !== null) {\n        this.entries[id].attrs = attrs;\n      }\n    }\n  }\n\n  /**\n   * Skip whitespace.\n   *\n   * @private\n   */\n  skipWS() {\n    let ch = this._source[this._index];\n    while (ch === \" \" || ch === \"\\n\" || ch === \"\\t\" || ch === \"\\r\") {\n      ch = this._source[++this._index];\n    }\n  }\n\n  /**\n   * Skip inline whitespace (space and \\t).\n   *\n   * @private\n   */\n  skipInlineWS() {\n    let ch = this._source[this._index];\n    while (ch === \" \" || ch === \"\\t\") {\n      ch = this._source[++this._index];\n    }\n  }\n\n  /**\n   * Skip blank lines.\n   *\n   * @private\n   */\n  skipBlankLines() {\n    while (true) {\n      const ptr = this._index;\n\n      this.skipInlineWS();\n\n      if (this._source[this._index] === \"\\n\") {\n        this._index += 1;\n      } else {\n        this._index = ptr;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Get identifier using the provided regex.\n   *\n   * By default this will get identifiers of public messages, attributes and\n   * external arguments (without the $).\n   *\n   * @returns {String}\n   * @private\n   */\n  getIdentifier(re = identifierRe) {\n    re.lastIndex = this._index;\n    const result = re.exec(this._source);\n\n    if (result === null) {\n      this._index += 1;\n      throw this.error(`Expected an identifier [${re.toString()}]`);\n    }\n\n    this._index = re.lastIndex;\n    return result[0];\n  }\n\n  /**\n   * Get identifier of a Message or a Term (staring with a dash).\n   *\n   * @returns {String}\n   * @private\n   */\n  getEntryIdentifier() {\n    return this.getIdentifier(entryIdentifierRe);\n  }\n\n  /**\n   * Get Variant name.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getVariantName() {\n    let name = \"\";\n\n    const start = this._index;\n    let cc = this._source.charCodeAt(this._index);\n\n    if ((cc >= 97 && cc <= 122) || // a-z\n        (cc >= 65 && cc <= 90) || // A-Z\n        cc === 95 || cc === 32) { // _ <space>\n      cc = this._source.charCodeAt(++this._index);\n    } else {\n      throw this.error(\"Expected a keyword (starting with [a-zA-Z_])\");\n    }\n\n    while ((cc >= 97 && cc <= 122) || // a-z\n           (cc >= 65 && cc <= 90) || // A-Z\n           (cc >= 48 && cc <= 57) || // 0-9\n           cc === 95 || cc === 45 || cc === 32) { // _- <space>\n      cc = this._source.charCodeAt(++this._index);\n    }\n\n    // If we encountered the end of name, we want to test if the last\n    // collected character is a space.\n    // If it is, we will backtrack to the last non-space character because\n    // the keyword cannot end with a space character.\n    while (this._source.charCodeAt(this._index - 1) === 32) {\n      this._index--;\n    }\n\n    name += this._source.slice(start, this._index);\n\n    return { type: \"varname\", name };\n  }\n\n  /**\n   * Get simple string argument enclosed in `\"`.\n   *\n   * @returns {String}\n   * @private\n   */\n  getString() {\n    const start = this._index + 1;\n\n    while (++this._index < this._length) {\n      const ch = this._source[this._index];\n\n      if (ch === '\"') {\n        break;\n      }\n\n      if (ch === \"\\n\") {\n        throw this.error(\"Unterminated string expression\");\n      }\n    }\n\n    return this._source.substring(start, this._index++);\n  }\n\n  /**\n   * Parses a Message pattern.\n   * Message Pattern may be a simple string or an array of strings\n   * and placeable expressions.\n   *\n   * @returns {String|Array}\n   * @private\n   */\n  getPattern() {\n    // We're going to first try to see if the pattern is simple.\n    // If it is we can just look for the end of the line and read the string.\n    //\n    // Then, if either the line contains a placeable opening `{` or the\n    // next line starts an indentation, we switch to complex pattern.\n    const start = this._index;\n    let eol = this._source.indexOf(\"\\n\", this._index);\n\n    if (eol === -1) {\n      eol = this._length;\n    }\n\n    const firstLineContent = start !== eol ?\n      this._source.slice(start, eol) : null;\n\n    if (firstLineContent && firstLineContent.includes(\"{\")) {\n      return this.getComplexPattern();\n    }\n\n    this._index = eol + 1;\n\n    this.skipBlankLines();\n\n    if (this._source[this._index] !== \" \") {\n      // No indentation means we're done with this message. Callers should check\n      // if the return value here is null. It may be OK for messages, but not OK\n      // for terms, attributes and variants.\n      return firstLineContent;\n    }\n\n    const lineStart = this._index;\n\n    this.skipInlineWS();\n\n    if (this._source[this._index] === \".\") {\n      // The pattern is followed by an attribute. Rewind _index to the first\n      // column of the current line as expected by getAttributes.\n      this._index = lineStart;\n      return firstLineContent;\n    }\n\n    if (firstLineContent) {\n      // It's a multiline pattern which started on the same line as the\n      // identifier. Reparse the whole pattern to make sure we get all of it.\n      this._index = start;\n    }\n\n    return this.getComplexPattern();\n  }\n\n  /**\n   * Parses a complex Message pattern.\n   * This function is called by getPattern when the message is multiline,\n   * or contains escape chars or placeables.\n   * It does full parsing of complex patterns.\n   *\n   * @returns {Array}\n   * @private\n   */\n  /* eslint-disable complexity */\n  getComplexPattern() {\n    let buffer = \"\";\n    const content = [];\n    let placeables = 0;\n\n    let ch = this._source[this._index];\n\n    while (this._index < this._length) {\n      // This block handles multi-line strings combining strings separated\n      // by new line.\n      if (ch === \"\\n\") {\n        this._index++;\n\n        // We want to capture the start and end pointers\n        // around blank lines and add them to the buffer\n        // but only if the blank lines are in the middle\n        // of the string.\n        const blankLinesStart = this._index;\n        this.skipBlankLines();\n        const blankLinesEnd = this._index;\n\n\n        if (this._source[this._index] !== \" \") {\n          break;\n        }\n        this.skipInlineWS();\n\n        if (this._source[this._index] === \"}\" ||\n            this._source[this._index] === \"[\" ||\n            this._source[this._index] === \"*\" ||\n            this._source[this._index] === \".\") {\n          this._index = blankLinesEnd;\n          break;\n        }\n\n        buffer += this._source.substring(blankLinesStart, blankLinesEnd);\n\n        if (buffer.length || content.length) {\n          buffer += \"\\n\";\n        }\n        ch = this._source[this._index];\n        continue;\n      } else if (ch === \"\\\\\") {\n        const ch2 = this._source[this._index + 1];\n        if (ch2 === '\"' || ch2 === \"{\" || ch2 === \"\\\\\") {\n          ch = ch2;\n          this._index++;\n        }\n      } else if (ch === \"{\") {\n        // Push the buffer to content array right before placeable\n        if (buffer.length) {\n          content.push(buffer);\n        }\n        if (placeables > MAX_PLACEABLES - 1) {\n          throw this.error(\n            `Too many placeables, maximum allowed is ${MAX_PLACEABLES}`);\n        }\n        buffer = \"\";\n        content.push(this.getPlaceable());\n\n        this._index++;\n\n        ch = this._source[this._index];\n        placeables++;\n        continue;\n      }\n\n      if (ch) {\n        buffer += ch;\n      }\n      this._index++;\n      ch = this._source[this._index];\n    }\n\n    if (content.length === 0) {\n      return buffer.length ? buffer : null;\n    }\n\n    if (buffer.length) {\n      content.push(buffer);\n    }\n\n    return content;\n  }\n  /* eslint-enable complexity */\n\n  /**\n   * Parses a single placeable in a Message pattern and returns its\n   * expression.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getPlaceable() {\n    const start = ++this._index;\n\n    this.skipWS();\n\n    if (this._source[this._index] === \"*\" ||\n       (this._source[this._index] === \"[\" &&\n        this._source[this._index + 1] !== \"]\")) {\n      const variants = this.getVariants();\n\n      return {\n        type: \"sel\",\n        exp: null,\n        vars: variants[0],\n        def: variants[1]\n      };\n    }\n\n    // Rewind the index and only support in-line white-space now.\n    this._index = start;\n    this.skipInlineWS();\n\n    const selector = this.getSelectorExpression();\n\n    this.skipWS();\n\n    const ch = this._source[this._index];\n\n    if (ch === \"}\") {\n      if (selector.type === \"attr\" && selector.id.name.startsWith(\"-\")) {\n        throw this.error(\n          \"Attributes of private messages cannot be interpolated.\"\n        );\n      }\n\n      return selector;\n    }\n\n    if (ch !== \"-\" || this._source[this._index + 1] !== \">\") {\n      throw this.error('Expected \"}\" or \"->\"');\n    }\n\n    if (selector.type === \"ref\") {\n      throw this.error(\"Message references cannot be used as selectors.\");\n    }\n\n    if (selector.type === \"var\") {\n      throw this.error(\"Variants cannot be used as selectors.\");\n    }\n\n    if (selector.type === \"attr\" && !selector.id.name.startsWith(\"-\")) {\n      throw this.error(\n        \"Attributes of public messages cannot be used as selectors.\"\n      );\n    }\n\n\n    this._index += 2; // ->\n\n    this.skipInlineWS();\n\n    if (this._source[this._index] !== \"\\n\") {\n      throw this.error(\"Variants should be listed in a new line\");\n    }\n\n    this.skipWS();\n\n    const variants = this.getVariants();\n\n    if (variants[0].length === 0) {\n      throw this.error(\"Expected members for the select expression\");\n    }\n\n    return {\n      type: \"sel\",\n      exp: selector,\n      vars: variants[0],\n      def: variants[1]\n    };\n  }\n\n  /**\n   * Parses a selector expression.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getSelectorExpression() {\n    const literal = this.getLiteral();\n\n    if (literal.type !== \"ref\") {\n      return literal;\n    }\n\n    if (this._source[this._index] === \".\") {\n      this._index++;\n\n      const name = this.getIdentifier();\n      this._index++;\n      return {\n        type: \"attr\",\n        id: literal,\n        name\n      };\n    }\n\n    if (this._source[this._index] === \"[\") {\n      this._index++;\n\n      const key = this.getVariantKey();\n      this._index++;\n      return {\n        type: \"var\",\n        id: literal,\n        key\n      };\n    }\n\n    if (this._source[this._index] === \"(\") {\n      this._index++;\n      const args = this.getCallArgs();\n\n      if (!functionIdentifierRe.test(literal.name)) {\n        throw this.error(\"Function names must be all upper-case\");\n      }\n\n      this._index++;\n\n      literal.type = \"fun\";\n\n      return {\n        type: \"call\",\n        fun: literal,\n        args\n      };\n    }\n\n    return literal;\n  }\n\n  /**\n   * Parses call arguments for a CallExpression.\n   *\n   * @returns {Array}\n   * @private\n   */\n  getCallArgs() {\n    const args = [];\n\n    while (this._index < this._length) {\n      this.skipInlineWS();\n\n      if (this._source[this._index] === \")\") {\n        return args;\n      }\n\n      const exp = this.getSelectorExpression();\n\n      // MessageReference in this place may be an entity reference, like:\n      // `call(foo)`, or, if it's followed by `:` it will be a key-value pair.\n      if (exp.type !== \"ref\") {\n        args.push(exp);\n      } else {\n        this.skipInlineWS();\n\n        if (this._source[this._index] === \":\") {\n          this._index++;\n          this.skipInlineWS();\n\n          const val = this.getSelectorExpression();\n\n          // If the expression returned as a value of the argument\n          // is not a quote delimited string or number, throw.\n          //\n          // We don't have to check here if the pattern is quote delimited\n          // because that's the only type of string allowed in expressions.\n          if (typeof val === \"string\" ||\n              Array.isArray(val) ||\n              val.type === \"num\") {\n            args.push({\n              type: \"narg\",\n              name: exp.name,\n              val\n            });\n          } else {\n            this._index = this._source.lastIndexOf(\":\", this._index) + 1;\n            throw this.error(\n              \"Expected string in quotes, number.\");\n          }\n\n        } else {\n          args.push(exp);\n        }\n      }\n\n      this.skipInlineWS();\n\n      if (this._source[this._index] === \")\") {\n        break;\n      } else if (this._source[this._index] === \",\") {\n        this._index++;\n      } else {\n        throw this.error('Expected \",\" or \")\"');\n      }\n    }\n\n    return args;\n  }\n\n  /**\n   * Parses an FTL Number.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getNumber() {\n    let num = \"\";\n    let cc = this._source.charCodeAt(this._index);\n\n    // The number literal may start with negative sign `-`.\n    if (cc === 45) {\n      num += \"-\";\n      cc = this._source.charCodeAt(++this._index);\n    }\n\n    // next, we expect at least one digit\n    if (cc < 48 || cc > 57) {\n      throw this.error(`Unknown literal \"${num}\"`);\n    }\n\n    // followed by potentially more digits\n    while (cc >= 48 && cc <= 57) {\n      num += this._source[this._index++];\n      cc = this._source.charCodeAt(this._index);\n    }\n\n    // followed by an optional decimal separator `.`\n    if (cc === 46) {\n      num += this._source[this._index++];\n      cc = this._source.charCodeAt(this._index);\n\n      // followed by at least one digit\n      if (cc < 48 || cc > 57) {\n        throw this.error(`Unknown literal \"${num}\"`);\n      }\n\n      // and optionally more digits\n      while (cc >= 48 && cc <= 57) {\n        num += this._source[this._index++];\n        cc = this._source.charCodeAt(this._index);\n      }\n    }\n\n    return {\n      type: \"num\",\n      val: num\n    };\n  }\n\n  /**\n   * Parses a list of Message attributes.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getAttributes() {\n    const attrs = {};\n\n    while (this._index < this._length) {\n      if (this._source[this._index] !== \" \") {\n        break;\n      }\n      this.skipInlineWS();\n\n      if (this._source[this._index] !== \".\") {\n        break;\n      }\n      this._index++;\n\n      const key = this.getIdentifier();\n\n      this.skipInlineWS();\n\n      if (this._source[this._index] !== \"=\") {\n        throw this.error('Expected \"=\"');\n      }\n      this._index++;\n\n      this.skipInlineWS();\n\n      const val = this.getPattern();\n\n      if (val === null) {\n        throw this.error(\"Expected attribute to have a value\");\n      }\n\n      if (typeof val === \"string\") {\n        attrs[key] = val;\n      } else {\n        attrs[key] = {\n          val\n        };\n      }\n\n      this.skipBlankLines();\n    }\n\n    return attrs;\n  }\n\n  /**\n   * Parses a list of Selector variants.\n   *\n   * @returns {Array}\n   * @private\n   */\n  getVariants() {\n    const variants = [];\n    let index = 0;\n    let defaultIndex;\n\n    while (this._index < this._length) {\n      const ch = this._source[this._index];\n\n      if ((ch !== \"[\" || this._source[this._index + 1] === \"[\") &&\n          ch !== \"*\") {\n        break;\n      }\n      if (ch === \"*\") {\n        this._index++;\n        defaultIndex = index;\n      }\n\n      if (this._source[this._index] !== \"[\") {\n        throw this.error('Expected \"[\"');\n      }\n\n      this._index++;\n\n      const key = this.getVariantKey();\n\n      this.skipInlineWS();\n\n      const val = this.getPattern();\n\n      if (val === null) {\n        throw this.error(\"Expected variant to have a value\");\n      }\n\n      variants[index++] = {key, val};\n\n      this.skipWS();\n    }\n\n    return [variants, defaultIndex];\n  }\n\n  /**\n   * Parses a Variant key.\n   *\n   * @returns {String}\n   * @private\n   */\n  getVariantKey() {\n    // VariantKey may be a Keyword or Number\n\n    const cc = this._source.charCodeAt(this._index);\n    let literal;\n\n    if ((cc >= 48 && cc <= 57) || cc === 45) {\n      literal = this.getNumber();\n    } else {\n      literal = this.getVariantName();\n    }\n\n    if (this._source[this._index] !== \"]\") {\n      throw this.error('Expected \"]\"');\n    }\n\n    this._index++;\n    return literal;\n  }\n\n  /**\n   * Parses an FTL literal.\n   *\n   * @returns {Object}\n   * @private\n   */\n  getLiteral() {\n    const cc0 = this._source.charCodeAt(this._index);\n\n    if (cc0 === 36) { // $\n      this._index++;\n      return {\n        type: \"ext\",\n        name: this.getIdentifier()\n      };\n    }\n\n    const cc1 = cc0 === 45 // -\n      // Peek at the next character after the dash.\n      ? this._source.charCodeAt(this._index + 1)\n      // Or keep using the character at the current index.\n      : cc0;\n\n    if ((cc1 >= 97 && cc1 <= 122) || // a-z\n        (cc1 >= 65 && cc1 <= 90)) { // A-Z\n      return {\n        type: \"ref\",\n        name: this.getEntryIdentifier()\n      };\n    }\n\n    if ((cc1 >= 48 && cc1 <= 57)) { // 0-9\n      return this.getNumber();\n    }\n\n    if (cc0 === 34) { // \"\n      return this.getString();\n    }\n\n    throw this.error(\"Expected literal\");\n  }\n\n  /**\n   * Skips an FTL comment.\n   *\n   * @private\n   */\n  skipComment() {\n    // At runtime, we don't care about comments so we just have\n    // to parse them properly and skip their content.\n    let eol = this._source.indexOf(\"\\n\", this._index);\n\n    while (eol !== -1 &&\n      ((this._source[eol + 1] === \"/\" && this._source[eol + 2] === \"/\") ||\n       (this._source[eol + 1] === \"#\" &&\n         [\" \", \"#\"].includes(this._source[eol + 2])))) {\n      this._index = eol + 3;\n\n      eol = this._source.indexOf(\"\\n\", this._index);\n\n      if (eol === -1) {\n        break;\n      }\n    }\n\n    if (eol === -1) {\n      this._index = this._length;\n    } else {\n      this._index = eol + 1;\n    }\n  }\n\n  /**\n   * Creates a new SyntaxError object with a given message.\n   *\n   * @param {String} message\n   * @returns {Object}\n   * @private\n   */\n  error(message) {\n    return new SyntaxError(message);\n  }\n\n  /**\n   * Skips to the beginning of a next entry after the current position.\n   * This is used to mark the boundary of junk entry in case of error,\n   * and recover from the returned position.\n   *\n   * @private\n   */\n  skipToNextEntryStart() {\n    let start = this._index;\n\n    while (true) {\n      if (start === 0 || this._source[start - 1] === \"\\n\") {\n        const cc = this._source.charCodeAt(start);\n\n        if ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n             cc === 47 || cc === 91) { // /[\n          this._index = start;\n          return;\n        }\n      }\n\n      start = this._source.indexOf(\"\\n\", start);\n\n      if (start === -1) {\n        this._index = this._length;\n        return;\n      }\n      start++;\n    }\n  }\n}\n\n/**\n * Parses an FTL string using RuntimeParser and returns the generated\n * object with entries and a list of errors.\n *\n * @param {String} string\n * @returns {Array<Object, Array>}\n */\nexport default function parse(string) {\n  const parser = new RuntimeParser();\n  return parser.getResource(string);\n}\n","/* global Intl */\n\n/**\n * The `FluentType` class is the base of Fluent's type system.\n *\n * Fluent types wrap JavaScript values and store additional configuration for\n * them, which can then be used in the `toString` method together with a proper\n * `Intl` formatter.\n */\nexport class FluentType {\n\n  /**\n   * Create an `FluentType` instance.\n   *\n   * @param   {Any}    value - JavaScript value to wrap.\n   * @param   {Object} opts  - Configuration.\n   * @returns {FluentType}\n   */\n  constructor(value, opts) {\n    this.value = value;\n    this.opts = opts;\n  }\n\n  /**\n   * Unwrap the raw value stored by this `FluentType`.\n   *\n   * @returns {Any}\n   */\n  valueOf() {\n    return this.value;\n  }\n\n  /**\n   * Format this instance of `FluentType` to a string.\n   *\n   * Formatted values are suitable for use outside of the `MessageContext`.\n   * This method can use `Intl` formatters memoized by the `MessageContext`\n   * instance passed as an argument.\n   *\n   * @param   {MessageContext} [ctx]\n   * @returns {string}\n   */\n  toString() {\n    throw new Error(\"Subclasses of FluentType must implement toString.\");\n  }\n}\n\nexport class FluentNone extends FluentType {\n  toString() {\n    return this.value || \"???\";\n  }\n}\n\nexport class FluentNumber extends FluentType {\n  constructor(value, opts) {\n    super(parseFloat(value), opts);\n  }\n\n  toString(ctx) {\n    try {\n      const nf = ctx._memoizeIntlObject(\n        Intl.NumberFormat, this.opts\n      );\n      return nf.format(this.value);\n    } catch (e) {\n      // XXX Report the error.\n      return this.value;\n    }\n  }\n\n  /**\n   * Compare the object with another instance of a FluentType.\n   *\n   * @param   {MessageContext} ctx\n   * @param   {FluentType}     other\n   * @returns {bool}\n   */\n  match(ctx, other) {\n    if (other instanceof FluentNumber) {\n      return this.value === other.value;\n    }\n    return false;\n  }\n}\n\nexport class FluentDateTime extends FluentType {\n  constructor(value, opts) {\n    super(new Date(value), opts);\n  }\n\n  toString(ctx) {\n    try {\n      const dtf = ctx._memoizeIntlObject(\n        Intl.DateTimeFormat, this.opts\n      );\n      return dtf.format(this.value);\n    } catch (e) {\n      // XXX Report the error.\n      return this.value;\n    }\n  }\n}\n\nexport class FluentSymbol extends FluentType {\n  toString() {\n    return this.value;\n  }\n\n  /**\n   * Compare the object with another instance of a FluentType.\n   *\n   * @param   {MessageContext} ctx\n   * @param   {FluentType}     other\n   * @returns {bool}\n   */\n  match(ctx, other) {\n    if (other instanceof FluentSymbol) {\n      return this.value === other.value;\n    } else if (typeof other === \"string\") {\n      return this.value === other;\n    } else if (other instanceof FluentNumber) {\n      const pr = ctx._memoizeIntlObject(\n        Intl.PluralRules, other.opts\n      );\n      return this.value === pr.select(other.value);\n    }\n    return false;\n  }\n}\n","/**\n * @overview\n *\n * The FTL resolver ships with a number of functions built-in.\n *\n * Each function take two arguments:\n *   - args - an array of positional args\n *   - opts - an object of key-value args\n *\n * Arguments to functions are guaranteed to already be instances of\n * `FluentType`.  Functions must return `FluentType` objects as well.\n */\n\nimport { FluentNumber, FluentDateTime } from \"./types\";\n\nexport default {\n  \"NUMBER\": ([arg], opts) =>\n    new FluentNumber(arg.valueOf(), merge(arg.opts, opts)),\n  \"DATETIME\": ([arg], opts) =>\n    new FluentDateTime(arg.valueOf(), merge(arg.opts, opts)),\n};\n\nfunction merge(argopts, opts) {\n  return Object.assign({}, argopts, values(opts));\n}\n\nfunction values(opts) {\n  const unwrapped = {};\n  for (const [name, opt] of Object.entries(opts)) {\n    unwrapped[name] = opt.valueOf();\n  }\n  return unwrapped;\n}\n","/**\n * @overview\n *\n * The role of the Fluent resolver is to format a translation object to an\n * instance of `FluentType` or an array of instances.\n *\n * Translations can contain references to other messages or external arguments,\n * conditional logic in form of select expressions, traits which describe their\n * grammatical features, and can use Fluent builtins which make use of the\n * `Intl` formatters to format numbers, dates, lists and more into the\n * context's language.  See the documentation of the Fluent syntax for more\n * information.\n *\n * In case of errors the resolver will try to salvage as much of the\n * translation as possible.  In rare situations where the resolver didn't know\n * how to recover from an error it will return an instance of `FluentNone`.\n *\n * `MessageReference`, `VariantExpression`, `AttributeExpression` and\n * `SelectExpression` resolve to raw Runtime Entries objects and the result of\n * the resolution needs to be passed into `Type` to get their real value.\n * This is useful for composing expressions.  Consider:\n *\n *     brand-name[nominative]\n *\n * which is a `VariantExpression` with properties `id: MessageReference` and\n * `key: Keyword`.  If `MessageReference` was resolved eagerly, it would\n * instantly resolve to the value of the `brand-name` message.  Instead, we\n * want to get the message object and look for its `nominative` variant.\n *\n * All other expressions (except for `FunctionReference` which is only used in\n * `CallExpression`) resolve to an instance of `FluentType`.  The caller should\n * use the `toString` method to convert the instance to a native value.\n *\n *\n * All functions in this file pass around a special object called `env`.\n * This object stores a set of elements used by all resolve functions:\n *\n *  * {MessageContext} ctx\n *      context for which the given resolution is happening\n *  * {Object} args\n *      list of developer provided arguments that can be used\n *  * {Array} errors\n *      list of errors collected while resolving\n *  * {WeakSet} dirty\n *      Set of patterns already encountered during this resolution.\n *      This is used to prevent cyclic resolutions.\n */\n\n\nimport { FluentType, FluentNone, FluentNumber, FluentDateTime, FluentSymbol }\n  from \"./types\";\nimport builtins from \"./builtins\";\n\n// Prevent expansion of too long placeables.\nconst MAX_PLACEABLE_LENGTH = 2500;\n\n// Unicode bidi isolation characters.\nconst FSI = \"\\u2068\";\nconst PDI = \"\\u2069\";\n\n\n/**\n * Helper for choosing the default value from a set of members.\n *\n * Used in SelectExpressions and Type.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} members\n *    Hash map of variants from which the default value is to be selected.\n * @param   {Number} def\n *    The index of the default variant.\n * @returns {FluentType}\n * @private\n */\nfunction DefaultMember(env, members, def) {\n  if (members[def]) {\n    return members[def];\n  }\n\n  const { errors } = env;\n  errors.push(new RangeError(\"No default\"));\n  return new FluentNone();\n}\n\n\n/**\n * Resolve a reference to another message.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} id\n *    The identifier of the message to be resolved.\n * @param   {String} id.name\n *    The name of the identifier.\n * @returns {FluentType}\n * @private\n */\nfunction MessageReference(env, {name}) {\n  const { ctx, errors } = env;\n  const message = name.startsWith(\"-\")\n    ? ctx._terms.get(name)\n    : ctx._messages.get(name);\n\n  if (!message) {\n    const err = name.startsWith(\"-\")\n      ? new ReferenceError(`Unknown term: ${name}`)\n      : new ReferenceError(`Unknown message: ${name}`);\n    errors.push(err);\n    return new FluentNone(name);\n  }\n\n  return message;\n}\n\n/**\n * Resolve a variant expression to the variant object.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {Object} expr.id\n *    An Identifier of a message for which the variant is resolved.\n * @param   {Object} expr.id.name\n *    Name a message for which the variant is resolved.\n * @param   {Object} expr.key\n *    Variant key to be resolved.\n * @returns {FluentType}\n * @private\n */\nfunction VariantExpression(env, {id, key}) {\n  const message = MessageReference(env, id);\n  if (message instanceof FluentNone) {\n    return message;\n  }\n\n  const { ctx, errors } = env;\n  const keyword = Type(env, key);\n\n  function isVariantList(node) {\n    return Array.isArray(node) &&\n      node[0].type === \"sel\" &&\n      node[0].exp === null;\n  }\n\n  if (isVariantList(message.val)) {\n    // Match the specified key against keys of each variant, in order.\n    for (const variant of message.val[0].vars) {\n      const variantKey = Type(env, variant.key);\n      if (keyword.match(ctx, variantKey)) {\n        return variant;\n      }\n    }\n  }\n\n  errors.push(new ReferenceError(`Unknown variant: ${keyword.toString(ctx)}`));\n  return Type(env, message);\n}\n\n\n/**\n * Resolve an attribute expression to the attribute object.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {String} expr.id\n *    An ID of a message for which the attribute is resolved.\n * @param   {String} expr.name\n *    Name of the attribute to be resolved.\n * @returns {FluentType}\n * @private\n */\nfunction AttributeExpression(env, {id, name}) {\n  const message = MessageReference(env, id);\n  if (message instanceof FluentNone) {\n    return message;\n  }\n\n  if (message.attrs) {\n    // Match the specified name against keys of each attribute.\n    for (const attrName in message.attrs) {\n      if (name === attrName) {\n        return message.attrs[name];\n      }\n    }\n  }\n\n  const { errors } = env;\n  errors.push(new ReferenceError(`Unknown attribute: ${name}`));\n  return Type(env, message);\n}\n\n/**\n * Resolve a select expression to the member object.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {String} expr.exp\n *    Selector expression\n * @param   {Array} expr.vars\n *    List of variants for the select expression.\n * @param   {Number} expr.def\n *    Index of the default variant.\n * @returns {FluentType}\n * @private\n */\nfunction SelectExpression(env, {exp, vars, def}) {\n  if (exp === null) {\n    return DefaultMember(env, vars, def);\n  }\n\n  const selector = Type(env, exp);\n  if (selector instanceof FluentNone) {\n    return DefaultMember(env, vars, def);\n  }\n\n  // Match the selector against keys of each variant, in order.\n  for (const variant of vars) {\n    const key = Type(env, variant.key);\n    const keyCanMatch =\n      key instanceof FluentNumber || key instanceof FluentSymbol;\n\n    if (!keyCanMatch) {\n      continue;\n    }\n\n    const { ctx } = env;\n\n    if (key.match(ctx, selector)) {\n      return variant;\n    }\n  }\n\n  return DefaultMember(env, vars, def);\n}\n\n\n/**\n * Resolve expression to a Fluent type.\n *\n * JavaScript strings are a special case.  Since they natively have the\n * `toString` method they can be used as if they were a Fluent type without\n * paying the cost of creating a instance of one.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression object to be resolved into a Fluent type.\n * @returns {FluentType}\n * @private\n */\nfunction Type(env, expr) {\n  // A fast-path for strings which are the most common case, and for\n  // `FluentNone` which doesn't require any additional logic.\n  if (typeof expr === \"string\" || expr instanceof FluentNone) {\n    return expr;\n  }\n\n  // The Runtime AST (Entries) encodes patterns (complex strings with\n  // placeables) as Arrays.\n  if (Array.isArray(expr)) {\n    return Pattern(env, expr);\n  }\n\n\n  switch (expr.type) {\n    case \"varname\":\n      return new FluentSymbol(expr.name);\n    case \"num\":\n      return new FluentNumber(expr.val);\n    case \"ext\":\n      return ExternalArgument(env, expr);\n    case \"fun\":\n      return FunctionReference(env, expr);\n    case \"call\":\n      return CallExpression(env, expr);\n    case \"ref\": {\n      const message = MessageReference(env, expr);\n      return Type(env, message);\n    }\n    case \"attr\": {\n      const attr = AttributeExpression(env, expr);\n      return Type(env, attr);\n    }\n    case \"var\": {\n      const variant = VariantExpression(env, expr);\n      return Type(env, variant);\n    }\n    case \"sel\": {\n      const member = SelectExpression(env, expr);\n      return Type(env, member);\n    }\n    case undefined: {\n      // If it's a node with a value, resolve the value.\n      if (expr.val !== null && expr.val !== undefined) {\n        return Type(env, expr.val);\n      }\n\n      const { errors } = env;\n      errors.push(new RangeError(\"No value\"));\n      return new FluentNone();\n    }\n    default:\n      return new FluentNone();\n  }\n}\n\n/**\n * Resolve a reference to an external argument.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {String} expr.name\n *    Name of an argument to be returned.\n * @returns {FluentType}\n * @private\n */\nfunction ExternalArgument(env, {name}) {\n  const { args, errors } = env;\n\n  if (!args || !args.hasOwnProperty(name)) {\n    errors.push(new ReferenceError(`Unknown external: ${name}`));\n    return new FluentNone(name);\n  }\n\n  const arg = args[name];\n\n  // Return early if the argument already is an instance of FluentType.\n  if (arg instanceof FluentType) {\n    return arg;\n  }\n\n  // Convert the argument to a Fluent type.\n  switch (typeof arg) {\n    case \"string\":\n      return arg;\n    case \"number\":\n      return new FluentNumber(arg);\n    case \"object\":\n      if (arg instanceof Date) {\n        return new FluentDateTime(arg);\n      }\n    default:\n      errors.push(\n        new TypeError(`Unsupported external type: ${name}, ${typeof arg}`)\n      );\n      return new FluentNone(name);\n  }\n}\n\n/**\n * Resolve a reference to a function.\n *\n * @param   {Object}  env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {String} expr.name\n *    Name of the function to be returned.\n * @returns {Function}\n * @private\n */\nfunction FunctionReference(env, {name}) {\n  // Some functions are built-in.  Others may be provided by the runtime via\n  // the `MessageContext` constructor.\n  const { ctx: { _functions }, errors } = env;\n  const func = _functions[name] || builtins[name];\n\n  if (!func) {\n    errors.push(new ReferenceError(`Unknown function: ${name}()`));\n    return new FluentNone(`${name}()`);\n  }\n\n  if (typeof func !== \"function\") {\n    errors.push(new TypeError(`Function ${name}() is not callable`));\n    return new FluentNone(`${name}()`);\n  }\n\n  return func;\n}\n\n/**\n * Resolve a call to a Function with positional and key-value arguments.\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Object} expr\n *    An expression to be resolved.\n * @param   {Object} expr.fun\n *    FTL Function object.\n * @param   {Array} expr.args\n *    FTL Function argument list.\n * @returns {FluentType}\n * @private\n */\nfunction CallExpression(env, {fun, args}) {\n  const callee = FunctionReference(env, fun);\n\n  if (callee instanceof FluentNone) {\n    return callee;\n  }\n\n  const posargs = [];\n  const keyargs = {};\n\n  for (const arg of args) {\n    if (arg.type === \"narg\") {\n      keyargs[arg.name] = Type(env, arg.val);\n    } else {\n      posargs.push(Type(env, arg));\n    }\n  }\n\n  try {\n    return callee(posargs, keyargs);\n  } catch (e) {\n    // XXX Report errors.\n    return new FluentNone();\n  }\n}\n\n/**\n * Resolve a pattern (a complex string with placeables).\n *\n * @param   {Object} env\n *    Resolver environment object.\n * @param   {Array} ptn\n *    Array of pattern elements.\n * @returns {Array}\n * @private\n */\nfunction Pattern(env, ptn) {\n  const { ctx, dirty, errors } = env;\n\n  if (dirty.has(ptn)) {\n    errors.push(new RangeError(\"Cyclic reference\"));\n    return new FluentNone();\n  }\n\n  // Tag the pattern as dirty for the purpose of the current resolution.\n  dirty.add(ptn);\n  const result = [];\n\n  // Wrap interpolations with Directional Isolate Formatting characters\n  // only when the pattern has more than one element.\n  const useIsolating = ctx._useIsolating && ptn.length > 1;\n\n  for (const elem of ptn) {\n    if (typeof elem === \"string\") {\n      result.push(elem);\n      continue;\n    }\n\n    const part = Type(env, elem).toString(ctx);\n\n    if (useIsolating) {\n      result.push(FSI);\n    }\n\n    if (part.length > MAX_PLACEABLE_LENGTH) {\n      errors.push(\n        new RangeError(\n          \"Too many characters in placeable \" +\n          `(${part.length}, max allowed is ${MAX_PLACEABLE_LENGTH})`\n        )\n      );\n      result.push(part.slice(MAX_PLACEABLE_LENGTH));\n    } else {\n      result.push(part);\n    }\n\n    if (useIsolating) {\n      result.push(PDI);\n    }\n  }\n\n  dirty.delete(ptn);\n  return result.join(\"\");\n}\n\n/**\n * Format a translation into a string.\n *\n * @param   {MessageContext} ctx\n *    A MessageContext instance which will be used to resolve the\n *    contextual information of the message.\n * @param   {Object}         args\n *    List of arguments provided by the developer which can be accessed\n *    from the message.\n * @param   {Object}         message\n *    An object with the Message to be resolved.\n * @param   {Array}          errors\n *    An error array that any encountered errors will be appended to.\n * @returns {FluentType}\n */\nexport default function resolve(ctx, args, message, errors = []) {\n  const env = {\n    ctx, args, errors, dirty: new WeakSet()\n  };\n  return Type(env, message).toString(ctx);\n}\n","import resolve from \"./resolver\";\nimport parse from \"./parser\";\n\n/**\n * Message contexts are single-language stores of translations.  They are\n * responsible for parsing translation resources in the Fluent syntax and can\n * format translation units (entities) to strings.\n *\n * Always use `MessageContext.format` to retrieve translation units from\n * a context.  Translations can contain references to other entities or\n * external arguments, conditional logic in form of select expressions, traits\n * which describe their grammatical features, and can use Fluent builtins which\n * make use of the `Intl` formatters to format numbers, dates, lists and more\n * into the context's language.  See the documentation of the Fluent syntax for\n * more information.\n */\nexport class MessageContext {\n\n  /**\n   * Create an instance of `MessageContext`.\n   *\n   * The `locales` argument is used to instantiate `Intl` formatters used by\n   * translations.  The `options` object can be used to configure the context.\n   *\n   * Examples:\n   *\n   *     const ctx = new MessageContext(locales);\n   *\n   *     const ctx = new MessageContext(locales, { useIsolating: false });\n   *\n   *     const ctx = new MessageContext(locales, {\n   *       useIsolating: true,\n   *       functions: {\n   *         NODE_ENV: () => process.env.NODE_ENV\n   *       }\n   *     });\n   *\n   * Available options:\n   *\n   *   - `functions` - an object of additional functions available to\n   *                   translations as builtins.\n   *\n   *   - `useIsolating` - boolean specifying whether to use Unicode isolation\n   *                    marks (FSI, PDI) for bidi interpolations.\n   *\n   * @param   {string|Array<string>} locales - Locale or locales of the context\n   * @param   {Object} [options]\n   * @returns {MessageContext}\n   */\n  constructor(locales, { functions = {}, useIsolating = true } = {}) {\n    this.locales = Array.isArray(locales) ? locales : [locales];\n\n    this._terms = new Map();\n    this._messages = new Map();\n    this._functions = functions;\n    this._useIsolating = useIsolating;\n    this._intls = new WeakMap();\n  }\n\n  /*\n   * Return an iterator over public `[id, message]` pairs.\n   *\n   * @returns {Iterator}\n   */\n  get messages() {\n    return this._messages[Symbol.iterator]();\n  }\n\n  /*\n   * Check if a message is present in the context.\n   *\n   * @param {string} id - The identifier of the message to check.\n   * @returns {bool}\n   */\n  hasMessage(id) {\n    return this._messages.has(id);\n  }\n\n  /*\n   * Return the internal representation of a message.\n   *\n   * The internal representation should only be used as an argument to\n   * `MessageContext.format`.\n   *\n   * @param {string} id - The identifier of the message to check.\n   * @returns {Any}\n   */\n  getMessage(id) {\n    return this._messages.get(id);\n  }\n\n  /**\n   * Add a translation resource to the context.\n   *\n   * The translation resource must use the Fluent syntax.  It will be parsed by\n   * the context and each translation unit (message) will be available in the\n   * context by its identifier.\n   *\n   *     ctx.addMessages('foo = Foo');\n   *     ctx.getMessage('foo');\n   *\n   *     // Returns a raw representation of the 'foo' message.\n   *\n   * Parsed entities should be formatted with the `format` method in case they\n   * contain logic (references, select expressions etc.).\n   *\n   * @param   {string} source - Text resource with translations.\n   * @returns {Array<Error>}\n   */\n  addMessages(source) {\n    const [entries, errors] = parse(source);\n    for (const id in entries) {\n      if (id.startsWith(\"-\")) {\n        // Identifiers starting with a dash (-) define terms. Terms are private\n        // and cannot be retrieved from MessageContext.\n        if (this._terms.has(id)) {\n          errors.push(`Attempt to override an existing term: \"${id}\"`);\n          continue;\n        }\n        this._terms.set(id, entries[id]);\n      } else {\n        if (this._messages.has(id)) {\n          errors.push(`Attempt to override an existing message: \"${id}\"`);\n          continue;\n        }\n        this._messages.set(id, entries[id]);\n      }\n    }\n\n    return errors;\n  }\n\n  /**\n   * Format a message to a string or null.\n   *\n   * Format a raw `message` from the context into a string (or a null if it has\n   * a null value).  `args` will be used to resolve references to external\n   * arguments inside of the translation.\n   *\n   * In case of errors `format` will try to salvage as much of the translation\n   * as possible and will still return a string.  For performance reasons, the\n   * encountered errors are not returned but instead are appended to the\n   * `errors` array passed as the third argument.\n   *\n   *     const errors = [];\n   *     ctx.addMessages('hello = Hello, { $name }!');\n   *     const hello = ctx.getMessage('hello');\n   *     ctx.format(hello, { name: 'Jane' }, errors);\n   *\n   *     // Returns 'Hello, Jane!' and `errors` is empty.\n   *\n   *     ctx.format(hello, undefined, errors);\n   *\n   *     // Returns 'Hello, name!' and `errors` is now:\n   *\n   *     [<ReferenceError: Unknown external: name>]\n   *\n   * @param   {Object | string}    message\n   * @param   {Object | undefined} args\n   * @param   {Array}              errors\n   * @returns {?string}\n   */\n  format(message, args, errors) {\n    // optimize entities which are simple strings with no attributes\n    if (typeof message === \"string\") {\n      return message;\n    }\n\n    // optimize simple-string entities with attributes\n    if (typeof message.val === \"string\") {\n      return message.val;\n    }\n\n    // optimize entities with null values\n    if (message.val === undefined) {\n      return null;\n    }\n\n    return resolve(this, args, message, errors);\n  }\n\n  _memoizeIntlObject(ctor, opts) {\n    const cache = this._intls.get(ctor) || {};\n    const id = JSON.stringify(opts);\n\n    if (!cache[id]) {\n      cache[id] = new ctor(this.locales, opts);\n      this._intls.set(ctor, cache);\n    }\n\n    return cache[id];\n  }\n}\n","/*\n * CachedIterable caches the elements yielded by an iterable.\n *\n * It can be used to iterate over an iterable many times without depleting the\n * iterable.\n */\nexport default class CachedIterable {\n  /**\n   * Create an `CachedIterable` instance.\n   *\n   * @param {Iterable} iterable\n   * @returns {CachedIterable}\n   */\n  constructor(iterable) {\n    if (Symbol.asyncIterator in Object(iterable)) {\n      this.iterator = iterable[Symbol.asyncIterator]();\n    } else if (Symbol.iterator in Object(iterable)) {\n      this.iterator = iterable[Symbol.iterator]();\n    } else {\n      throw new TypeError(\"Argument must implement the iteration protocol.\");\n    }\n\n    this.seen = [];\n  }\n\n  [Symbol.iterator]() {\n    const { seen, iterator } = this;\n    let cur = 0;\n\n    return {\n      next() {\n        if (seen.length <= cur) {\n          seen.push(iterator.next());\n        }\n        return seen[cur++];\n      }\n    };\n  }\n\n  [Symbol.asyncIterator]() {\n    const { seen, iterator } = this;\n    let cur = 0;\n\n    return {\n      async next() {\n        if (seen.length <= cur) {\n          seen.push(await iterator.next());\n        }\n        return seen[cur++];\n      }\n    };\n  }\n\n  /**\n   * This method allows user to consume the next element from the iterator\n   * into the cache.\n   */\n  touchNext() {\n    const { seen, iterator } = this;\n    if (seen.length === 0 || seen[seen.length - 1].done === false) {\n      seen.push(iterator.next());\n    }\n  }\n}\n","/*\n * @overview\n *\n * Functions for managing ordered sequences of MessageContexts.\n *\n * An ordered iterable of MessageContext instances can represent the current\n * negotiated fallback chain of languages.  This iterable can be used to find\n * the best existing translation for a given identifier.\n *\n * The mapContext* methods can be used to find the first MessageContext in the\n * given iterable which contains the translation with the given identifier.  If\n * the iterable is ordered according to the result of a language negotiation\n * the returned MessageContext contains the best available translation.\n *\n * A simple function which formats translations based on the identifier might\n * be implemented as follows:\n *\n *     formatString(id, args) {\n *         const ctx = mapContextSync(contexts, id);\n *\n *         if (ctx === null) {\n *             return id;\n *         }\n *\n *         const msg = ctx.getMessage(id);\n *         return ctx.format(msg, args);\n *     }\n *\n * In order to pass an iterator to mapContext*, wrap it in CachedIterable.\n * This allows multiple calls to mapContext* without advancing and eventually\n * depleting the iterator.\n *\n *     function *generateMessages() {\n *         // Some lazy logic for yielding MessageContexts.\n *         yield *[ctx1, ctx2];\n *     }\n *\n *     const contexts = new CachedIterable(generateMessages());\n *     const ctx = mapContextSync(contexts, id);\n *\n */\n\n/*\n * Synchronously map an identifier or an array of identifiers to the best\n * `MessageContext` instance(s).\n *\n * @param {Iterable} iterable\n * @param {string|Array<string>} ids\n * @returns {MessageContext|Array<MessageContext>}\n */\nexport function mapContextSync(iterable, ids) {\n  if (!Array.isArray(ids)) {\n    return getContextForId(iterable, ids);\n  }\n\n  return ids.map(\n    id => getContextForId(iterable, id)\n  );\n}\n\n/*\n * Find the best `MessageContext` with the translation for `id`.\n */\nfunction getContextForId(iterable, id) {\n  for (const context of iterable) {\n    if (context.hasMessage(id)) {\n      return context;\n    }\n  }\n\n  return null;\n}\n\n/*\n * Asynchronously map an identifier or an array of identifiers to the best\n * `MessageContext` instance(s).\n *\n * @param {AsyncIterable} iterable\n * @param {string|Array<string>} ids\n * @returns {Promise<MessageContext|Array<MessageContext>>}\n */\nexport async function mapContextAsync(iterable, ids) {\n  if (!Array.isArray(ids)) {\n    for await (const context of iterable) {\n      if (context.hasMessage(ids)) {\n        return context;\n      }\n    }\n  }\n\n  let remainingCount = ids.length;\n  const foundContexts = new Array(remainingCount).fill(null);\n\n  for await (const context of iterable) {\n    // XXX Switch to const [index, id] of id.entries() when we move to Babel 7.\n    // See https://github.com/babel/babel/issues/5880.\n    for (let index = 0; index < ids.length; index++) {\n      const id = ids[index];\n      if (!foundContexts[index] && context.hasMessage(id)) {\n        foundContexts[index] = context;\n        remainingCount--;\n      }\n\n      // Return early when all ids have been mapped to contexts.\n      if (remainingCount === 0) {\n        return foundContexts;\n      }\n    }\n  }\n\n  return foundContexts;\n}\n","/*\n * @module fluent\n * @overview\n *\n * `fluent` is a JavaScript implementation of Project Fluent, a localization\n * framework designed to unleash the expressive power of the natural language.\n *\n */\n\nexport { default as _parse } from \"./parser\";\n\nexport { MessageContext } from \"./context\";\nexport {\n  FluentType as MessageArgument,\n  FluentNumber as MessageNumberArgument,\n  FluentDateTime as MessageDateTimeArgument,\n} from \"./types\";\n\nexport { default as CachedIterable } from \"./cached_iterable\";\nexport { mapContextSync, mapContextAsync } from \"./fallback\";\n\nexport { ftl } from \"./util\";\n","import {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\nexport class ErrorBoundaryFallback extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.windowObj = this.props.windowObj || window;\n    this.onClick = this.onClick.bind(this);\n  }\n\n  /**\n   * Since we only get here if part of the page has crashed, do a\n   * forced reload to give us the best chance at recovering.\n   */\n  onClick() {\n    this.windowObj.location.reload(true);\n  }\n\n  render() {\n    const defaultClass = \"as-error-fallback\";\n    let className;\n    if (\"className\" in this.props) {\n      className = `${this.props.className} ${defaultClass}`;\n    } else {\n      className = defaultClass;\n    }\n\n    // href=\"#\" to force normal link styling stuff (eg cursor on hover)\n    return (\n      <div className={className}>\n        <div>\n          <FormattedMessage\n            defaultMessage=\"Oops, something went wrong loading this content.\"\n            id=\"error_fallback_default_info\" />\n        </div>\n        <span>\n          <a href=\"#\" className=\"reload-button\" onClick={this.onClick}>\n            <FormattedMessage\n              defaultMessage=\"Refresh page to try again.\"\n              id=\"error_fallback_default_refresh_suggestion\" />\n          </a>\n        </span>\n      </div>\n    );\n  }\n}\nErrorBoundaryFallback.defaultProps = {className: \"as-error-fallback\"};\n\nexport class ErrorBoundary extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {hasError: false};\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true});\n  }\n\n  render() {\n    if (!this.state.hasError) {\n      return (this.props.children);\n    }\n\n    return <this.props.FallbackComponent className={this.props.className} />;\n  }\n}\n\nErrorBoundary.defaultProps = {FallbackComponent: ErrorBoundaryFallback};\n","module.exports = ReactDOM;","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\nimport {\n  MIN_CORNER_FAVICON_SIZE,\n  MIN_RICH_FAVICON_SIZE,\n  TOP_SITES_CONTEXT_MENU_OPTIONS,\n  TOP_SITES_SOURCE\n} from \"./TopSitesConstants\";\nimport {LinkMenu} from \"content-src/components/LinkMenu/LinkMenu\";\nimport React from \"react\";\nimport {ScreenshotUtils} from \"content-src/lib/screenshot-utils\";\nimport {TOP_SITES_MAX_SITES_PER_ROW} from \"common/Reducers.jsm\";\n\nexport class TopSiteLink extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {screenshotImage: null};\n    this.onDragEvent = this.onDragEvent.bind(this);\n  }\n\n  /*\n   * Helper to determine whether the drop zone should allow a drop. We only allow\n   * dropping top sites for now.\n   */\n  _allowDrop(e) {\n    return e.dataTransfer.types.includes(\"text/topsite-index\");\n  }\n\n  onDragEvent(event) {\n    switch (event.type) {\n      case \"click\":\n        // Stop any link clicks if we started any dragging\n        if (this.dragged) {\n          event.preventDefault();\n        }\n        break;\n      case \"dragstart\":\n        this.dragged = true;\n        event.dataTransfer.effectAllowed = \"move\";\n        event.dataTransfer.setData(\"text/topsite-index\", this.props.index);\n        event.target.blur();\n        this.props.onDragEvent(event, this.props.index, this.props.link, this.props.title);\n        break;\n      case \"dragend\":\n        this.props.onDragEvent(event);\n        break;\n      case \"dragenter\":\n      case \"dragover\":\n      case \"drop\":\n        if (this._allowDrop(event)) {\n          event.preventDefault();\n          this.props.onDragEvent(event, this.props.index);\n        }\n        break;\n      case \"mousedown\":\n        // Reset at the first mouse event of a potential drag\n        this.dragged = false;\n        break;\n    }\n  }\n\n  /**\n   * Helper to obtain the next state based on nextProps and prevState.\n   *\n   * NOTE: Rename this method to getDerivedStateFromProps when we update React\n   *       to >= 16.3. We will need to update tests as well. We cannot rename this\n   *       method to getDerivedStateFromProps now because there is a mismatch in\n   *       the React version that we are using for both testing and production.\n   *       (i.e. react-test-render => \"16.3.2\", react => \"16.2.0\").\n   *\n   * See https://github.com/airbnb/enzyme/blob/master/packages/enzyme-adapter-react-16/package.json#L43.\n   */\n  static getNextStateFromProps(nextProps, prevState) {\n    const {screenshot} = nextProps.link;\n    const imageInState = ScreenshotUtils.isRemoteImageLocal(prevState.screenshotImage, screenshot);\n    if (imageInState) {\n      return null;\n    }\n\n    // Since image was updated, attempt to revoke old image blob URL, if it exists.\n    ScreenshotUtils.maybeRevokeBlobObjectURL(prevState.screenshotImage);\n\n    return {screenshotImage: ScreenshotUtils.createLocalImageObject(screenshot)};\n  }\n\n  // NOTE: Remove this function when we update React to >= 16.3 since React will\n  //       call getDerivedStateFromProps automatically. We will also need to\n  //       rename getNextStateFromProps to getDerivedStateFromProps.\n  componentWillMount() {\n    const nextState = TopSiteLink.getNextStateFromProps(this.props, this.state);\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  // NOTE: Remove this function when we update React to >= 16.3 since React will\n  //       call getDerivedStateFromProps automatically. We will also need to\n  //       rename getNextStateFromProps to getDerivedStateFromProps.\n  componentWillReceiveProps(nextProps) {\n    const nextState = TopSiteLink.getNextStateFromProps(nextProps, this.state);\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    ScreenshotUtils.maybeRevokeBlobObjectURL(this.state.screenshotImage);\n  }\n\n  render() {\n    const {children, className, defaultStyle, isDraggable, link, onClick, title} = this.props;\n    const topSiteOuterClassName = `top-site-outer${className ? ` ${className}` : \"\"}${link.isDragged ? \" dragged\" : \"\"}`;\n    const {tippyTopIcon, faviconSize} = link;\n    const [letterFallback] = title;\n    let imageClassName;\n    let imageStyle;\n    let showSmallFavicon = false;\n    let smallFaviconStyle;\n    let smallFaviconFallback;\n    let hasScreenshotImage = this.state.screenshotImage && this.state.screenshotImage.url;\n    if (defaultStyle) { // force no styles (letter fallback) even if the link has imagery\n      smallFaviconFallback = false;\n    } else if (link.customScreenshotURL) {\n      // assume high quality custom screenshot and use rich icon styles and class names\n      imageClassName = \"top-site-icon rich-icon\";\n      imageStyle = {\n        backgroundColor: link.backgroundColor,\n        backgroundImage: hasScreenshotImage ? `url(${this.state.screenshotImage.url})` : \"none\"\n      };\n    } else if (tippyTopIcon || faviconSize >= MIN_RICH_FAVICON_SIZE) {\n      // styles and class names for top sites with rich icons\n      imageClassName = \"top-site-icon rich-icon\";\n      imageStyle = {\n        backgroundColor: link.backgroundColor,\n        backgroundImage: `url(${tippyTopIcon || link.favicon})`\n      };\n    } else {\n      // styles and class names for top sites with screenshot + small icon in top left corner\n      imageClassName = `screenshot${hasScreenshotImage ? \" active\" : \"\"}`;\n      imageStyle = {backgroundImage: hasScreenshotImage ? `url(${this.state.screenshotImage.url})` : \"none\"};\n\n      // only show a favicon in top left if it's greater than 16x16\n      if (faviconSize >= MIN_CORNER_FAVICON_SIZE) {\n        showSmallFavicon = true;\n        smallFaviconStyle = {backgroundImage:  `url(${link.favicon})`};\n      } else if (hasScreenshotImage) {\n        // Don't show a small favicon if there is no screenshot, because that\n        // would result in two fallback icons\n        showSmallFavicon = true;\n        smallFaviconFallback = true;\n      }\n    }\n    let draggableProps = {};\n    if (isDraggable) {\n      draggableProps = {\n        onClick: this.onDragEvent,\n        onDragEnd: this.onDragEvent,\n        onDragStart: this.onDragEvent,\n        onMouseDown: this.onDragEvent\n      };\n    }\n    return (<li className={topSiteOuterClassName} onDrop={this.onDragEvent} onDragOver={this.onDragEvent} onDragEnter={this.onDragEvent} onDragLeave={this.onDragEvent} {...draggableProps}>\n      <div className=\"top-site-inner\">\n         <a href={link.url} onClick={onClick}>\n            <div className=\"tile\" aria-hidden={true} data-fallback={letterFallback}>\n              <div className={imageClassName} style={imageStyle} />\n              {showSmallFavicon && <div\n                className=\"top-site-icon default-icon\"\n                data-fallback={smallFaviconFallback && letterFallback}\n                style={smallFaviconStyle} />}\n           </div>\n           <div className={`title ${link.isPinned ? \"pinned\" : \"\"}`}>\n             {link.isPinned && <div className=\"icon icon-pin-small\" />}\n              <span dir=\"auto\">{title}</span>\n           </div>\n         </a>\n         {children}\n      </div>\n    </li>);\n  }\n}\nTopSiteLink.defaultProps = {\n  title: \"\",\n  link: {},\n  isDraggable: true\n};\n\nexport class TopSite extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {showContextMenu: false};\n    this.onLinkClick = this.onLinkClick.bind(this);\n    this.onMenuButtonClick = this.onMenuButtonClick.bind(this);\n    this.onMenuUpdate = this.onMenuUpdate.bind(this);\n  }\n\n  /**\n   * Report to telemetry additional information about the item.\n   */\n  _getTelemetryInfo() {\n    const value = {icon_type: this.props.link.iconType};\n    // Filter out \"not_pinned\" type for being the default\n    if (this.props.link.isPinned) {\n      value.card_type = \"pinned\";\n    }\n    return {value};\n  }\n\n  userEvent(event) {\n    this.props.dispatch(ac.UserEvent(Object.assign({\n      event,\n      source: TOP_SITES_SOURCE,\n      action_position: this.props.index\n    }, this._getTelemetryInfo())));\n  }\n\n  onLinkClick(event) {\n    this.userEvent(\"CLICK\");\n\n    // Specially handle a top site link click for \"typed\" frecency bonus as\n    // specified as a property on the link.\n    event.preventDefault();\n    const {altKey, button, ctrlKey, metaKey, shiftKey} = event;\n    this.props.dispatch(ac.OnlyToMain({\n      type: at.OPEN_LINK,\n      data: Object.assign(this.props.link, {event: {altKey, button, ctrlKey, metaKey, shiftKey}})\n    }));\n  }\n\n  onMenuButtonClick(event) {\n    event.preventDefault();\n    this.props.onActivate(this.props.index);\n    this.setState({showContextMenu: true});\n  }\n\n  onMenuUpdate(showContextMenu) {\n    this.setState({showContextMenu});\n  }\n\n  render() {\n    const {props} = this;\n    const {link} = props;\n    const isContextMenuOpen = this.state.showContextMenu && props.activeIndex === props.index;\n    const title = link.label || link.hostname;\n    return (<TopSiteLink {...props} onClick={this.onLinkClick} onDragEvent={this.props.onDragEvent} className={`${props.className || \"\"}${isContextMenuOpen ? \" active\" : \"\"}`} title={title}>\n        <div>\n          <button className=\"context-menu-button icon\" onClick={this.onMenuButtonClick}>\n            <span className=\"sr-only\">\n              <FormattedMessage id=\"context_menu_button_sr\" values={{title}} />\n            </span>\n          </button>\n          {isContextMenuOpen &&\n            <LinkMenu\n              dispatch={props.dispatch}\n              index={props.index}\n              onUpdate={this.onMenuUpdate}\n              options={TOP_SITES_CONTEXT_MENU_OPTIONS}\n              site={link}\n              siteInfo={this._getTelemetryInfo()}\n              source={TOP_SITES_SOURCE} />\n          }\n        </div>\n    </TopSiteLink>);\n  }\n}\nTopSite.defaultProps = {\n  link: {},\n  onActivate() {}\n};\n\nexport class TopSitePlaceholder extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n  }\n\n  onEditButtonClick() {\n    this.props.dispatch(\n      {type: at.TOP_SITES_EDIT, data: {index: this.props.index}});\n  }\n\n  render() {\n    return (<TopSiteLink {...this.props} className={`placeholder ${this.props.className || \"\"}`} isDraggable={false}>\n      <button className=\"context-menu-button edit-button icon\"\n       title={this.props.intl.formatMessage({id: \"edit_topsites_edit_button\"})}\n       onClick={this.onEditButtonClick} />\n    </TopSiteLink>);\n  }\n}\n\nexport class _TopSiteList extends React.PureComponent {\n  static get DEFAULT_STATE() {\n    return {\n      activeIndex: null,\n      draggedIndex: null,\n      draggedSite: null,\n      draggedTitle: null,\n      topSitesPreview: null\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = _TopSiteList.DEFAULT_STATE;\n    this.onDragEvent = this.onDragEvent.bind(this);\n    this.onActivate = this.onActivate.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.draggedSite) {\n      const prevTopSites = this.props.TopSites && this.props.TopSites.rows;\n      const newTopSites = nextProps.TopSites && nextProps.TopSites.rows;\n      if (prevTopSites && prevTopSites[this.state.draggedIndex] &&\n        prevTopSites[this.state.draggedIndex].url === this.state.draggedSite.url &&\n        (!newTopSites[this.state.draggedIndex] || newTopSites[this.state.draggedIndex].url !== this.state.draggedSite.url)) {\n        // We got the new order from the redux store via props. We can clear state now.\n        this.setState(_TopSiteList.DEFAULT_STATE);\n      }\n    }\n  }\n\n  userEvent(event, index) {\n    this.props.dispatch(ac.UserEvent({\n      event,\n      source: TOP_SITES_SOURCE,\n      action_position: index\n    }));\n  }\n\n  onDragEvent(event, index, link, title) {\n    switch (event.type) {\n      case \"dragstart\":\n        this.dropped = false;\n        this.setState({\n          draggedIndex: index,\n          draggedSite: link,\n          draggedTitle: title,\n          activeIndex: null\n        });\n        this.userEvent(\"DRAG\", index);\n        break;\n      case \"dragend\":\n        if (!this.dropped) {\n          // If there was no drop event, reset the state to the default.\n          this.setState(_TopSiteList.DEFAULT_STATE);\n        }\n        break;\n      case \"dragenter\":\n        if (index === this.state.draggedIndex) {\n          this.setState({topSitesPreview: null});\n        } else {\n          this.setState({topSitesPreview: this._makeTopSitesPreview(index)});\n        }\n        break;\n      case \"drop\":\n        if (index !== this.state.draggedIndex) {\n          this.dropped = true;\n          this.props.dispatch(ac.AlsoToMain({\n            type: at.TOP_SITES_INSERT,\n            data: {\n              site: {\n                url: this.state.draggedSite.url,\n                label: this.state.draggedTitle,\n                customScreenshotURL: this.state.draggedSite.customScreenshotURL\n              },\n              index,\n              draggedFromIndex: this.state.draggedIndex\n            }\n          }));\n          this.userEvent(\"DROP\", index);\n        }\n        break;\n    }\n  }\n\n  _getTopSites() {\n    // Make a copy of the sites to truncate or extend to desired length\n    let topSites = this.props.TopSites.rows.slice();\n    topSites.length = this.props.TopSitesRows * TOP_SITES_MAX_SITES_PER_ROW;\n    return topSites;\n  }\n\n  /**\n   * Make a preview of the topsites that will be the result of dropping the currently\n   * dragged site at the specified index.\n   */\n  _makeTopSitesPreview(index) {\n    const topSites = this._getTopSites();\n    topSites[this.state.draggedIndex] = null;\n    const pinnedOnly = topSites.map(site => ((site && site.isPinned) ? site : null));\n    const unpinned = topSites.filter(site => site && !site.isPinned);\n    const siteToInsert = Object.assign({}, this.state.draggedSite, {isPinned: true, isDragged: true});\n    if (!pinnedOnly[index]) {\n      pinnedOnly[index] = siteToInsert;\n    } else {\n      // Find the hole to shift the pinned site(s) towards. We shift towards the\n      // hole left by the site being dragged.\n      let holeIndex = index;\n      const indexStep = index > this.state.draggedIndex ? -1 : 1;\n      while (pinnedOnly[holeIndex]) {\n        holeIndex += indexStep;\n      }\n\n      // Shift towards the hole.\n      const shiftingStep = index > this.state.draggedIndex ? 1 : -1;\n      while (holeIndex !== index) {\n        const nextIndex = holeIndex + shiftingStep;\n        pinnedOnly[holeIndex] = pinnedOnly[nextIndex];\n        holeIndex = nextIndex;\n      }\n      pinnedOnly[index] = siteToInsert;\n    }\n\n    // Fill in the remaining holes with unpinned sites.\n    const preview = pinnedOnly;\n    for (let i = 0; i < preview.length; i++) {\n      if (!preview[i]) {\n        preview[i] = unpinned.shift() || null;\n      }\n    }\n\n    return preview;\n  }\n\n  onActivate(index) {\n    this.setState({activeIndex: index});\n  }\n\n  render() {\n    const {props} = this;\n    const topSites = this.state.topSitesPreview || this._getTopSites();\n    const topSitesUI = [];\n    const commonProps = {\n      onDragEvent: this.onDragEvent,\n      dispatch: props.dispatch,\n      intl: props.intl\n    };\n    // We assign a key to each placeholder slot. We need it to be independent\n    // of the slot index (i below) so that the keys used stay the same during\n    // drag and drop reordering and the underlying DOM nodes are reused.\n    // This mostly (only?) affects linux so be sure to test on linux before changing.\n    let holeIndex = 0;\n\n    // On narrow viewports, we only show 6 sites per row. We'll mark the rest as\n    // .hide-for-narrow to hide in CSS via @media query.\n    const maxNarrowVisibleIndex = props.TopSitesRows * 6;\n\n    for (let i = 0, l = topSites.length; i < l; i++) {\n      const link = topSites[i] && Object.assign({}, topSites[i], {iconType: this.props.topSiteIconType(topSites[i])});\n      const slotProps = {\n        key: link ? link.url : holeIndex++,\n        index: i\n      };\n      if (i >= maxNarrowVisibleIndex) {\n        slotProps.className = \"hide-for-narrow\";\n      }\n      topSitesUI.push(!link ? (\n        <TopSitePlaceholder\n          {...slotProps}\n          {...commonProps} />\n      ) : (\n        <TopSite\n          link={link}\n          activeIndex={this.state.activeIndex}\n          onActivate={this.onActivate}\n          {...slotProps}\n          {...commonProps} />\n      ));\n    }\n    return (<ul className={`top-sites-list${this.state.draggedSite ? \" dnd-active\" : \"\"}`}>\n      {topSitesUI}\n    </ul>);\n  }\n}\n\nexport const TopSiteList = injectIntl(_TopSiteList);\n","/* globals Services */\n\"use strict\";\n\n/* istanbul ignore if */\nif (typeof ChromeUtils !== \"undefined\") {\n  ChromeUtils.import(\"resource://gre/modules/Services.jsm\");\n}\n\nlet usablePerfObj;\n\n/* istanbul ignore if */\n/* istanbul ignore else */\nif (typeof Services !== \"undefined\") {\n  // Borrow the high-resolution timer from the hidden window....\n  usablePerfObj = Services.appShell.hiddenDOMWindow.performance;\n} else if (typeof performance !== \"undefined\") {\n  // we must be running in content space\n  // eslint-disable-next-line no-undef\n  usablePerfObj = performance;\n} else {\n  // This is a dummy object so this file doesn't crash in the node prerendering\n  // task.\n  usablePerfObj = {\n    now() {},\n    mark() {}\n  };\n}\n\nfunction _PerfService(options) {\n  // For testing, so that we can use a fake Window.performance object with\n  // known state.\n  if (options && options.performanceObj) {\n    this._perf = options.performanceObj;\n  } else {\n    this._perf = usablePerfObj;\n  }\n}\n\n_PerfService.prototype = {\n  /**\n   * Calls the underlying mark() method on the appropriate Window.performance\n   * object to add a mark with the given name to the appropriate performance\n   * timeline.\n   *\n   * @param  {String} name  the name to give the current mark\n   * @return {void}\n   */\n  mark: function mark(str) {\n    this._perf.mark(str);\n  },\n\n  /**\n   * Calls the underlying getEntriesByName on the appropriate Window.performance\n   * object.\n   *\n   * @param  {String} name\n   * @param  {String} type eg \"mark\"\n   * @return {Array}       Performance* objects\n   */\n  getEntriesByName: function getEntriesByName(name, type) {\n    return this._perf.getEntriesByName(name, type);\n  },\n\n  /**\n   * The timeOrigin property from the appropriate performance object.\n   * Used to ensure that timestamps from the add-on code and the content code\n   * are comparable.\n   *\n   * @note If this is called from a context without a window\n   * (eg a JSM in chrome), it will return the timeOrigin of the XUL hidden\n   * window, which appears to be the first created window (and thus\n   * timeOrigin) in the browser.  Note also, however, there is also a private\n   * hidden window, presumably for private browsing, which appears to be\n   * created dynamically later.  Exactly how/when that shows up needs to be\n   * investigated.\n   *\n   * @return {Number} A double of milliseconds with a precision of 0.5us.\n   */\n  get timeOrigin() {\n    return this._perf.timeOrigin;\n  },\n\n  /**\n   * Returns the \"absolute\" version of performance.now(), i.e. one that\n   * should ([bug 1401406](https://bugzilla.mozilla.org/show_bug.cgi?id=1401406)\n   * be comparable across both chrome and content.\n   *\n   * @return {Number}\n   */\n  absNow: function absNow() {\n    return this.timeOrigin + this._perf.now();\n  },\n\n  /**\n   * This returns the absolute startTime from the most recent performance.mark()\n   * with the given name.\n   *\n   * @param  {String} name  the name to lookup the start time for\n   *\n   * @return {Number}       the returned start time, as a DOMHighResTimeStamp\n   *\n   * @throws {Error}        \"No Marks with the name ...\" if none are available\n   *\n   * @note Always surround calls to this by try/catch.  Otherwise your code\n   * may fail when the `privacy.resistFingerprinting` pref is true.  When\n   * this pref is set, all attempts to get marks will likely fail, which will\n   * cause this method to throw.\n   *\n   * See [bug 1369303](https://bugzilla.mozilla.org/show_bug.cgi?id=1369303)\n   * for more info.\n   */\n  getMostRecentAbsMarkStartByName(name) {\n    let entries = this.getEntriesByName(name, \"mark\");\n\n    if (!entries.length) {\n      throw new Error(`No marks with the name ${name}`);\n    }\n\n    let mostRecentEntry = entries[entries.length - 1];\n    return this._perf.timeOrigin + mostRecentEntry.startTime;\n  }\n};\n\nthis.perfService = new _PerfService();\nconst EXPORTED_SYMBOLS = [\"_PerfService\", \"perfService\"];\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {perfService as perfSvc} from \"common/PerfService.jsm\";\nimport React from \"react\";\n\n// Currently record only a fixed set of sections. This will prevent data\n// from custom sections from showing up or from topstories.\nconst RECORDED_SECTIONS = [\"highlights\", \"topsites\"];\n\nexport class ComponentPerfTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    // Just for test dependency injection:\n    this.perfSvc = this.props.perfSvc || perfSvc;\n\n    this._sendBadStateEvent = this._sendBadStateEvent.bind(this);\n    this._sendPaintedEvent = this._sendPaintedEvent.bind(this);\n    this._reportMissingData = false;\n    this._timestampHandled = false;\n    this._recordedFirstRender = false;\n  }\n\n  componentDidMount() {\n    if (!RECORDED_SECTIONS.includes(this.props.id)) {\n      return;\n    }\n\n    this._maybeSendPaintedEvent();\n  }\n\n  componentDidUpdate() {\n    if (!RECORDED_SECTIONS.includes(this.props.id)) {\n      return;\n    }\n\n    this._maybeSendPaintedEvent();\n  }\n\n  /**\n   * Call the given callback after the upcoming frame paints.\n   *\n   * @note Both setTimeout and requestAnimationFrame are throttled when the page\n   * is hidden, so this callback may get called up to a second or so after the\n   * requestAnimationFrame \"paint\" for hidden tabs.\n   *\n   * Newtabs hidden while loading will presumably be fairly rare (other than\n   * preloaded tabs, which we will be filtering out on the server side), so such\n   * cases should get lost in the noise.\n   *\n   * If we decide that it's important to find out when something that's hidden\n   * has \"painted\", however, another option is to post a message to this window.\n   * That should happen even faster than setTimeout, and, at least as of this\n   * writing, it's not throttled in hidden windows in Firefox.\n   *\n   * @param {Function} callback\n   *\n   * @returns void\n   */\n  _afterFramePaint(callback) {\n    requestAnimationFrame(() => setTimeout(callback, 0));\n  }\n\n  _maybeSendBadStateEvent() {\n    // Follow up bugs:\n    // https://github.com/mozilla/activity-stream/issues/3691\n    if (!this.props.initialized) {\n      // Remember to report back when data is available.\n      this._reportMissingData = true;\n    } else if (this._reportMissingData) {\n      this._reportMissingData = false;\n      // Report how long it took for component to become initialized.\n      this._sendBadStateEvent();\n    }\n  }\n\n  _maybeSendPaintedEvent() {\n    // If we've already handled a timestamp, don't do it again.\n    if (this._timestampHandled || !this.props.initialized) {\n      return;\n    }\n\n    // And if we haven't, we're doing so now, so remember that. Even if\n    // something goes wrong in the callback, we can't try again, as we'd be\n    // sending back the wrong data, and we have to do it here, so that other\n    // calls to this method while waiting for the next frame won't also try to\n    // handle it.\n    this._timestampHandled = true;\n    this._afterFramePaint(this._sendPaintedEvent);\n  }\n\n  /**\n   * Triggered by call to render. Only first call goes through due to\n   * `_recordedFirstRender`.\n   */\n  _ensureFirstRenderTsRecorded() {\n    // Used as t0 for recording how long component took to initialize.\n    if (!this._recordedFirstRender) {\n      this._recordedFirstRender = true;\n      // topsites_first_render_ts, highlights_first_render_ts.\n      const key = `${this.props.id}_first_render_ts`;\n      this.perfSvc.mark(key);\n    }\n  }\n\n  /**\n   * Creates `TELEMETRY_UNDESIRED_EVENT` with timestamp in ms\n   * of how much longer the data took to be ready for display than it would\n   * have been the ideal case.\n   * https://github.com/mozilla/ping-centre/issues/98\n   */\n  _sendBadStateEvent() {\n    // highlights_data_ready_ts, topsites_data_ready_ts.\n    const dataReadyKey = `${this.props.id}_data_ready_ts`;\n    this.perfSvc.mark(dataReadyKey);\n\n    try {\n      const firstRenderKey = `${this.props.id}_first_render_ts`;\n      // value has to be Int32.\n      const value = parseInt(this.perfSvc.getMostRecentAbsMarkStartByName(dataReadyKey) -\n                             this.perfSvc.getMostRecentAbsMarkStartByName(firstRenderKey), 10);\n      this.props.dispatch(ac.OnlyToMain({\n        type: at.SAVE_SESSION_PERF_DATA,\n        // highlights_data_late_by_ms, topsites_data_late_by_ms.\n        data: {[`${this.props.id}_data_late_by_ms`]: value}\n      }));\n    } catch (ex) {\n      // If this failed, it's likely because the `privacy.resistFingerprinting`\n      // pref is true.\n    }\n  }\n\n  _sendPaintedEvent() {\n    // Record first_painted event but only send if topsites.\n    if (this.props.id !== \"topsites\") {\n      return;\n    }\n\n    // topsites_first_painted_ts.\n    const key = `${this.props.id}_first_painted_ts`;\n    this.perfSvc.mark(key);\n\n    try {\n      const data = {};\n      data[key] = this.perfSvc.getMostRecentAbsMarkStartByName(key);\n\n      this.props.dispatch(ac.OnlyToMain({\n        type: at.SAVE_SESSION_PERF_DATA,\n        data\n      }));\n    } catch (ex) {\n      // If this failed, it's likely because the `privacy.resistFingerprinting`\n      // pref is true.  We should at least not blow up, and should continue\n      // to set this._timestampHandled to avoid going through this again.\n    }\n  }\n\n  render() {\n    if (RECORDED_SECTIONS.includes(this.props.id)) {\n      this._ensureFirstRenderTsRecorded();\n      this._maybeSendBadStateEvent();\n    }\n    return this.props.children;\n  }\n}\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\n\n/**\n * List of functions that return items that can be included as menu options in a\n * SectionMenu. All functions take the section as the only parameter.\n */\nexport const SectionMenuOptions = {\n  Separator: () => ({type: \"separator\"}),\n  MoveUp: section => ({\n    id: \"section_menu_action_move_up\",\n    icon: \"arrowhead-up\",\n    action: ac.OnlyToMain({\n      type: at.SECTION_MOVE,\n      data: {id: section.id, direction: -1}\n    }),\n    userEvent: \"MENU_MOVE_UP\",\n    disabled: !!section.isFirst\n  }),\n  MoveDown: section => ({\n    id: \"section_menu_action_move_down\",\n    icon: \"arrowhead-down\",\n    action: ac.OnlyToMain({\n      type: at.SECTION_MOVE,\n      data: {id: section.id, direction: +1}\n    }),\n    userEvent: \"MENU_MOVE_DOWN\",\n    disabled: !!section.isLast\n  }),\n  RemoveSection: section => ({\n    id: \"section_menu_action_remove_section\",\n    icon: \"dismiss\",\n    action: ac.SetPref(section.showPrefName, false),\n    userEvent: \"MENU_REMOVE\"\n  }),\n  CollapseSection: section => ({\n    id: \"section_menu_action_collapse_section\",\n    icon: \"minimize\",\n    action: ac.OnlyToMain({type: at.UPDATE_SECTION_PREFS, data: {id: section.id, value: {collapsed: true}}}),\n    userEvent: \"MENU_COLLAPSE\"\n  }),\n  ExpandSection: section => ({\n    id: \"section_menu_action_expand_section\",\n    icon: \"maximize\",\n    action: ac.OnlyToMain({type: at.UPDATE_SECTION_PREFS, data: {id: section.id, value: {collapsed: false}}}),\n    userEvent: \"MENU_EXPAND\"\n  }),\n  ManageSection: section => ({\n    id: \"section_menu_action_manage_section\",\n    icon: \"settings\",\n    action: ac.OnlyToMain({type: at.SETTINGS_OPEN}),\n    userEvent: \"MENU_MANAGE\"\n  }),\n  ManageWebExtension: section => ({\n    id: \"section_menu_action_manage_webext\",\n    icon: \"settings\",\n    action: ac.OnlyToMain({type: at.OPEN_WEBEXT_SETTINGS, data: section.id})\n  }),\n  AddTopSite: section => ({\n    id: \"section_menu_action_add_topsite\",\n    icon: \"add\",\n    action: {type: at.TOP_SITES_EDIT, data: {index: -1}},\n    userEvent: \"MENU_ADD_TOPSITE\"\n  }),\n  PrivacyNotice: section => ({\n    id: \"section_menu_action_privacy_notice\",\n    icon: \"info\",\n    action: ac.OnlyToMain({\n      type: at.OPEN_LINK,\n      data: {url: section.privacyNoticeURL}\n    }),\n    userEvent: \"MENU_PRIVACY_NOTICE\"\n  }),\n  CheckCollapsed: section => (section.collapsed ? SectionMenuOptions.ExpandSection(section) : SectionMenuOptions.CollapseSection(section))\n};\n","import {FormattedMessage, injectIntl} from \"react-intl\";\nimport {actionCreators as ac} from \"common/Actions.jsm\";\nimport {ErrorBoundary} from \"content-src/components/ErrorBoundary/ErrorBoundary\";\nimport React from \"react\";\nimport {SectionMenu} from \"content-src/components/SectionMenu/SectionMenu\";\nimport {SectionMenuOptions} from \"content-src/lib/section-menu-options\";\n\nconst VISIBLE = \"visible\";\nconst VISIBILITY_CHANGE_EVENT = \"visibilitychange\";\n\nfunction getFormattedMessage(message) {\n  return typeof message === \"string\" ? <span>{message}</span> : <FormattedMessage {...message} />;\n}\n\nexport class Disclaimer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onAcknowledge = this.onAcknowledge.bind(this);\n  }\n\n  onAcknowledge() {\n    this.props.dispatch(ac.SetPref(this.props.disclaimerPref, false));\n    this.props.dispatch(ac.UserEvent({event: \"DISCLAIMER_ACKED\", source: this.props.eventSource}));\n  }\n\n  render() {\n    const {disclaimer} = this.props;\n    return (\n      <div className=\"section-disclaimer\">\n          <div className=\"section-disclaimer-text\">\n            {getFormattedMessage(disclaimer.text)}\n            {disclaimer.link &&\n              <a href={disclaimer.link.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                {getFormattedMessage(disclaimer.link.title || disclaimer.link)}\n              </a>\n            }\n          </div>\n\n          <button onClick={this.onAcknowledge}>\n            {getFormattedMessage(disclaimer.button)}\n          </button>\n      </div>\n    );\n  }\n}\n\nexport const DisclaimerIntl = injectIntl(Disclaimer);\n\nexport class _CollapsibleSection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onBodyMount = this.onBodyMount.bind(this);\n    this.onHeaderClick = this.onHeaderClick.bind(this);\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\n    this.enableOrDisableAnimation = this.enableOrDisableAnimation.bind(this);\n    this.onMenuButtonClick = this.onMenuButtonClick.bind(this);\n    this.onMenuButtonMouseEnter = this.onMenuButtonMouseEnter.bind(this);\n    this.onMenuButtonMouseLeave = this.onMenuButtonMouseLeave.bind(this);\n    this.onMenuUpdate = this.onMenuUpdate.bind(this);\n    this.state = {enableAnimation: true, isAnimating: false, menuButtonHover: false, showContextMenu: false};\n  }\n\n  componentWillMount() {\n    this.props.document.addEventListener(VISIBILITY_CHANGE_EVENT, this.enableOrDisableAnimation);\n  }\n\n  componentWillUpdate(nextProps) {\n    // Check if we're about to go from expanded to collapsed\n    if (!this.props.collapsed && nextProps.collapsed) {\n      // This next line forces a layout flush of the section body, which has a\n      // max-height style set, so that the upcoming collapse animation can\n      // animate from that height to the collapsed height. Without this, the\n      // update is coalesced and there's no animation from no-max-height to 0.\n      this.sectionBody.scrollHeight; // eslint-disable-line no-unused-expressions\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this.enableOrDisableAnimation);\n  }\n\n  enableOrDisableAnimation() {\n    // Only animate the collapse/expand for visible tabs.\n    const visible = this.props.document.visibilityState === VISIBLE;\n    if (this.state.enableAnimation !== visible) {\n      this.setState({enableAnimation: visible});\n    }\n  }\n\n  onBodyMount(node) {\n    this.sectionBody = node;\n  }\n\n  onHeaderClick() {\n    // If this.sectionBody is unset, it means that we're in some sort of error\n    // state, probably displaying the error fallback, so we won't be able to\n    // compute the height, and we don't want to persist the preference.\n    // If props.collapsed is undefined handler shouldn't do anything.\n    if (!this.sectionBody || this.props.collapsed === undefined) {\n      return;\n    }\n\n    // Get the current height of the body so max-height transitions can work\n    this.setState({\n      isAnimating: true,\n      maxHeight: `${this.sectionBody.scrollHeight}px`\n    });\n    const {action, userEvent} = SectionMenuOptions.CheckCollapsed(this.props);\n    this.props.dispatch(action);\n    this.props.dispatch(ac.UserEvent({\n      event: userEvent,\n      source: this.props.source\n    }));\n  }\n\n  onTransitionEnd(event) {\n    // Only update the animating state for our own transition (not a child's)\n    if (event.target === event.currentTarget) {\n      this.setState({isAnimating: false});\n    }\n  }\n\n  renderIcon() {\n    const {icon} = this.props;\n    if (icon && icon.startsWith(\"moz-extension://\")) {\n      return <span className=\"icon icon-small-spacer\" style={{backgroundImage: `url('${icon}')`}} />;\n    }\n    return <span className={`icon icon-small-spacer icon-${icon || \"webextension\"}`} />;\n  }\n\n  onMenuButtonClick(event) {\n    event.preventDefault();\n    this.setState({showContextMenu: true});\n  }\n\n  onMenuButtonMouseEnter() {\n    this.setState({menuButtonHover: true});\n  }\n\n  onMenuButtonMouseLeave() {\n    this.setState({menuButtonHover: false});\n  }\n\n  onMenuUpdate(showContextMenu) {\n    this.setState({showContextMenu});\n  }\n\n  render() {\n    const isCollapsible = this.props.collapsed !== undefined;\n    const {enableAnimation, isAnimating, maxHeight, menuButtonHover, showContextMenu} = this.state;\n    const {id, eventSource, collapsed, disclaimer, title, extraMenuOptions, showPrefName, privacyNoticeURL, dispatch, isFirst, isLast, isWebExtension} = this.props;\n    const disclaimerPref = `section.${id}.showDisclaimer`;\n    const needsDisclaimer = disclaimer && this.props.Prefs.values[disclaimerPref];\n    const active = menuButtonHover || showContextMenu;\n    return (\n      <section\n        className={`collapsible-section ${this.props.className}${enableAnimation ? \" animation-enabled\" : \"\"}${collapsed ? \" collapsed\" : \"\"}${active ? \" active\" : \"\"}`}\n        // Note: data-section-id is used for web extension api tests in mozilla central\n        data-section-id={id}>\n        <div className=\"section-top-bar\">\n          <h3 className=\"section-title\">\n            <span className=\"click-target\" onClick={this.onHeaderClick}>\n              {this.renderIcon()}\n              {getFormattedMessage(title)}\n              {isCollapsible && <span className={`collapsible-arrow icon ${collapsed ? \"icon-arrowhead-forward-small\" : \"icon-arrowhead-down-small\"}`} />}\n            </span>\n          </h3>\n          <div>\n            <button\n              className=\"context-menu-button icon\"\n              onClick={this.onMenuButtonClick}\n              onMouseEnter={this.onMenuButtonMouseEnter}\n              onMouseLeave={this.onMenuButtonMouseLeave}>\n              <span className=\"sr-only\">\n                <FormattedMessage id=\"section_context_menu_button_sr\" />\n              </span>\n            </button>\n            {showContextMenu &&\n              <SectionMenu\n                id={id}\n                extraOptions={extraMenuOptions}\n                eventSource={eventSource}\n                showPrefName={showPrefName}\n                privacyNoticeURL={privacyNoticeURL}\n                collapsed={collapsed}\n                onUpdate={this.onMenuUpdate}\n                isFirst={isFirst}\n                isLast={isLast}\n                dispatch={dispatch}\n                isWebExtension={isWebExtension} />\n            }\n          </div>\n        </div>\n        <ErrorBoundary className=\"section-body-fallback\">\n          <div\n            className={`section-body${isAnimating ? \" animating\" : \"\"}`}\n            onTransitionEnd={this.onTransitionEnd}\n            ref={this.onBodyMount}\n            style={isAnimating && !collapsed ? {maxHeight} : null}>\n            {needsDisclaimer && <DisclaimerIntl disclaimerPref={disclaimerPref} disclaimer={disclaimer} eventSource={eventSource} dispatch={this.props.dispatch} />}\n            {this.props.children}\n          </div>\n        </ErrorBoundary>\n      </section>\n    );\n  }\n}\n\n_CollapsibleSection.defaultProps = {\n  document: global.document || {\n    addEventListener: () => {},\n    removeEventListener: () => {},\n    visibilityState: \"hidden\"\n  },\n  Prefs: {values: {}}\n};\n\nexport const CollapsibleSection = injectIntl(_CollapsibleSection);\n","import React from \"react\";\n\nexport class ContextMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.hideContext = this.hideContext.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  hideContext() {\n    this.props.onUpdate(false);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      global.addEventListener(\"click\", this.hideContext);\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    global.removeEventListener(\"click\", this.hideContext);\n  }\n\n  onClick(event) {\n    // Eat all clicks on the context menu so they don't bubble up to window.\n    // This prevents the context menu from closing when clicking disabled items\n    // or the separators.\n    event.stopPropagation();\n  }\n\n  render() {\n    return (<span className=\"context-menu\" onClick={this.onClick}>\n      <ul role=\"menu\" className=\"context-menu-list\">\n        {this.props.options.map((option, i) => (option.type === \"separator\" ?\n          (<li key={i} className=\"separator\" />) :\n          (option.type !== \"empty\" && <ContextMenuItem key={i} option={option} hideContext={this.hideContext} />)\n        ))}\n      </ul>\n    </span>);\n  }\n}\n\nexport class ContextMenuItem extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  onClick() {\n    this.props.hideContext();\n    this.props.option.onClick();\n  }\n\n  onKeyDown(event) {\n    const {option} = this.props;\n    switch (event.key) {\n      case \"Tab\":\n        // tab goes down in context menu, shift + tab goes up in context menu\n        // if we're on the last item, one more tab will close the context menu\n        // similarly, if we're on the first item, one more shift + tab will close it\n        if ((event.shiftKey && option.first) || (!event.shiftKey && option.last)) {\n          this.props.hideContext();\n        }\n        break;\n      case \"Enter\":\n        this.props.hideContext();\n        option.onClick();\n        break;\n    }\n  }\n\n  render() {\n    const {option} = this.props;\n    return (\n      <li role=\"menuitem\" className=\"context-menu-item\">\n        <a onClick={this.onClick} onKeyDown={this.onKeyDown} tabIndex=\"0\" className={option.disabled ? \"disabled\" : \"\"}>\n          {option.icon && <span className={`icon icon-spacer icon-${option.icon}`} />}\n          {option.label}\n        </a>\n      </li>);\n  }\n}\n","import {actionCreators as ac} from \"common/Actions.jsm\";\nimport {connect} from \"react-redux\";\nimport {ContextMenu} from \"content-src/components/ContextMenu/ContextMenu\";\nimport {injectIntl} from \"react-intl\";\nimport {LinkMenuOptions} from \"content-src/lib/link-menu-options\";\nimport React from \"react\";\n\nconst DEFAULT_SITE_MENU_OPTIONS = [\"CheckPinTopSite\", \"EditTopSite\", \"Separator\", \"OpenInNewWindow\", \"OpenInPrivateWindow\", \"Separator\", \"BlockUrl\"];\n\nexport class _LinkMenu extends React.PureComponent {\n  getOptions() {\n    const {props} = this;\n    const {site, index, source, isPrivateBrowsingEnabled, siteInfo, platform} = props;\n\n    // Handle special case of default site\n    const propOptions = !site.isDefault ? props.options : DEFAULT_SITE_MENU_OPTIONS;\n\n    const options = propOptions.map(o => LinkMenuOptions[o](site, index, source, isPrivateBrowsingEnabled, siteInfo, platform)).map(option => {\n      const {action, impression, id, string_id, type, userEvent} = option;\n      if (!type && id) {\n        option.label = props.intl.formatMessage({id: string_id || id});\n        option.onClick = () => {\n          props.dispatch(action);\n          if (userEvent) {\n            const userEventData = Object.assign({\n              event: userEvent,\n              source,\n              action_position: index\n            }, siteInfo);\n            props.dispatch(ac.UserEvent(userEventData));\n          }\n          if (impression && props.shouldSendImpressionStats) {\n            props.dispatch(impression);\n          }\n        };\n      }\n      return option;\n    });\n\n    // This is for accessibility to support making each item tabbable.\n    // We want to know which item is the first and which item\n    // is the last, so we can close the context menu accordingly.\n    options[0].first = true;\n    options[options.length - 1].last = true;\n    return options;\n  }\n\n  render() {\n    return (<ContextMenu\n      onUpdate={this.props.onUpdate}\n      options={this.getOptions()} />);\n  }\n}\n\nconst getState = state => ({isPrivateBrowsingEnabled: state.Prefs.values.isPrivateBrowsingEnabled, platform: state.Prefs.values.platform});\nexport const LinkMenu = connect(getState)(injectIntl(_LinkMenu));\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\n\nconst _OpenInPrivateWindow = site => ({\n  id: \"menu_action_open_private_window\",\n  icon: \"new-window-private\",\n  action: ac.OnlyToMain({\n    type: at.OPEN_PRIVATE_WINDOW,\n    data: {url: site.url, referrer: site.referrer}\n  }),\n  userEvent: \"OPEN_PRIVATE_WINDOW\"\n});\n\nexport const GetPlatformString = platform => {\n  switch (platform) {\n    case \"win\":\n      return \"menu_action_show_file_windows\";\n    case \"macosx\":\n      return \"menu_action_show_file_mac_os\";\n    case \"linux\":\n      return \"menu_action_show_file_linux\";\n    default:\n      return \"menu_action_show_file_default\";\n  }\n};\n\n/**\n * List of functions that return items that can be included as menu options in a\n * LinkMenu. All functions take the site as the first parameter, and optionally\n * the index of the site.\n */\nexport const LinkMenuOptions = {\n  Separator: () => ({type: \"separator\"}),\n  EmptyItem: () => ({type: \"empty\"}),\n  RemoveBookmark: site => ({\n    id: \"menu_action_remove_bookmark\",\n    icon: \"bookmark-added\",\n    action: ac.AlsoToMain({\n      type: at.DELETE_BOOKMARK_BY_ID,\n      data: site.bookmarkGuid\n    }),\n    userEvent: \"BOOKMARK_DELETE\"\n  }),\n  AddBookmark: site => ({\n    id: \"menu_action_bookmark\",\n    icon: \"bookmark-hollow\",\n    action: ac.AlsoToMain({\n      type: at.BOOKMARK_URL,\n      data: {url: site.url, title: site.title, type: site.type}\n    }),\n    userEvent: \"BOOKMARK_ADD\"\n  }),\n  OpenInNewWindow: site => ({\n    id: \"menu_action_open_new_window\",\n    icon: \"new-window\",\n    action: ac.AlsoToMain({\n      type: at.OPEN_NEW_WINDOW,\n      data: {\n        referrer: site.referrer,\n        typedBonus: site.typedBonus,\n        url: site.url\n      }\n    }),\n    userEvent: \"OPEN_NEW_WINDOW\"\n  }),\n  BlockUrl: (site, index, eventSource) => ({\n    id: \"menu_action_dismiss\",\n    icon: \"dismiss\",\n    action: ac.AlsoToMain({\n      type: at.BLOCK_URL,\n      data: {url: site.url, pocket_id: site.pocket_id}\n    }),\n    impression: ac.ImpressionStats({\n      source: eventSource,\n      block: 0,\n      tiles: [{id: site.guid, pos: index}]\n    }),\n    userEvent: \"BLOCK\"\n  }),\n\n  // This is an option for web extentions which will result in remove items from\n  // memory and notify the web extenion, rather than using the built-in block list.\n  WebExtDismiss: (site, index, eventSource) => ({\n    id: \"menu_action_webext_dismiss\",\n    string_id: \"menu_action_dismiss\",\n    icon: \"dismiss\",\n    action: ac.WebExtEvent(at.WEBEXT_DISMISS, {\n      source: eventSource,\n      url: site.url,\n      action_position: index\n    })\n  }),\n  DeleteUrl: (site, index, eventSource, isEnabled, siteInfo) => ({\n    id: \"menu_action_delete\",\n    icon: \"delete\",\n    action: {\n      type: at.DIALOG_OPEN,\n      data: {\n        onConfirm: [\n          ac.AlsoToMain({type: at.DELETE_HISTORY_URL, data: {url: site.url, pocket_id: site.pocket_id, forceBlock: site.bookmarkGuid}}),\n          ac.UserEvent(Object.assign({event: \"DELETE\", source: eventSource, action_position: index}, siteInfo))\n        ],\n        eventSource,\n        body_string_id: [\"confirm_history_delete_p1\", \"confirm_history_delete_notice_p2\"],\n        confirm_button_string_id: \"menu_action_delete\",\n        cancel_button_string_id: \"topsites_form_cancel_button\",\n        icon: \"modal-delete\"\n      }\n    },\n    userEvent: \"DIALOG_OPEN\"\n  }),\n  ShowFile: (site, index, eventSource, isEnabled, siteInfo, platform) => ({\n    id: GetPlatformString(platform),\n    icon: \"search\",\n    action: ac.OnlyToMain({\n      type: at.SHOW_DOWNLOAD_FILE,\n      data: {url: site.url}\n    })\n  }),\n  OpenFile: site => ({\n    id: \"menu_action_open_file\",\n    icon: \"open-file\",\n    action: ac.OnlyToMain({\n      type: at.OPEN_DOWNLOAD_FILE,\n      data: {url: site.url}\n    })\n  }),\n  CopyDownloadLink: site => ({\n    id: \"menu_action_copy_download_link\",\n    icon: \"copy\",\n    action: ac.OnlyToMain({\n      type: at.COPY_DOWNLOAD_LINK,\n      data: {url: site.url}\n    })\n  }),\n  GoToDownloadPage: site => ({\n    id: \"menu_action_go_to_download_page\",\n    icon: \"download\",\n    action: ac.OnlyToMain({\n      type: at.OPEN_LINK,\n      data: {url: site.referrer}\n    }),\n    disabled: !site.referrer\n  }),\n  RemoveDownload: site => ({\n    id: \"menu_action_remove_download\",\n    icon: \"delete\",\n    action: ac.OnlyToMain({\n      type: at.REMOVE_DOWNLOAD_FILE,\n      data: {url: site.url}\n    })\n  }),\n  PinTopSite: (site, index) => ({\n    id: \"menu_action_pin\",\n    icon: \"pin\",\n    action: ac.AlsoToMain({\n      type: at.TOP_SITES_PIN,\n      data: {site: {url: site.url}, index}\n    }),\n    userEvent: \"PIN\"\n  }),\n  UnpinTopSite: site => ({\n    id: \"menu_action_unpin\",\n    icon: \"unpin\",\n    action: ac.AlsoToMain({\n      type: at.TOP_SITES_UNPIN,\n      data: {site: {url: site.url}}\n    }),\n    userEvent: \"UNPIN\"\n  }),\n  SaveToPocket: (site, index, eventSource) => ({\n    id: \"menu_action_save_to_pocket\",\n    icon: \"pocket\",\n    action: ac.AlsoToMain({\n      type: at.SAVE_TO_POCKET,\n      data: {site: {url: site.url, title: site.title}}\n    }),\n    impression: ac.ImpressionStats({\n      source: eventSource,\n      pocket: 0,\n      tiles: [{id: site.guid, pos: index}]\n    }),\n    userEvent: \"SAVE_TO_POCKET\"\n  }),\n  DeleteFromPocket: site => ({\n    id: \"menu_action_delete_pocket\",\n    icon: \"delete\",\n    action: ac.AlsoToMain({\n      type: at.DELETE_FROM_POCKET,\n      data: {pocket_id: site.pocket_id}\n    }),\n    userEvent: \"DELETE_FROM_POCKET\"\n  }),\n  ArchiveFromPocket: site => ({\n    id: \"menu_action_archive_pocket\",\n    icon: \"check\",\n    action: ac.AlsoToMain({\n      type: at.ARCHIVE_FROM_POCKET,\n      data: {pocket_id: site.pocket_id}\n    }),\n    userEvent: \"ARCHIVE_FROM_POCKET\"\n  }),\n  EditTopSite: (site, index) => ({\n    id: \"edit_topsites_button_text\",\n    icon: \"edit\",\n    action: {\n      type: at.TOP_SITES_EDIT,\n      data: {index}\n    }\n  }),\n  CheckBookmark: site => (site.bookmarkGuid ? LinkMenuOptions.RemoveBookmark(site) : LinkMenuOptions.AddBookmark(site)),\n  CheckPinTopSite: (site, index) => (site.isPinned ? LinkMenuOptions.UnpinTopSite(site) : LinkMenuOptions.PinTopSite(site, index)),\n  CheckSavedToPocket: (site, index) => (site.pocket_id ? LinkMenuOptions.DeleteFromPocket(site) : LinkMenuOptions.SaveToPocket(site, index)),\n  CheckBookmarkOrArchive: site => (site.pocket_id ? LinkMenuOptions.ArchiveFromPocket(site) : LinkMenuOptions.CheckBookmark(site)),\n  OpenInPrivateWindow: (site, index, eventSource, isEnabled) => (isEnabled ? _OpenInPrivateWindow(site) : LinkMenuOptions.EmptyItem())\n};\n","/* eslint-env mozilla/frame-script */\n\nimport {actionCreators as ac, actionTypes as at, actionUtils as au} from \"common/Actions.jsm\";\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\n\nexport const MERGE_STORE_ACTION = \"NEW_TAB_INITIAL_STATE\";\nexport const OUTGOING_MESSAGE_NAME = \"ActivityStream:ContentToMain\";\nexport const INCOMING_MESSAGE_NAME = \"ActivityStream:MainToContent\";\nexport const EARLY_QUEUED_ACTIONS = [at.SAVE_SESSION_PERF_DATA, at.PAGE_PRERENDERED];\n\n/**\n * A higher-order function which returns a reducer that, on MERGE_STORE action,\n * will return the action.data object merged into the previous state.\n *\n * For all other actions, it merely calls mainReducer.\n *\n * Because we want this to merge the entire state object, it's written as a\n * higher order function which takes the main reducer (itself often a call to\n * combineReducers) as a parameter.\n *\n * @param  {function} mainReducer reducer to call if action != MERGE_STORE_ACTION\n * @return {function}             a reducer that, on MERGE_STORE_ACTION action,\n *                                will return the action.data object merged\n *                                into the previous state, and the result\n *                                of calling mainReducer otherwise.\n */\nfunction mergeStateReducer(mainReducer) {\n  return (prevState, action) => {\n    if (action.type === MERGE_STORE_ACTION) {\n      return {...prevState, ...action.data};\n    }\n\n    return mainReducer(prevState, action);\n  };\n}\n\n/**\n * messageMiddleware - Middleware that looks for SentToMain type actions, and sends them if necessary\n */\nconst messageMiddleware = store => next => action => {\n  const skipLocal = action.meta && action.meta.skipLocal;\n  if (au.isSendToMain(action)) {\n    sendAsyncMessage(OUTGOING_MESSAGE_NAME, action);\n  }\n  if (!skipLocal) {\n    next(action);\n  }\n};\n\nexport const rehydrationMiddleware = store => next => action => {\n  if (store._didRehydrate) {\n    return next(action);\n  }\n\n  const isMergeStoreAction = action.type === MERGE_STORE_ACTION;\n  const isRehydrationRequest = action.type === at.NEW_TAB_STATE_REQUEST;\n\n  if (isRehydrationRequest) {\n    store._didRequestInitialState = true;\n    return next(action);\n  }\n\n  if (isMergeStoreAction) {\n    store._didRehydrate = true;\n    return next(action);\n  }\n\n  // If init happened after our request was made, we need to re-request\n  if (store._didRequestInitialState && action.type === at.INIT) {\n    return next(ac.AlsoToMain({type: at.NEW_TAB_STATE_REQUEST}));\n  }\n\n  if (au.isBroadcastToContent(action) || au.isSendToOneContent(action) || au.isSendToPreloaded(action)) {\n    // Note that actions received before didRehydrate will not be dispatched\n    // because this could negatively affect preloading and the the state\n    // will be replaced by rehydration anyway.\n    return null;\n  }\n\n  return next(action);\n};\n\n/**\n * This middleware queues up all the EARLY_QUEUED_ACTIONS until it receives\n * the first action from main. This is useful for those actions for main which\n * require higher reliability, i.e. the action will not be lost in the case\n * that it gets sent before the main is ready to receive it. Conversely, any\n * actions allowed early are accepted to be ignorable or re-sendable.\n */\nexport const queueEarlyMessageMiddleware = store => next => action => {\n  if (store._receivedFromMain) {\n    next(action);\n  } else if (au.isFromMain(action)) {\n    next(action);\n    store._receivedFromMain = true;\n    // Sending out all the early actions as main is ready now\n    if (store._earlyActionQueue) {\n      store._earlyActionQueue.forEach(next);\n      store._earlyActionQueue = [];\n    }\n  } else if (EARLY_QUEUED_ACTIONS.includes(action.type)) {\n    store._earlyActionQueue = store._earlyActionQueue || [];\n    store._earlyActionQueue.push(action);\n  } else {\n    // Let any other type of action go through\n    next(action);\n  }\n};\n\n/**\n * initStore - Create a store and listen for incoming actions\n *\n * @param  {object} reducers An object containing Redux reducers\n * @param  {object} intialState (optional) The initial state of the store, if desired\n * @return {object}          A redux store\n */\nexport function initStore(reducers, initialState) {\n  const store = createStore(\n    mergeStateReducer(combineReducers(reducers)),\n    initialState,\n    global.addMessageListener && applyMiddleware(rehydrationMiddleware, queueEarlyMessageMiddleware, messageMiddleware)\n  );\n\n  store._didRehydrate = false;\n  store._didRequestInitialState = false;\n\n  if (global.addMessageListener) {\n    global.addMessageListener(INCOMING_MESSAGE_NAME, msg => {\n      try {\n        store.dispatch(msg.data);\n      } catch (ex) {\n        console.error(\"Content msg:\", msg, \"Dispatch error: \", ex); // eslint-disable-line no-console\n        dump(`Content msg: ${JSON.stringify(msg)}\\nDispatch error: ${ex}\\n${ex.stack}`);\n      }\n    });\n  }\n\n  return store;\n}\n","module.exports = PropTypes;","module.exports = Redux;","export const cardContextTypes = {\n  history: {\n    intlID: \"type_label_visited\",\n    icon: \"history-item\"\n  },\n  bookmark: {\n    intlID: \"type_label_bookmarked\",\n    icon: \"bookmark-added\"\n  },\n  trending: {\n    intlID: \"type_label_recommended\",\n    icon: \"trending\"\n  },\n  now: {\n    intlID: \"type_label_now\",\n    icon: \"now\"\n  },\n  pocket: {\n    intlID: \"type_label_pocket\",\n    icon: \"pocket\"\n  },\n  download: {\n    intlID: \"type_label_downloaded\",\n    icon: \"download\"\n  }\n};\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {cardContextTypes} from \"./types\";\nimport {connect} from \"react-redux\";\nimport {FormattedMessage} from \"react-intl\";\nimport {GetPlatformString} from \"content-src/lib/link-menu-options\";\nimport {LinkMenu} from \"content-src/components/LinkMenu/LinkMenu\";\nimport React from \"react\";\nimport {ScreenshotUtils} from \"content-src/lib/screenshot-utils\";\n\n// Keep track of pending image loads to only request once\nconst gImageLoading = new Map();\n\n/**\n * Card component.\n * Cards are found within a Section component and contain information about a link such\n * as preview image, page title, page description, and some context about if the page\n * was visited, bookmarked, trending etc...\n * Each Section can make an unordered list of Cards which will create one instane of\n * this class. Each card will then get a context menu which reflects the actions that\n * can be done on this Card.\n */\nexport class _Card extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeCard: null,\n      imageLoaded: false,\n      showContextMenu: false,\n      cardImage: null\n    };\n    this.onMenuButtonClick = this.onMenuButtonClick.bind(this);\n    this.onMenuUpdate = this.onMenuUpdate.bind(this);\n    this.onLinkClick = this.onLinkClick.bind(this);\n  }\n\n  /**\n   * Helper to conditionally load an image and update state when it loads.\n   */\n  async maybeLoadImage() {\n    // No need to load if it's already loaded or no image\n    const {cardImage} = this.state;\n    if (!cardImage) {\n      return;\n    }\n\n    const imageUrl = cardImage.url;\n    if (!this.state.imageLoaded) {\n      // Initialize a promise to share a load across multiple card updates\n      if (!gImageLoading.has(imageUrl)) {\n        const loaderPromise = new Promise((resolve, reject) => {\n          const loader = new Image();\n          loader.addEventListener(\"load\", resolve);\n          loader.addEventListener(\"error\", reject);\n          loader.src = imageUrl;\n        });\n\n        // Save and remove the promise only while it's pending\n        gImageLoading.set(imageUrl, loaderPromise);\n        loaderPromise.catch(ex => ex).then(() => gImageLoading.delete(imageUrl)).catch();\n      }\n\n      // Wait for the image whether just started loading or reused promise\n      await gImageLoading.get(imageUrl);\n\n      // Only update state if we're still waiting to load the original image\n      if (ScreenshotUtils.isRemoteImageLocal(this.state.cardImage, this.props.link.image) &&\n          !this.state.imageLoaded) {\n        this.setState({imageLoaded: true});\n      }\n    }\n  }\n\n  /**\n   * Helper to obtain the next state based on nextProps and prevState.\n   *\n   * NOTE: Rename this method to getDerivedStateFromProps when we update React\n   *       to >= 16.3. We will need to update tests as well. We cannot rename this\n   *       method to getDerivedStateFromProps now because there is a mismatch in\n   *       the React version that we are using for both testing and production.\n   *       (i.e. react-test-render => \"16.3.2\", react => \"16.2.0\").\n   *\n   * See https://github.com/airbnb/enzyme/blob/master/packages/enzyme-adapter-react-16/package.json#L43.\n   */\n  static getNextStateFromProps(nextProps, prevState) {\n    const {image} = nextProps.link;\n    const imageInState = ScreenshotUtils.isRemoteImageLocal(prevState.cardImage, image);\n    let nextState = null;\n\n    // Image is updating.\n    if (!imageInState && nextProps.link) {\n      nextState = {imageLoaded: false};\n    }\n\n    if (imageInState) {\n      return nextState;\n    }\n\n    // Since image was updated, attempt to revoke old image blob URL, if it exists.\n    ScreenshotUtils.maybeRevokeBlobObjectURL(prevState.cardImage);\n\n    nextState = nextState || {};\n    nextState.cardImage = ScreenshotUtils.createLocalImageObject(image);\n\n    return nextState;\n  }\n\n  onMenuButtonClick(event) {\n    event.preventDefault();\n    this.setState({\n      activeCard: this.props.index,\n      showContextMenu: true\n    });\n  }\n\n  /**\n   * Report to telemetry additional information about the item.\n   */\n  _getTelemetryInfo() {\n    // Filter out \"history\" type for being the default\n    if (this.props.link.type !== \"history\") {\n      return {value: {card_type: this.props.link.type}};\n    }\n\n    return null;\n  }\n\n  onLinkClick(event) {\n    event.preventDefault();\n    if (this.props.link.type === \"download\") {\n      this.props.dispatch(ac.OnlyToMain({\n        type: at.SHOW_DOWNLOAD_FILE,\n        data: this.props.link\n      }));\n    } else {\n      const {altKey, button, ctrlKey, metaKey, shiftKey} = event;\n      this.props.dispatch(ac.OnlyToMain({\n        type: at.OPEN_LINK,\n        data: Object.assign(this.props.link, {event: {altKey, button, ctrlKey, metaKey, shiftKey}})\n      }));\n    }\n    if (this.props.isWebExtension) {\n      this.props.dispatch(ac.WebExtEvent(at.WEBEXT_CLICK, {\n        source: this.props.eventSource,\n        url: this.props.link.url,\n        action_position: this.props.index\n      }));\n    } else {\n      this.props.dispatch(ac.UserEvent(Object.assign({\n        event: \"CLICK\",\n        source: this.props.eventSource,\n        action_position: this.props.index\n      }, this._getTelemetryInfo())));\n\n      if (this.props.shouldSendImpressionStats) {\n        this.props.dispatch(ac.ImpressionStats({\n          source: this.props.eventSource,\n          click: 0,\n          tiles: [{id: this.props.link.guid, pos: this.props.index}]\n        }));\n      }\n    }\n  }\n\n  onMenuUpdate(showContextMenu) {\n    this.setState({showContextMenu});\n  }\n\n  componentDidMount() {\n    this.maybeLoadImage();\n  }\n\n  componentDidUpdate() {\n    this.maybeLoadImage();\n  }\n\n  // NOTE: Remove this function when we update React to >= 16.3 since React will\n  //       call getDerivedStateFromProps automatically. We will also need to\n  //       rename getNextStateFromProps to getDerivedStateFromProps.\n  componentWillMount() {\n    const nextState = _Card.getNextStateFromProps(this.props, this.state);\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  // NOTE: Remove this function when we update React to >= 16.3 since React will\n  //       call getDerivedStateFromProps automatically. We will also need to\n  //       rename getNextStateFromProps to getDerivedStateFromProps.\n  componentWillReceiveProps(nextProps) {\n    const nextState = _Card.getNextStateFromProps(nextProps, this.state);\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    ScreenshotUtils.maybeRevokeBlobObjectURL(this.state.cardImage);\n  }\n\n  render() {\n    const {index, className, link, dispatch, contextMenuOptions, eventSource, shouldSendImpressionStats} = this.props;\n    const {props} = this;\n    const isContextMenuOpen = this.state.showContextMenu && this.state.activeCard === index;\n    // Display \"now\" as \"trending\" until we have new strings #3402\n    const {icon, intlID} = cardContextTypes[link.type === \"now\" ? \"trending\" : link.type] || {};\n    const hasImage = this.state.cardImage || link.hasImage;\n    const imageStyle = {backgroundImage: this.state.cardImage ? `url(${this.state.cardImage.url})` : \"none\"};\n    const outerClassName = [\n      \"card-outer\",\n      className,\n      isContextMenuOpen && \"active\",\n      props.placeholder && \"placeholder\"\n    ].filter(v => v).join(\" \");\n\n    return (<li className={outerClassName}>\n      <a href={link.type === \"pocket\" ? link.open_url : link.url} onClick={!props.placeholder ? this.onLinkClick : undefined}>\n        <div className=\"card\">\n          <div className=\"card-preview-image-outer\">\n            {hasImage &&\n              <div className={`card-preview-image${this.state.imageLoaded ? \" loaded\" : \"\"}`} style={imageStyle} />\n            }\n          </div>\n          <div className=\"card-details\">\n            {link.type === \"download\" && <div className=\"card-host-name alternate\"><FormattedMessage id={GetPlatformString(this.props.platform)} /></div>}\n            {link.hostname &&\n              <div className=\"card-host-name\">\n                {link.hostname.slice(0, 100)}{link.type === \"download\" && `  \\u2014 ${link.description}`}\n              </div>\n            }\n            <div className={[\n              \"card-text\",\n              icon ? \"\" : \"no-context\",\n              link.description ? \"\" : \"no-description\",\n              link.hostname ? \"\" : \"no-host-name\"\n            ].join(\" \")}>\n              <h4 className=\"card-title\" dir=\"auto\">{link.title}</h4>\n              <p className=\"card-description\" dir=\"auto\">{link.description}</p>\n            </div>\n            <div className=\"card-context\">\n              {icon && !link.context && <span className={`card-context-icon icon icon-${icon}`} />}\n              {link.icon && link.context && <span className=\"card-context-icon icon\" style={{backgroundImage: `url('${link.icon}')`}} />}\n              {intlID && !link.context && <div className=\"card-context-label\"><FormattedMessage id={intlID} defaultMessage=\"Visited\" /></div>}\n              {link.context && <div className=\"card-context-label\">{link.context}</div>}\n            </div>\n          </div>\n        </div>\n      </a>\n      {!props.placeholder && <button className=\"context-menu-button icon\"\n        onClick={this.onMenuButtonClick}>\n        <span className=\"sr-only\">{`Open context menu for ${link.title}`}</span>\n      </button>}\n      {isContextMenuOpen &&\n        <LinkMenu\n          dispatch={dispatch}\n          index={index}\n          source={eventSource}\n          onUpdate={this.onMenuUpdate}\n          options={link.contextMenuOptions || contextMenuOptions}\n          site={link}\n          siteInfo={this._getTelemetryInfo()}\n          shouldSendImpressionStats={shouldSendImpressionStats} />\n      }\n   </li>);\n  }\n}\n_Card.defaultProps = {link: {}};\nexport const Card = connect(state => ({platform: state.Prefs.values.platform}))(_Card);\nexport const PlaceholderCard = props => <Card placeholder={true} className={props.className} />;\n","import { CachedIterable, mapContextSync } from \"fluent\";\n\n/*\n * `ReactLocalization` handles translation formatting and fallback.\n *\n * The current negotiated fallback chain of languages is stored in the\n * `ReactLocalization` instance in form of an iterable of `MessageContext`\n * instances.  This iterable is used to find the best existing translation for\n * a given identifier.\n *\n * `Localized` components must subscribe to the changes of the\n * `ReactLocalization`'s fallback chain.  When the fallback chain changes (the\n * `messages` iterable is set anew), all subscribed compontent must relocalize.\n *\n * The `ReactLocalization` class instances are exposed to `Localized` elements\n * via the `LocalizationProvider` component.\n */\nexport default class ReactLocalization {\n  constructor(messages) {\n    this.contexts = new CachedIterable(messages);\n    this.subs = new Set();\n  }\n\n  /*\n   * Subscribe a `Localized` component to changes of `messages`.\n   */\n  subscribe(comp) {\n    this.subs.add(comp);\n  }\n\n  /*\n   * Unsubscribe a `Localized` component from `messages` changes.\n   */\n  unsubscribe(comp) {\n    this.subs.delete(comp);\n  }\n\n  /*\n   * Set a new `messages` iterable and trigger the retranslation.\n   */\n  setMessages(messages) {\n    this.contexts = new CachedIterable(messages);\n\n    // Update all subscribed Localized components.\n    this.subs.forEach(comp => comp.relocalize());\n  }\n\n  getMessageContext(id) {\n    return mapContextSync(this.contexts, id);\n  }\n\n  formatCompound(mcx, msg, args) {\n    const value = mcx.format(msg, args);\n\n    if (msg.attrs) {\n      var attrs = {};\n      for (const name of Object.keys(msg.attrs)) {\n        attrs[name] = mcx.format(msg.attrs[name], args);\n      }\n    }\n\n    return { value, attrs };\n  }\n\n  /*\n   * Find a translation by `id` and format it to a string using `args`.\n   */\n  getString(id, args, fallback) {\n    const mcx = this.getMessageContext(id);\n\n    if (mcx === null) {\n      return fallback || id;\n    }\n\n    const msg = mcx.getMessage(id);\n    return mcx.format(msg, args);\n  }\n}\n\nexport function isReactLocalization(props, propName) {\n  const prop = props[propName];\n\n  if (prop instanceof ReactLocalization) {\n    return null;\n  }\n\n  return new Error(\n    `The ${propName} context field must be an instance of ReactLocalization.`\n  );\n}\n","import { Component, Children } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ReactLocalization, { isReactLocalization} from \"./localization\";\n\n/*\n * The Provider component for the `ReactLocalization` class.\n *\n * Exposes a `ReactLocalization` instance to all descendants via React's\n * context feature.  It makes translations available to all localizable\n * elements in the descendant's render tree without the need to pass them\n * explicitly.\n *\n *     <LocalizationProvider messages={…}>\n *         …\n *     </LocalizationProvider>\n *\n * The `LocalizationProvider` component takes one prop: `messages`.  It should\n * be an iterable of `MessageContext` instances in order of the user's\n * preferred languages.  The `MessageContext` instances will be used by\n * `ReactLocalization` to format translations.  If a translation is missing in\n * one instance, `ReactLocalization` will fall back to the next one.\n */\nexport default class LocalizationProvider extends Component {\n  constructor(props) {\n    super(props);\n    const { messages } = props;\n\n    if (messages === undefined) {\n      throw new Error(\"LocalizationProvider must receive the messages prop.\");\n    }\n\n    if (!messages[Symbol.iterator]) {\n      throw new Error(\"The messages prop must be an iterable.\");\n    }\n\n    this.l10n = new ReactLocalization(messages);\n  }\n\n  getChildContext() {\n    return {\n      l10n: this.l10n\n    };\n  }\n\n  componentWillReceiveProps(next) {\n    const { messages } = next;\n\n    if (messages !== this.props.messages) {\n      this.l10n.setMessages(messages);\n    }\n  }\n\n  render() {\n    return Children.only(this.props.children);\n  }\n}\n\nLocalizationProvider.childContextTypes = {\n  l10n: isReactLocalization\n};\n\nLocalizationProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  messages: isIterable\n};\n\nfunction isIterable(props, propName, componentName) {\n  const prop = props[propName];\n\n  if (Symbol.iterator in Object(prop)) {\n    return null;\n  }\n\n  return new Error(\n    `The ${propName} prop supplied to ${componentName} must be an iterable.`\n  );\n}\n","/* eslint-env browser */\n\nconst TEMPLATE = document.createElement(\"template\");\n\nexport function parseMarkup(str) {\n  TEMPLATE.innerHTML = str;\n  return TEMPLATE.content;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in this directory.\n */\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\nexport default omittedCloseTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in this directory.\n */\n\nimport omittedCloseTags from './omittedCloseTags';\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = {\n  menuitem: true,\n  ...omittedCloseTags,\n};\n\nexport default voidElementTags;\n","import { isValidElement, cloneElement, Component, Children } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isReactLocalization } from \"./localization\";\nimport { parseMarkup } from \"./markup\";\nimport VOID_ELEMENTS from \"../vendor/voidElementTags\";\n\n// Match the opening angle bracket (<) in HTML tags, and HTML entities like\n// &amp;, &#0038;, &#x0026;.\nconst reMarkup = /<|&#?\\w+;/;\n\n/*\n * Prepare props passed to `Localized` for formatting.\n */\nfunction toArguments(props) {\n  const args = {};\n  const elems = {};\n\n  for (const [propname, propval] of Object.entries(props)) {\n    if (propname.startsWith(\"$\")) {\n      const name = propname.substr(1);\n      args[name] = propval;\n    } else if (isValidElement(propval)) {\n      // We'll try to match localNames of elements found in the translation with\n      // names of elements passed as props. localNames are always lowercase.\n      const name = propname.toLowerCase();\n      elems[name] = propval;\n    }\n  }\n\n  return [args, elems];\n}\n\n/*\n * The `Localized` class renders its child with translated props and children.\n *\n *     <Localized id=\"hello-world\">\n *         <p>{'Hello, world!'}</p>\n *     </Localized>\n *\n * The `id` prop should be the unique identifier of the translation.  Any\n * attributes found in the translation will be applied to the wrapped element.\n *\n * Arguments to the translation can be passed as `$`-prefixed props on\n * `Localized`.\n *\n *     <Localized id=\"hello-world\" $username={name}>\n *         <p>{'Hello, { $username }!'}</p>\n *     </Localized>\n *\n *  It's recommended that the contents of the wrapped component be a string\n *  expression.  The string will be used as the ultimate fallback if no\n *  translation is available.  It also makes it easy to grep for strings in the\n *  source code.\n */\nexport default class Localized extends Component {\n  componentDidMount() {\n    const { l10n } = this.context;\n\n    if (l10n) {\n      l10n.subscribe(this);\n    }\n  }\n\n  componentWillUnmount() {\n    const { l10n } = this.context;\n\n    if (l10n) {\n      l10n.unsubscribe(this);\n    }\n  }\n\n  /*\n   * Rerender this component in a new language.\n   */\n  relocalize() {\n    // When the `ReactLocalization`'s fallback chain changes, update the\n    // component.\n    this.forceUpdate();\n  }\n\n  render() {\n    const { l10n } = this.context;\n    const { id, attrs, children } = this.props;\n    const elem = Children.only(children);\n\n    if (!l10n) {\n      // Use the wrapped component as fallback.\n      return elem;\n    }\n\n    const mcx = l10n.getMessageContext(id);\n\n    if (mcx === null) {\n      // Use the wrapped component as fallback.\n      return elem;\n    }\n\n    const msg = mcx.getMessage(id);\n    const [args, elems] = toArguments(this.props);\n    const {\n      value: messageValue,\n      attrs: messageAttrs\n    } = l10n.formatCompound(mcx, msg, args);\n\n    // The default is to forbid all message attributes. If the attrs prop exists\n    // on the Localized instance, only set message attributes which have been\n    // explicitly allowed by the developer.\n    if (attrs && messageAttrs) {\n      var localizedProps = {};\n\n      for (const [name, value] of Object.entries(messageAttrs)) {\n        if (attrs[name]) {\n          localizedProps[name] = value;\n        }\n      }\n    }\n\n    // If the wrapped component is a known void element, explicitly dismiss the\n    // message value and do not pass it to cloneElement in order to avoid the\n    // \"void element tags must neither have `children` nor use\n    // `dangerouslySetInnerHTML`\" error.\n    if (elem.type in VOID_ELEMENTS) {\n      return cloneElement(elem, localizedProps);\n    }\n\n    // If the message has a null value, we're only interested in its attributes.\n    // Do not pass the null value to cloneElement as it would nuke all children\n    // of the wrapped component.\n    if (messageValue === null) {\n      return cloneElement(elem, localizedProps);\n    }\n\n    // If the message value doesn't contain any markup nor any HTML entities,\n    // insert it as the only child of the wrapped component.\n    if (!reMarkup.test(messageValue)) {\n      return cloneElement(elem, localizedProps, messageValue);\n    }\n\n    // If the message contains markup, parse it and try to match the children\n    // found in the translation with the props passed to this Localized.\n    const translationNodes = Array.from(parseMarkup(messageValue).childNodes);\n    const translatedChildren = translationNodes.map(childNode => {\n      if (childNode.nodeType === childNode.TEXT_NODE) {\n        return childNode.textContent;\n      }\n\n      // If the child is not expected just take its textContent.\n      if (!elems.hasOwnProperty(childNode.localName)) {\n        return childNode.textContent;\n      }\n\n      const sourceChild = elems[childNode.localName];\n\n      // If the element passed as a prop to <Localized> is a known void element,\n      // explicitly dismiss any textContent which might have accidentally been\n      // defined in the translation to prevent the \"void element tags must not\n      // have children\" error.\n      if (sourceChild.type in VOID_ELEMENTS) {\n        return sourceChild;\n      }\n\n      // TODO Protect contents of elements wrapped in <Localized>\n      // https://github.com/projectfluent/fluent.js/issues/184\n      // TODO  Control localizable attributes on elements passed as props\n      // https://github.com/projectfluent/fluent.js/issues/185\n      return cloneElement(sourceChild, null, childNode.textContent);\n    });\n\n    return cloneElement(elem, localizedProps, ...translatedChildren);\n  }\n}\n\nLocalized.contextTypes = {\n  l10n: isReactLocalization\n};\n\nLocalized.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","/*\n * @module fluent-react\n * @overview\n *\n\n * `fluent-react` provides React bindings for Fluent.  It takes advantage of\n * React's Components system and the virtual DOM.  Translations are exposed to\n * components via the provider pattern.\n *\n *     <LocalizationProvider messages={…}>\n *         <Localized id=\"hello-world\">\n *             <p>{'Hello, world!'}</p>\n *         </Localized>\n *     </LocalizationProvider>\n *\n * Consult the documentation of the `LocalizationProvider` and the `Localized`\n * components for more information.\n */\n\nexport { default as LocalizationProvider } from \"./provider\";\nexport { default as withLocalization } from \"./with_localization\";\nexport { default as Localized } from \"./localized\";\nexport { default as ReactLocalization, isReactLocalization }\n  from \"./localization\";\n","export const IS_NEWTAB = global.document && global.document.documentURI === \"about:newtab\";\n","import {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\nexport class TopSiteFormInput extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {validationError: this.props.validationError};\n    this.onChange = this.onChange.bind(this);\n    this.onMount = this.onMount.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.shouldFocus && !this.props.shouldFocus) {\n      this.input.focus();\n    }\n    if (nextProps.validationError && !this.props.validationError) {\n      this.setState({validationError: true});\n    }\n    // If the component is in an error state but the value was cleared by the parent\n    if (this.state.validationError && !nextProps.value) {\n      this.setState({validationError: false});\n    }\n  }\n\n  onChange(ev) {\n    if (this.state.validationError) {\n      this.setState({validationError: false});\n    }\n    this.props.onChange(ev);\n  }\n\n  onMount(input) {\n    this.input = input;\n  }\n\n  render() {\n    const showClearButton = this.props.value && this.props.onClear;\n    const {typeUrl} = this.props;\n    const {validationError} = this.state;\n\n    return (<label><FormattedMessage id={this.props.titleId} />\n      <div className={`field ${typeUrl ? \"url\" : \"\"}${validationError ? \" invalid\" : \"\"}`}>\n        {this.props.loading ?\n          <div className=\"loading-container\"><div className=\"loading-animation\" /></div> :\n          showClearButton && <div className=\"icon icon-clear-input\" onClick={this.props.onClear} />}\n        <input type=\"text\"\n          value={this.props.value}\n          ref={this.onMount}\n          onChange={this.onChange}\n          placeholder={this.props.intl.formatMessage({id: this.props.placeholderId})}\n          autoFocus={this.props.shouldFocus}\n          disabled={this.props.loading} />\n        {validationError &&\n          <aside className=\"error-tooltip\">\n            <FormattedMessage id={this.props.errorMessageId} />\n          </aside>}\n      </div>\n    </label>);\n  }\n}\n\nTopSiteFormInput.defaultProps = {\n  showClearButton: false,\n  value: \"\",\n  validationError: false\n};\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\nimport {TOP_SITES_SOURCE} from \"./TopSitesConstants\";\nimport {TopSiteFormInput} from \"./TopSiteFormInput\";\nimport {TopSiteLink} from \"./TopSite\";\n\nexport class TopSiteForm extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {site} = props;\n    this.state = {\n      label: site ? (site.label || site.hostname) : \"\",\n      url: site ? site.url : \"\",\n      validationError: false,\n      customScreenshotUrl: site ? site.customScreenshotURL : \"\",\n      showCustomScreenshotForm: site ? site.customScreenshotURL : false\n    };\n    this.onClearScreenshotInput = this.onClearScreenshotInput.bind(this);\n    this.onLabelChange = this.onLabelChange.bind(this);\n    this.onUrlChange = this.onUrlChange.bind(this);\n    this.onCancelButtonClick = this.onCancelButtonClick.bind(this);\n    this.onClearUrlClick = this.onClearUrlClick.bind(this);\n    this.onDoneButtonClick = this.onDoneButtonClick.bind(this);\n    this.onCustomScreenshotUrlChange = this.onCustomScreenshotUrlChange.bind(this);\n    this.onPreviewButtonClick = this.onPreviewButtonClick.bind(this);\n    this.onEnableScreenshotUrlForm = this.onEnableScreenshotUrlForm.bind(this);\n    this.validateUrl = this.validateUrl.bind(this);\n  }\n\n  onLabelChange(event) {\n    this.setState({\"label\": event.target.value});\n  }\n\n  onUrlChange(event) {\n    this.setState({\n      url: event.target.value,\n      validationError: false\n    });\n  }\n\n  onClearUrlClick() {\n    this.setState({\n      url: \"\",\n      validationError: false\n    });\n  }\n\n  onEnableScreenshotUrlForm() {\n    this.setState({showCustomScreenshotForm: true});\n  }\n\n  _updateCustomScreenshotInput(customScreenshotUrl) {\n    this.setState({\n      customScreenshotUrl,\n      validationError: false\n    });\n    this.props.dispatch({type: at.PREVIEW_REQUEST_CANCEL});\n  }\n\n  onCustomScreenshotUrlChange(event) {\n    this._updateCustomScreenshotInput(event.target.value);\n  }\n\n  onClearScreenshotInput() {\n    this._updateCustomScreenshotInput(\"\");\n  }\n\n  onCancelButtonClick(ev) {\n    ev.preventDefault();\n    this.props.onClose();\n  }\n\n  onDoneButtonClick(ev) {\n    ev.preventDefault();\n\n    if (this.validateForm()) {\n      const site = {url: this.cleanUrl(this.state.url)};\n      const {index} = this.props;\n      if (this.state.label !== \"\") {\n        site.label = this.state.label;\n      }\n\n      if (this.state.customScreenshotUrl) {\n        site.customScreenshotURL = this.cleanUrl(this.state.customScreenshotUrl);\n      } else if (this.props.site && this.props.site.customScreenshotURL) {\n        // Used to flag that previously cached screenshot should be removed\n        site.customScreenshotURL = null;\n      }\n      this.props.dispatch(ac.AlsoToMain({\n        type: at.TOP_SITES_PIN,\n        data: {site, index}\n      }));\n      this.props.dispatch(ac.UserEvent({\n        source: TOP_SITES_SOURCE,\n        event: \"TOP_SITES_EDIT\",\n        action_position: index\n      }));\n\n      this.props.onClose();\n    }\n  }\n\n  onPreviewButtonClick(event) {\n    event.preventDefault();\n    if (this.validateForm()) {\n      this.props.dispatch(ac.AlsoToMain({\n        type: at.PREVIEW_REQUEST,\n        data: {url: this.cleanUrl(this.state.customScreenshotUrl)}\n      }));\n      this.props.dispatch(ac.UserEvent({\n        source: TOP_SITES_SOURCE,\n        event: \"PREVIEW_REQUEST\"\n      }));\n    }\n  }\n\n  cleanUrl(url) {\n    // If we are missing a protocol, prepend http://\n    if (!url.startsWith(\"http:\") && !url.startsWith(\"https:\")) {\n      return `http://${url}`;\n    }\n    return url;\n  }\n\n  _tryParseUrl(url) {\n    try {\n      return new URL(url);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  validateUrl(url) {\n    const validProtocols = [\"http:\", \"https:\"];\n    const urlObj = this._tryParseUrl(url) || this._tryParseUrl(this.cleanUrl(url));\n\n    return urlObj && validProtocols.includes(urlObj.protocol);\n  }\n\n  validateCustomScreenshotUrl() {\n    const {customScreenshotUrl} = this.state;\n    return !customScreenshotUrl || this.validateUrl(customScreenshotUrl);\n  }\n\n  validateForm() {\n    const validate = this.validateUrl(this.state.url) && this.validateCustomScreenshotUrl();\n\n    if (!validate) {\n      this.setState({validationError: true});\n    }\n\n    return validate;\n  }\n\n  _renderCustomScreenshotInput() {\n    const {customScreenshotUrl} = this.state;\n    const requestFailed = this.props.previewResponse === \"\";\n    const validationError = (this.state.validationError && !this.validateCustomScreenshotUrl()) || requestFailed;\n    // Set focus on error if the url field is valid or when the input is first rendered and is empty\n    const shouldFocus = (validationError && this.validateUrl(this.state.url)) || !customScreenshotUrl;\n    const isLoading = this.props.previewResponse === null &&\n      customScreenshotUrl && this.props.previewUrl === this.cleanUrl(customScreenshotUrl);\n\n    if (!this.state.showCustomScreenshotForm) {\n      return (<a className=\"enable-custom-image-input\" onClick={this.onEnableScreenshotUrlForm}>\n        <FormattedMessage id=\"topsites_form_use_image_link\" />\n      </a>);\n    }\n    return (<div className=\"custom-image-input-container\">\n      <TopSiteFormInput\n        errorMessageId={requestFailed ? \"topsites_form_image_validation\" : \"topsites_form_url_validation\"}\n        loading={isLoading}\n        onChange={this.onCustomScreenshotUrlChange}\n        onClear={this.onClearScreenshotInput}\n        shouldFocus={shouldFocus}\n        typeUrl={true}\n        value={customScreenshotUrl}\n        validationError={validationError}\n        titleId=\"topsites_form_image_url_label\"\n        placeholderId=\"topsites_form_url_placeholder\"\n        intl={this.props.intl} />\n    </div>);\n  }\n\n  render() {\n    const {customScreenshotUrl} = this.state;\n    const requestFailed = this.props.previewResponse === \"\";\n    // For UI purposes, editing without an existing link is \"add\"\n    const showAsAdd = !this.props.site;\n    const previous = (this.props.site && this.props.site.customScreenshotURL) || \"\";\n    const changed = customScreenshotUrl && this.cleanUrl(customScreenshotUrl) !== previous;\n    // Preview mode if changes were made to the custom screenshot URL and no preview was received yet\n    // or the request failed\n    const previewMode = changed && !this.props.previewResponse;\n    const previewLink = Object.assign({}, this.props.site);\n    if (this.props.previewResponse) {\n      previewLink.screenshot = this.props.previewResponse;\n      previewLink.customScreenshotURL = this.props.previewUrl;\n    }\n    return (\n      <form className=\"topsite-form\">\n        <div className=\"form-input-container\">\n          <h3 className=\"section-title\">\n            <FormattedMessage id={showAsAdd ? \"topsites_form_add_header\" : \"topsites_form_edit_header\"} />\n          </h3>\n          <div className=\"fields-and-preview\">\n            <div className=\"form-wrapper\">\n              <TopSiteFormInput onChange={this.onLabelChange}\n                value={this.state.label}\n                titleId=\"topsites_form_title_label\"\n                placeholderId=\"topsites_form_title_placeholder\"\n                intl={this.props.intl} />\n              <TopSiteFormInput onChange={this.onUrlChange}\n                shouldFocus={this.state.validationError && !this.validateUrl(this.state.url)}\n                value={this.state.url}\n                onClear={this.onClearUrlClick}\n                validationError={this.state.validationError && !this.validateUrl(this.state.url)}\n                titleId=\"topsites_form_url_label\"\n                typeUrl={true}\n                placeholderId=\"topsites_form_url_placeholder\"\n                errorMessageId=\"topsites_form_url_validation\"\n                intl={this.props.intl} />\n              {this._renderCustomScreenshotInput()}\n            </div>\n            <TopSiteLink link={previewLink}\n              defaultStyle={requestFailed}\n              title={this.state.label} />\n          </div>\n        </div>\n        <section className=\"actions\">\n          <button className=\"cancel\" type=\"button\" onClick={this.onCancelButtonClick}>\n            <FormattedMessage id=\"topsites_form_cancel_button\" />\n          </button>\n          {previewMode ?\n            <button className=\"done preview\" type=\"submit\" onClick={this.onPreviewButtonClick}>\n              <FormattedMessage id=\"topsites_form_preview_button\" />\n            </button> :\n            <button className=\"done\" type=\"submit\" onClick={this.onDoneButtonClick}>\n              <FormattedMessage id={showAsAdd ? \"topsites_form_add_button\" : \"topsites_form_save_button\"} />\n            </button>}\n        </section>\n      </form>\n    );\n  }\n}\n\nTopSiteForm.defaultProps = {\n  site: null,\n  index: -1\n};\n","import React from \"react\";\n\nexport class ModalOverlay extends React.PureComponent {\n  componentWillMount() {\n    this.setState({active: true});\n    document.body.classList.add(\"modal-open\");\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove(\"modal-open\");\n    this.setState({active: false});\n  }\n\n  render() {\n    const {active} = this.state;\n    const {title, button_label} = this.props;\n    return (\n      <div>\n        <div className={`modalOverlayOuter ${active ? \"active\" : \"\"}`} />\n        <div className={`modalOverlayInner ${active ? \"active\" : \"\"}`}>\n          <h2> {title} </h2>\n          {this.props.children}\n          <div className=\"footer\">\n            <button onClick={this.props.onDoneButton} className=\"button primary modalButton\"> {button_label} </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import {ModalOverlay} from \"../../components/ModalOverlay/ModalOverlay\";\nimport React from \"react\";\n\nclass OnboardingCard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const {props} = this;\n    props.sendUserActionTelemetry({event: \"CLICK_BUTTON\", message_id: props.id, id: props.UISurface});\n    props.onAction(props.content);\n  }\n\n  render() {\n    const {content} = this.props;\n    return (\n      <div className=\"onboardingMessage\">\n        <div className={`onboardingMessageImage ${content.icon}`} />\n        <div className=\"onboardingContent\">\n          <span>\n            <h3> {content.title} </h3>\n            <p> {content.text} </p>\n          </span>\n          <span>\n            <button className=\"button onboardingButton\" onClick={this.onClick}> {content.button_label} </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class OnboardingMessage extends React.PureComponent {\n  render() {\n    const {props} = this;\n    return (\n      <ModalOverlay {...props} button_label={\"Start Browsing\"} title={\"Welcome to Firefox\"}>\n        <div className=\"onboardingMessageContainer\">\n          {props.bundle.map(message => (\n            <OnboardingCard key={message.id}\n              sendUserActionTelemetry={props.sendUserActionTelemetry}\n              onAction={props.onAction}\n              UISurface={props.UISurface}\n              {...message} />\n          ))}\n        </div>\n      </ModalOverlay>\n    );\n  }\n}\n","import React from \"react\";\nimport {safeURI} from \"../../template-utils\";\n\nconst ALLOWED_STYLE_TAGS = [\"color\", \"backgroundColor\"];\n\nexport const Button = props => {\n  const style = {};\n\n  // Add allowed style tags from props, e.g. props.color becomes style={color: props.color}\n  for (const tag of ALLOWED_STYLE_TAGS) {\n    if (typeof props[tag] !== \"undefined\") {\n      style[tag] = props[tag];\n    }\n  }\n  // remove border if bg is set to something custom\n  if (style.backgroundColor) {\n    style.border = \"0\";\n  }\n\n  return (<a href={safeURI(props.url)}\n    onClick={props.onClick}\n    className={props.className || \"ASRouterButton\"}\n    style={style}>\n    {props.children}\n  </a>);\n};\n","import React from \"react\";\n\nexport class SnippetBase extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onBlockClicked = this.onBlockClicked.bind(this);\n  }\n\n  onBlockClicked() {\n    this.props.sendUserActionTelemetry({event: \"BLOCK\", id: this.props.UISurface});\n    this.props.onBlock();\n  }\n\n  render() {\n    const {props} = this;\n\n    const containerClassName = `SnippetBaseContainer${props.className ? ` ${props.className}` : \"\"}`;\n\n    return (<div className={containerClassName}>\n      <div className=\"innerWrapper\">\n        {props.children}\n      </div>\n      <button className=\"blockButton\" onClick={this.onBlockClicked} />\n    </div>);\n  }\n}\n","import {Button} from \"../../components/Button/Button\";\nimport React from \"react\";\nimport {safeURI} from \"../../template-utils\";\nimport {SnippetBase} from \"../../components/SnippetBase/SnippetBase\";\n\nconst DEFAULT_ICON_PATH = \"chrome://branding/content/icon64.png\";\n\nexport class SimpleSnippet extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onButtonClick = this.onButtonClick.bind(this);\n  }\n\n  onButtonClick() {\n    this.props.sendUserActionTelemetry({event: \"CLICK_BUTTON\", id: this.props.UISurface});\n  }\n\n  renderTitle() {\n    const {title} = this.props.content;\n    return title ? <h3 className=\"title\">{title}</h3> : null;\n  }\n\n  renderTitleIcon() {\n    const titleIcon = safeURI(this.props.content.title_icon);\n    return titleIcon ? <span className=\"titleIcon\" style={{backgroundImage: `url(\"${titleIcon}\")`}} /> : null;\n  }\n\n  renderButton(className) {\n    const {props} = this;\n    return (<Button\n      className={className}\n      onClick={this.onButtonClick}\n      url={props.content.button_url}\n      color={props.content.button_color}\n      backgroundColor={props.content.button_background_color}>\n      {props.content.button_label}\n    </Button>);\n  }\n\n  render() {\n    const {props} = this;\n    const hasLink = props.content.button_url && props.content.button_type === \"anchor\";\n    const hasButton = props.content.button_url && !props.content.button_type;\n    const className = `SimpleSnippet${props.content.tall ? \" tall\" : \"\"}`;\n    return (<SnippetBase {...props} className={className}>\n      <img src={safeURI(props.content.icon) || DEFAULT_ICON_PATH} className=\"icon\" />\n      <div>\n        {this.renderTitleIcon()} {this.renderTitle()} <p className=\"body\">{props.richText || props.content.text}</p> {hasLink ? this.renderButton(\"ASRouterAnchor\") : null}\n      </div>\n      {hasButton ? <div>{this.renderButton()}</div> : null}\n    </SnippetBase>);\n  }\n}\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {perfService as perfSvc} from \"common/PerfService.jsm\";\n\nconst VISIBLE = \"visible\";\nconst VISIBILITY_CHANGE_EVENT = \"visibilitychange\";\n\nexport class DetectUserSessionStart {\n  constructor(store, options = {}) {\n    this._store = store;\n    // Overrides for testing\n    this.document = options.document || global.document;\n    this._perfService = options.perfService || perfSvc;\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n  }\n\n  /**\n   * sendEventOrAddListener - Notify immediately if the page is already visible,\n   *                    or else set up a listener for when visibility changes.\n   *                    This is needed for accurate session tracking for telemetry,\n   *                    because tabs are pre-loaded.\n   */\n  sendEventOrAddListener() {\n    if (this.document.visibilityState === VISIBLE) {\n      // If the document is already visible, to the user, send a notification\n      // immediately that a session has started.\n      this._sendEvent();\n    } else {\n      // If the document is not visible, listen for when it does become visible.\n      this.document.addEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n\n  /**\n   * _sendEvent - Sends a message to the main process to indicate the current\n   *              tab is now visible to the user, includes the\n   *              visibility_event_rcvd_ts time in ms from the UNIX epoch.\n   */\n  _sendEvent() {\n    this._perfService.mark(\"visibility_event_rcvd_ts\");\n\n    try {\n      let visibility_event_rcvd_ts = this._perfService\n        .getMostRecentAbsMarkStartByName(\"visibility_event_rcvd_ts\");\n\n      this._store.dispatch(ac.AlsoToMain({\n        type: at.SAVE_SESSION_PERF_DATA,\n        data: {visibility_event_rcvd_ts}\n      }));\n    } catch (ex) {\n      // If this failed, it's likely because the `privacy.resistFingerprinting`\n      // pref is true.  We should at least not blow up.\n    }\n  }\n\n  /**\n   * _onVisibilityChange - If the visibility has changed to visible, sends a notification\n   *                      and removes the event listener. This should only be called once per tab.\n   */\n  _onVisibilityChange() {\n    if (this.document.visibilityState === VISIBLE) {\n      this._sendEvent();\n      this.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n}\n","import {FormattedMessage, injectIntl} from \"react-intl\";\nimport {actionCreators as ac} from \"common/Actions.jsm\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\n\nexport class _StartupOverlay extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.clickSkip = this.clickSkip.bind(this);\n    this.initScene = this.initScene.bind(this);\n    this.removeOverlay = this.removeOverlay.bind(this);\n\n    this.state = {\n      emailInput: \"\",\n      overlayRemoved: false\n    };\n    this.initScene();\n  }\n\n  initScene() {\n    // Timeout to allow the scene to render once before attaching the attribute\n    // to trigger the animation.\n    setTimeout(() => {\n      this.setState({show: true});\n    }, 10);\n  }\n\n  removeOverlay() {\n    window.removeEventListener(\"visibilitychange\", this.removeOverlay);\n    this.setState({show: false});\n    setTimeout(() => {\n      // Allow scrolling and fully remove overlay after animation finishes.\n      document.body.classList.remove(\"welcome\");\n      this.setState({overlayRemoved: true});\n    }, 400);\n  }\n\n  onInputChange(e) {\n    this.setState({emailInput: e.target.value});\n  }\n\n  onSubmit() {\n    this.props.dispatch(ac.UserEvent({event: \"SUBMIT_EMAIL\"}));\n    window.addEventListener(\"visibilitychange\", this.removeOverlay);\n  }\n\n  clickSkip() {\n    this.props.dispatch(ac.UserEvent({event: \"SKIPPED_SIGNIN\"}));\n    this.removeOverlay();\n  }\n\n  render() {\n    // When skipping the onboarding tour we show AS but we are still on\n    // about:welcome, prop.isFirstrun is true and StartupOverlay is rendered\n    if (this.state.overlayRemoved) {\n      return null;\n    }\n\n    let termsLink = (<a href=\"https://accounts.firefox.com/legal/terms\" target=\"_blank\" rel=\"noopener noreferrer\"><FormattedMessage id=\"firstrun_terms_of_service\" /></a>);\n    let privacyLink = (<a href=\"https://accounts.firefox.com/legal/privacy\" target=\"_blank\" rel=\"noopener noreferrer\"><FormattedMessage id=\"firstrun_privacy_notice\" /></a>);\n    return (\n      <div className={`overlay-wrapper ${this.state.show ? \"show \" : \"\"}`}>\n        <div className=\"background\" />\n        <div className=\"firstrun-scene\">\n          <div className=\"fxaccounts-container\">\n            <div className=\"firstrun-left-divider\">\n              <h1 className=\"firstrun-title\"><FormattedMessage id=\"firstrun_title\" /></h1>\n              <p className=\"firstrun-content\"><FormattedMessage id=\"firstrun_content\" /></p>\n              <a className=\"firstrun-link\" href=\"https://www.mozilla.org/firefox/features/sync/\" target=\"_blank\" rel=\"noopener noreferrer\"><FormattedMessage id=\"firstrun_learn_more_link\" /></a>\n            </div>\n            <div className=\"firstrun-sign-in\">\n              <p className=\"form-header\"><FormattedMessage id=\"firstrun_form_header\" /><span className=\"sub-header\"><FormattedMessage id=\"firstrun_form_sub_header\" /></span></p>\n              <form method=\"get\" action=\"https://accounts.firefox.com\" target=\"_blank\" rel=\"noopener noreferrer\" onSubmit={this.onSubmit}>\n                <input name=\"service\" type=\"hidden\" value=\"sync\" />\n                <input name=\"action\" type=\"hidden\" value=\"email\" />\n                <input name=\"context\" type=\"hidden\" value=\"fx_desktop_v3\" />\n                <input name=\"entrypoint\" type=\"hidden\" value=\"activity-stream-firstrun\" />\n                <input name=\"utm_source\" type=\"hidden\" value=\"activity-stream\" />\n                <input name=\"utm_campaign\" type=\"hidden\" value=\"firstrun\" />\n                <input className=\"email-input\" name=\"email\" type=\"email\" required=\"true\" placeholder={this.props.intl.formatMessage({id: \"firstrun_email_input_placeholder\"})} onChange={this.onInputChange} />\n                <div className=\"extra-links\">\n                  <FormattedMessage\n                    id=\"firstrun_extra_legal_links\"\n                    values={{\n                      terms: termsLink,\n                      privacy: privacyLink\n                    }} />\n                </div>\n                <button className=\"continue-button\" type=\"submit\"><FormattedMessage id=\"firstrun_continue_to_login\" /></button>\n              </form>\n              <button className=\"skip-button\" disabled={!!this.state.emailInput} onClick={this.clickSkip}><FormattedMessage id=\"firstrun_skip_login\" /></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const StartupOverlay = connect()(injectIntl(_StartupOverlay));\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {MIN_CORNER_FAVICON_SIZE, MIN_RICH_FAVICON_SIZE, TOP_SITES_SOURCE} from \"./TopSitesConstants\";\nimport {CollapsibleSection} from \"content-src/components/CollapsibleSection/CollapsibleSection\";\nimport {ComponentPerfTimer} from \"content-src/components/ComponentPerfTimer/ComponentPerfTimer\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport React from \"react\";\nimport {TOP_SITES_MAX_SITES_PER_ROW} from \"common/Reducers.jsm\";\nimport {TopSiteForm} from \"./TopSiteForm\";\nimport {TopSiteList} from \"./TopSite\";\n\nfunction topSiteIconType(link) {\n  if (link.customScreenshotURL) {\n    return \"custom_screenshot\";\n  }\n  if (link.tippyTopIcon || link.faviconRef === \"tippytop\") {\n    return \"tippytop\";\n  }\n  if (link.faviconSize >= MIN_RICH_FAVICON_SIZE) {\n    return \"rich_icon\";\n  }\n  if (link.screenshot && link.faviconSize >= MIN_CORNER_FAVICON_SIZE) {\n    return \"screenshot_with_icon\";\n  }\n  if (link.screenshot) {\n    return \"screenshot\";\n  }\n  return \"no_image\";\n}\n\n/**\n * Iterates through TopSites and counts types of images.\n * @param acc Accumulator for reducer.\n * @param topsite Entry in TopSites.\n */\nfunction countTopSitesIconsTypes(topSites) {\n  const countTopSitesTypes = (acc, link) => {\n    acc[topSiteIconType(link)]++;\n    return acc;\n  };\n\n  return topSites.reduce(countTopSitesTypes, {\n    \"custom_screenshot\": 0,\n    \"screenshot_with_icon\": 0,\n    \"screenshot\": 0,\n    \"tippytop\": 0,\n    \"rich_icon\": 0,\n    \"no_image\": 0\n  });\n}\n\nexport class _TopSites extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onFormClose = this.onFormClose.bind(this);\n  }\n\n  /**\n   * Dispatch session statistics about the quality of TopSites icons and pinned count.\n   */\n  _dispatchTopSitesStats() {\n    const topSites = this._getVisibleTopSites();\n    const topSitesIconsStats = countTopSitesIconsTypes(topSites);\n    const topSitesPinned = topSites.filter(site => !!site.isPinned).length;\n    // Dispatch telemetry event with the count of TopSites images types.\n    this.props.dispatch(ac.AlsoToMain({\n      type: at.SAVE_SESSION_PERF_DATA,\n      data: {topsites_icon_stats: topSitesIconsStats, topsites_pinned: topSitesPinned}\n    }));\n  }\n\n  /**\n   * Return the TopSites that are visible based on prefs and window width.\n   */\n  _getVisibleTopSites() {\n    // We hide 2 sites per row when not in the wide layout.\n    let sitesPerRow = TOP_SITES_MAX_SITES_PER_ROW;\n    // $break-point-widest = 1072px (from _variables.scss)\n    if (!global.matchMedia(`(min-width: 1072px)`).matches) {\n      sitesPerRow -= 2;\n    }\n    return this.props.TopSites.rows.slice(0, this.props.TopSitesRows * sitesPerRow);\n  }\n\n  componentDidUpdate() {\n    this._dispatchTopSitesStats();\n  }\n\n  componentDidMount() {\n    this._dispatchTopSitesStats();\n  }\n\n  onFormClose() {\n    this.props.dispatch(ac.UserEvent({\n      source: TOP_SITES_SOURCE,\n      event: \"TOP_SITES_EDIT_CLOSE\"\n    }));\n    this.props.dispatch({type: at.TOP_SITES_CANCEL_EDIT});\n  }\n\n  render() {\n    const {props} = this;\n    const {editForm} = props.TopSites;\n\n    return (<ComponentPerfTimer id=\"topsites\" initialized={props.TopSites.initialized} dispatch={props.dispatch}>\n      <CollapsibleSection\n        className=\"top-sites\"\n        icon=\"topsites\"\n        id=\"topsites\"\n        title={{id: \"header_top_sites\"}}\n        extraMenuOptions={[\"AddTopSite\"]}\n        showPrefName=\"feeds.topsites\"\n        eventSource={TOP_SITES_SOURCE}\n        collapsed={props.TopSites.pref ? props.TopSites.pref.collapsed : undefined}\n        isFirst={props.isFirst}\n        isLast={props.isLast}\n        dispatch={props.dispatch}>\n        <TopSiteList TopSites={props.TopSites} TopSitesRows={props.TopSitesRows} dispatch={props.dispatch} intl={props.intl} topSiteIconType={topSiteIconType} />\n        <div className=\"edit-topsites-wrapper\">\n          {editForm &&\n            <div className=\"edit-topsites\">\n              <div className=\"modal-overlay\" onClick={this.onFormClose} />\n              <div className=\"modal\">\n                <TopSiteForm\n                  site={props.TopSites.rows[editForm.index]}\n                  onClose={this.onFormClose}\n                  dispatch={this.props.dispatch}\n                  intl={this.props.intl}\n                  {...editForm} />\n              </div>\n            </div>\n          }\n        </div>\n      </CollapsibleSection>\n    </ComponentPerfTimer>);\n  }\n}\n\nexport const TopSites = connect(state => ({\n  TopSites: state.TopSites,\n  Prefs: state.Prefs,\n  TopSitesRows: state.Prefs.values.topSitesRows\n}))(injectIntl(_TopSites));\n","import {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\nexport class Topic extends React.PureComponent {\n  render() {\n    const {url, name} = this.props;\n    return (<li><a key={name} className=\"topic-link\" href={url}>{name}</a></li>);\n  }\n}\n\nexport class Topics extends React.PureComponent {\n  render() {\n    const {topics, read_more_endpoint} = this.props;\n    return (\n      <div className=\"topic\">\n        <span><FormattedMessage id=\"pocket_read_more\" /></span>\n        <ul>{topics && topics.map(t => <Topic key={t.name} url={t.url} name={t.name} />)}</ul>\n\n        {read_more_endpoint && <a className=\"topic-read-more\" href={read_more_endpoint}>\n          <FormattedMessage id=\"pocket_read_even_more\" />\n        </a>}\n      </div>\n    );\n  }\n}\n","import {actionCreators as ac} from \"common/Actions.jsm\";\nimport {ContextMenu} from \"content-src/components/ContextMenu/ContextMenu\";\nimport {injectIntl} from \"react-intl\";\nimport React from \"react\";\nimport {SectionMenuOptions} from \"content-src/lib/section-menu-options\";\n\nconst DEFAULT_SECTION_MENU_OPTIONS = [\"MoveUp\", \"MoveDown\", \"Separator\", \"RemoveSection\", \"CheckCollapsed\", \"Separator\", \"ManageSection\"];\nconst WEBEXT_SECTION_MENU_OPTIONS = [\"MoveUp\", \"MoveDown\", \"Separator\", \"CheckCollapsed\", \"Separator\", \"ManageWebExtension\"];\n\nexport class _SectionMenu extends React.PureComponent {\n  getOptions() {\n    const {props} = this;\n\n    const propOptions = props.isWebExtension ? [...WEBEXT_SECTION_MENU_OPTIONS] : [...DEFAULT_SECTION_MENU_OPTIONS];\n    // Prepend custom options and a separator\n    if (props.extraOptions) {\n      propOptions.splice(0, 0, ...props.extraOptions, \"Separator\");\n    }\n    // Insert privacy notice before the last option (\"ManageSection\")\n    if (props.privacyNoticeURL) {\n      propOptions.splice(-1, 0, \"PrivacyNotice\");\n    }\n\n    const options = propOptions.map(o => SectionMenuOptions[o](props)).map(option => {\n      const {action, id, type, userEvent} = option;\n      if (!type && id) {\n        option.label = props.intl.formatMessage({id});\n        option.onClick = () => {\n          props.dispatch(action);\n          if (userEvent) {\n            props.dispatch(ac.UserEvent({\n              event: userEvent,\n              source: props.source\n            }));\n          }\n        };\n      }\n      return option;\n    });\n\n    // This is for accessibility to support making each item tabbable.\n    // We want to know which item is the first and which item\n    // is the last, so we can close the context menu accordingly.\n    options[0].first = true;\n    options[options.length - 1].last = true;\n    return options;\n  }\n\n  render() {\n    return (<ContextMenu\n      onUpdate={this.props.onUpdate}\n      options={this.getOptions()} />);\n  }\n}\n\nexport const SectionMenu = injectIntl(_SectionMenu);\n","import {Card, PlaceholderCard} from \"content-src/components/Card/Card\";\nimport {FormattedMessage, injectIntl} from \"react-intl\";\nimport {actionCreators as ac} from \"common/Actions.jsm\";\nimport {CollapsibleSection} from \"content-src/components/CollapsibleSection/CollapsibleSection\";\nimport {ComponentPerfTimer} from \"content-src/components/ComponentPerfTimer/ComponentPerfTimer\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {Topics} from \"content-src/components/Topics/Topics\";\nimport {TopSites} from \"content-src/components/TopSites/TopSites\";\n\nconst VISIBLE = \"visible\";\nconst VISIBILITY_CHANGE_EVENT = \"visibilitychange\";\nconst CARDS_PER_ROW_DEFAULT = 3;\nconst CARDS_PER_ROW_COMPACT_WIDE = 4;\n\nfunction getFormattedMessage(message) {\n  return typeof message === \"string\" ? <span>{message}</span> : <FormattedMessage {...message} />;\n}\n\nexport class Section extends React.PureComponent {\n  get numRows() {\n    const {rowsPref, maxRows, Prefs} = this.props;\n    return rowsPref ? Prefs.values[rowsPref] : maxRows;\n  }\n\n  _dispatchImpressionStats() {\n    const {props} = this;\n    let cardsPerRow = CARDS_PER_ROW_DEFAULT;\n    if (props.compactCards && global.matchMedia(`(min-width: 1072px)`).matches) {\n      // If the section has compact cards and the viewport is wide enough, we show\n      // 4 columns instead of 3.\n      // $break-point-widest = 1072px (from _variables.scss)\n      cardsPerRow = CARDS_PER_ROW_COMPACT_WIDE;\n    }\n    const maxCards = cardsPerRow * this.numRows;\n    const cards = props.rows.slice(0, maxCards);\n\n    if (this.needsImpressionStats(cards)) {\n      props.dispatch(ac.ImpressionStats({\n        source: props.eventSource,\n        tiles: cards.map(link => ({id: link.guid}))\n      }));\n      this.impressionCardGuids = cards.map(link => link.guid);\n    }\n  }\n\n  // This sends an event when a user sees a set of new content. If content\n  // changes while the page is hidden (i.e. preloaded or on a hidden tab),\n  // only send the event if the page becomes visible again.\n  sendImpressionStatsOrAddListener() {\n    const {props} = this;\n\n    if (!props.shouldSendImpressionStats || !props.dispatch) {\n      return;\n    }\n\n    if (props.document.visibilityState === VISIBLE) {\n      this._dispatchImpressionStats();\n    } else {\n      // We should only ever send the latest impression stats ping, so remove any\n      // older listeners.\n      if (this._onVisibilityChange) {\n        props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n      }\n\n      // When the page becomes visible, send the impression stats ping if the section isn't collapsed.\n      this._onVisibilityChange = () => {\n        if (props.document.visibilityState === VISIBLE) {\n          if (!this.props.pref.collapsed) {\n            this._dispatchImpressionStats();\n          }\n          props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n        }\n      };\n      props.document.addEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.rows.length && !this.props.pref.collapsed) {\n      this.sendImpressionStatsOrAddListener();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {props} = this;\n    const isCollapsed = props.pref.collapsed;\n    const wasCollapsed = prevProps.pref.collapsed;\n    if (\n      // Don't send impression stats for the empty state\n      props.rows.length &&\n      (\n        // We only want to send impression stats if the content of the cards has changed\n        // and the section is not collapsed...\n        (props.rows !== prevProps.rows && !isCollapsed) ||\n        // or if we are expanding a section that was collapsed.\n        (wasCollapsed && !isCollapsed)\n      )\n    ) {\n      this.sendImpressionStatsOrAddListener();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._onVisibilityChange) {\n      this.props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n\n  needsImpressionStats(cards) {\n    if (!this.impressionCardGuids || (this.impressionCardGuids.length !== cards.length)) {\n      return true;\n    }\n\n    for (let i = 0; i < cards.length; i++) {\n      if (cards[i].guid !== this.impressionCardGuids[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      id, eventSource, title, icon, rows,\n      emptyState, dispatch, compactCards,\n      contextMenuOptions, initialized, disclaimer,\n      pref, privacyNoticeURL, isFirst, isLast\n    } = this.props;\n\n    const maxCardsPerRow = compactCards ? CARDS_PER_ROW_COMPACT_WIDE : CARDS_PER_ROW_DEFAULT;\n    const {numRows} = this;\n    const maxCards = maxCardsPerRow * numRows;\n    const maxCardsOnNarrow = CARDS_PER_ROW_DEFAULT * numRows;\n\n    // Show topics only for top stories and if it's not initialized yet (so\n    // content doesn't shift when it is loaded) or has loaded with topics\n    const shouldShowTopics = (id === \"topstories\" &&\n      (!this.props.topics || this.props.topics.length > 0));\n\n    const realRows = rows.slice(0, maxCards);\n\n    // The empty state should only be shown after we have initialized and there is no content.\n    // Otherwise, we should show placeholders.\n    const shouldShowEmptyState = initialized && !rows.length;\n\n    const cards = [];\n    if (!shouldShowEmptyState) {\n      for (let i = 0; i < maxCards; i++) {\n        const link = realRows[i];\n        // On narrow viewports, we only show 3 cards per row. We'll mark the rest as\n        // .hide-for-narrow to hide in CSS via @media query.\n        const className = (i >= maxCardsOnNarrow) ? \"hide-for-narrow\" : \"\";\n        cards.push(link ? (\n          <Card key={i}\n            index={i}\n            className={className}\n            dispatch={dispatch}\n            link={link}\n            contextMenuOptions={contextMenuOptions}\n            eventSource={eventSource}\n            shouldSendImpressionStats={this.props.shouldSendImpressionStats}\n            isWebExtension={this.props.isWebExtension} />\n        ) : (\n          <PlaceholderCard key={i} className={className} />\n        ));\n      }\n    }\n\n    const sectionClassName = [\n      \"section\",\n      compactCards ? \"compact-cards\" : \"normal-cards\"\n    ].join(\" \");\n\n    // <Section> <-- React component\n    // <section> <-- HTML5 element\n    return (<ComponentPerfTimer {...this.props}>\n      <CollapsibleSection className={sectionClassName} icon={icon}\n        title={title}\n        id={id}\n        eventSource={eventSource}\n        disclaimer={disclaimer}\n        collapsed={this.props.pref.collapsed}\n        showPrefName={(pref && pref.feed) || id}\n        privacyNoticeURL={privacyNoticeURL}\n        Prefs={this.props.Prefs}\n        isFirst={isFirst}\n        isLast={isLast}\n        dispatch={this.props.dispatch}\n        isWebExtension={this.props.isWebExtension}>\n\n        {!shouldShowEmptyState && (<ul className=\"section-list\" style={{padding: 0}}>\n          {cards}\n        </ul>)}\n        {shouldShowEmptyState &&\n          <div className=\"section-empty-state\">\n            <div className=\"empty-state\">\n              {emptyState.icon && emptyState.icon.startsWith(\"moz-extension://\") ?\n                <img className=\"empty-state-icon icon\" style={{\"background-image\": `url('${emptyState.icon}')`}} /> :\n                <img className={`empty-state-icon icon icon-${emptyState.icon}`} />}\n              <p className=\"empty-state-message\">\n                {getFormattedMessage(emptyState.message)}\n              </p>\n            </div>\n          </div>}\n        {shouldShowTopics && <Topics topics={this.props.topics} read_more_endpoint={this.props.read_more_endpoint} />}\n      </CollapsibleSection>\n    </ComponentPerfTimer>);\n  }\n}\n\nSection.defaultProps = {\n  document: global.document,\n  rows: [],\n  emptyState: {},\n  pref: {},\n  title: \"\"\n};\n\nexport const SectionIntl = connect(state => ({Prefs: state.Prefs}))(injectIntl(Section));\n\nexport class _Sections extends React.PureComponent {\n  renderSections() {\n    const sections = [];\n    const enabledSections = this.props.Sections.filter(section => section.enabled);\n    const {sectionOrder, \"feeds.topsites\": showTopSites} = this.props.Prefs.values;\n    // Enabled sections doesn't include Top Sites, so we add it if enabled.\n    const expectedCount = enabledSections.length + ~~showTopSites;\n\n    for (const sectionId of sectionOrder.split(\",\")) {\n      const commonProps = {\n        key: sectionId,\n        isFirst: sections.length === 0,\n        isLast: sections.length === expectedCount - 1\n      };\n      if (sectionId === \"topsites\" && showTopSites) {\n        sections.push(<TopSites {...commonProps} />);\n      } else {\n        const section = enabledSections.find(s => s.id === sectionId);\n        if (section) {\n          sections.push(<SectionIntl {...section} {...commonProps} />);\n        }\n      }\n    }\n    return sections;\n  }\n\n  render() {\n    return (\n      <div className=\"sections-list\">\n        {this.renderSections()}\n      </div>\n    );\n  }\n}\n\nexport const Sections = connect(state => ({Sections: state.Sections, Prefs: state.Prefs}))(_Sections);\n","/* globals ContentSearchUIController */\n\"use strict\";\n\nimport {FormattedMessage, injectIntl} from \"react-intl\";\nimport {actionCreators as ac} from \"common/Actions.jsm\";\nimport {connect} from \"react-redux\";\nimport {IS_NEWTAB} from \"content-src/lib/constants\";\nimport React from \"react\";\n\nexport class _Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.onInputMount = this.onInputMount.bind(this);\n  }\n\n  handleEvent(event) {\n    // Also track search events with our own telemetry\n    if (event.detail.type === \"Search\") {\n      this.props.dispatch(ac.UserEvent({event: \"SEARCH\"}));\n    }\n  }\n\n  onClick(event) {\n    window.gContentSearchController.search(event);\n  }\n\n  componentWillUnmount() {\n    delete window.gContentSearchController;\n  }\n\n  onInputMount(input) {\n    if (input) {\n      // The \"healthReportKey\" and needs to be \"newtab\" or \"abouthome\" so that\n      // BrowserUsageTelemetry.jsm knows to handle events with this name, and\n      // can add the appropriate telemetry probes for search. Without the correct\n      // name, certain tests like browser_UsageTelemetry_content.js will fail\n      // (See github ticket #2348 for more details)\n      const healthReportKey = IS_NEWTAB ? \"newtab\" : \"abouthome\";\n\n      // The \"searchSource\" needs to be \"newtab\" or \"homepage\" and is sent with\n      // the search data and acts as context for the search request (See\n      // nsISearchEngine.getSubmission). It is necessary so that search engine\n      // plugins can correctly atribute referrals. (See github ticket #3321 for\n      // more details)\n      const searchSource = IS_NEWTAB ? \"newtab\" : \"homepage\";\n\n      // gContentSearchController needs to exist as a global so that tests for\n      // the existing about:home can find it; and so it allows these tests to pass.\n      // In the future, when activity stream is default about:home, this can be renamed\n      window.gContentSearchController = new ContentSearchUIController(input, input.parentNode,\n        healthReportKey, searchSource);\n      addEventListener(\"ContentSearchClient\", this);\n    } else {\n      window.gContentSearchController = null;\n      removeEventListener(\"ContentSearchClient\", this);\n    }\n  }\n\n  /*\n   * Do not change the ID on the input field, as legacy newtab code\n   * specifically looks for the id 'newtab-search-text' on input fields\n   * in order to execute searches in various tests\n   */\n  render() {\n    return (<div className=\"search-wrapper\">\n      <label htmlFor=\"newtab-search-text\" className=\"search-label\">\n        <span className=\"sr-only\"><FormattedMessage id=\"search_web_placeholder\" /></span>\n      </label>\n      <input\n        id=\"newtab-search-text\"\n        maxLength=\"256\"\n        placeholder={this.props.intl.formatMessage({id: \"search_web_placeholder\"})}\n        ref={this.onInputMount}\n        title={this.props.intl.formatMessage({id: \"search_web_placeholder\"})}\n        type=\"search\" />\n      <button\n        id=\"searchSubmit\"\n        className=\"search-button\"\n        onClick={this.onClick}\n        title={this.props.intl.formatMessage({id: \"search_button\"})}>\n        <span className=\"sr-only\"><FormattedMessage id=\"search_button\" /></span>\n      </button>\n    </div>);\n  }\n}\n\nexport const Search = connect()(injectIntl(_Search));\n","class _PrerenderData {\n  constructor(options) {\n    this.initialPrefs = options.initialPrefs;\n    this.initialSections = options.initialSections;\n    this._setValidation(options.validation);\n  }\n\n  get validation() {\n    return this._validation;\n  }\n\n  set validation(value) {\n    this._setValidation(value);\n  }\n\n  get invalidatingPrefs() {\n    return this._invalidatingPrefs;\n  }\n\n    // This is needed so we can use it in the constructor\n  _setValidation(value = []) {\n    this._validation = value;\n    this._invalidatingPrefs = value.reduce((result, next) => {\n      if (typeof next === \"string\") {\n        result.push(next);\n        return result;\n      } else if (next && next.oneOf) {\n        return result.concat(next.oneOf);\n      } else if (next && next.indexedDB) {\n        return result.concat(next.indexedDB);\n      }\n      throw new Error(\"Your validation configuration is not properly configured\");\n    }, []);\n  }\n\n  arePrefsValid(getPref, indexedDBPrefs) {\n    for (const prefs of this.validation) {\n      // {oneOf: [\"foo\", \"bar\"]}\n      if (prefs && prefs.oneOf && !prefs.oneOf.some(name => getPref(name) === this.initialPrefs[name])) {\n        return false;\n\n        // {indexedDB: [\"foo\", \"bar\"]}\n      } else if (indexedDBPrefs && prefs && prefs.indexedDB) {\n        const anyModifiedPrefs = prefs.indexedDB.some(prefName => indexedDBPrefs.some(pref => pref && pref[prefName]));\n        if (anyModifiedPrefs) {\n          return false;\n        }\n        // \"foo\"\n      } else if (getPref(prefs) !== this.initialPrefs[prefs]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nthis.PrerenderData = new _PrerenderData({\n  initialPrefs: {\n    \"migrationExpired\": true,\n    \"feeds.topsites\": true,\n    \"showSearch\": true,\n    \"topSitesRows\": 1,\n    \"feeds.section.topstories\": true,\n    \"feeds.section.highlights\": true,\n    \"sectionOrder\": \"topsites,topstories,highlights\",\n    \"collapsed\": false\n  },\n  // Prefs listed as invalidating will prevent the prerendered version\n  // of AS from being used if their value is something other than what is listed\n  // here. This is required because some preferences cause the page layout to be\n  // too different for the prerendered version to be used. Unfortunately, this\n  // will result in users who have modified some of their preferences not being\n  // able to get the benefits of prerendering.\n  validation: [\n    \"feeds.topsites\",\n    \"showSearch\",\n    \"topSitesRows\",\n    \"sectionOrder\",\n    // This means if either of these are set to their default values,\n    // prerendering can be used.\n    {oneOf: [\"feeds.section.topstories\", \"feeds.section.highlights\"]},\n    // If any component has the following preference set to `true` it will\n    // invalidate the prerendered version.\n    {indexedDB: [\"collapsed\"]}\n  ],\n  initialSections: [\n    {\n      enabled: true,\n      icon: \"pocket\",\n      id: \"topstories\",\n      order: 1,\n      title: {id: \"header_recommended_by\", values: {provider: \"Pocket\"}}\n    },\n    {\n      enabled: true,\n      id: \"highlights\",\n      icon: \"highlights\",\n      order: 2,\n      title: {id: \"header_highlights\"}\n    }\n  ]\n});\n\nthis._PrerenderData = _PrerenderData;\nconst EXPORTED_SYMBOLS = [\"PrerenderData\", \"_PrerenderData\"];\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {connect} from \"react-redux\";\nimport {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\n/**\n * Manual migration component used to start the profile import wizard.\n * Message is presented temporarily and will go away if:\n * 1.  User clicks \"No Thanks\"\n * 2.  User completed the data import\n * 3.  After 3 active days\n * 4.  User clicks \"Cancel\" on the import wizard (currently not implemented).\n */\nexport class _ManualMigration extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onLaunchTour = this.onLaunchTour.bind(this);\n    this.onCancelTour = this.onCancelTour.bind(this);\n  }\n\n  onLaunchTour() {\n    this.props.dispatch(ac.AlsoToMain({type: at.MIGRATION_START}));\n    this.props.dispatch(ac.UserEvent({event: at.MIGRATION_START}));\n  }\n\n  onCancelTour() {\n    this.props.dispatch(ac.AlsoToMain({type: at.MIGRATION_CANCEL}));\n    this.props.dispatch(ac.UserEvent({event: at.MIGRATION_CANCEL}));\n  }\n\n  render() {\n    return (<div className=\"manual-migration-container\">\n        <p>\n          <span className=\"icon icon-import\" />\n          <FormattedMessage id=\"manual_migration_explanation2\" />\n        </p>\n        <div className=\"manual-migration-actions actions\">\n          <button className=\"dismiss\" onClick={this.onCancelTour}>\n            <FormattedMessage id=\"manual_migration_cancel_button\" />\n          </button>\n          <button onClick={this.onLaunchTour}>\n            <FormattedMessage id=\"manual_migration_import_button\" />\n          </button>\n        </div>\n    </div>);\n  }\n}\n\nexport const ManualMigration = connect()(_ManualMigration);\n","import {actionCreators as ac, actionTypes} from \"common/Actions.jsm\";\nimport {connect} from \"react-redux\";\nimport {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\n/**\n * ConfirmDialog component.\n * One primary action button, one cancel button.\n *\n * Content displayed is controlled by `data` prop the component receives.\n * Example:\n * data: {\n *   // Any sort of data needed to be passed around by actions.\n *   payload: site.url,\n *   // Primary button AlsoToMain action.\n *   action: \"DELETE_HISTORY_URL\",\n *   // Primary button USerEvent action.\n *   userEvent: \"DELETE\",\n *   // Array of locale ids to display.\n *   message_body: [\"confirm_history_delete_p1\", \"confirm_history_delete_notice_p2\"],\n *   // Text for primary button.\n *   confirm_button_string_id: \"menu_action_delete\"\n * },\n */\nexport class _ConfirmDialog extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this._handleCancelBtn = this._handleCancelBtn.bind(this);\n    this._handleConfirmBtn = this._handleConfirmBtn.bind(this);\n  }\n\n  _handleCancelBtn() {\n    this.props.dispatch({type: actionTypes.DIALOG_CANCEL});\n    this.props.dispatch(ac.UserEvent({event: actionTypes.DIALOG_CANCEL, source: this.props.data.eventSource}));\n  }\n\n  _handleConfirmBtn() {\n    this.props.data.onConfirm.forEach(this.props.dispatch);\n  }\n\n  _renderModalMessage() {\n    const message_body = this.props.data.body_string_id;\n\n    if (!message_body) {\n      return null;\n    }\n\n    return (<span>\n      {message_body.map(msg => <p key={msg}><FormattedMessage id={msg} /></p>)}\n    </span>);\n  }\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return (<div className=\"confirmation-dialog\">\n      <div className=\"modal-overlay\" onClick={this._handleCancelBtn} />\n      <div className=\"modal\">\n        <section className=\"modal-message\">\n          {this.props.data.icon && <span className={`icon icon-spacer icon-${this.props.data.icon}`} />}\n          {this._renderModalMessage()}\n        </section>\n        <section className=\"actions\">\n          <button onClick={this._handleCancelBtn}>\n            <FormattedMessage id={this.props.data.cancel_button_string_id} />\n          </button>\n          <button className=\"done\" onClick={this._handleConfirmBtn}>\n            <FormattedMessage id={this.props.data.confirm_button_string_id} />\n          </button>\n        </section>\n      </div>\n    </div>);\n  }\n}\n\nexport const ConfirmDialog = connect(state => state.Dialog)(_ConfirmDialog);\n","import {ASRouterUtils} from \"../../asrouter/asrouter-content\";\nimport React from \"react\";\n\nexport class ASRouterAdmin extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onMessage = this.onMessage.bind(this);\n    this.findOtherBundledMessagesOfSameTemplate = this.findOtherBundledMessagesOfSameTemplate.bind(this);\n    this.state = {};\n  }\n\n  onMessage({data: action}) {\n    if (action.type === \"ADMIN_SET_STATE\") {\n      this.setState(action.data);\n    }\n  }\n\n  componentWillMount() {\n    ASRouterUtils.sendMessage({type: \"ADMIN_CONNECT_STATE\"});\n    ASRouterUtils.addListener(this.onMessage);\n  }\n\n  componentWillUnmount() {\n    ASRouterUtils.removeListener(this.onMessage);\n  }\n\n  findOtherBundledMessagesOfSameTemplate(template) {\n    return this.state.messages.filter(msg => msg.template === template && msg.bundled);\n  }\n\n  handleBlock(msg) {\n    if (msg.bundled) {\n      // If we are blocking a message that belongs to a bundle, block all other messages that are bundled of that same template\n      let bundle = this.findOtherBundledMessagesOfSameTemplate(msg.template);\n      return () => ASRouterUtils.blockBundle(bundle);\n    }\n    return () => ASRouterUtils.blockById(msg.id);\n  }\n\n  handleUnblock(msg) {\n    if (msg.bundled) {\n      // If we are unblocking a message that belongs to a bundle, unblock all other messages that are bundled of that same template\n      let bundle = this.findOtherBundledMessagesOfSameTemplate(msg.template);\n      return () => ASRouterUtils.unblockBundle(bundle);\n    }\n    return () => ASRouterUtils.unblockById(msg.id);\n  }\n\n  handleOverride(id) {\n    return () => ASRouterUtils.overrideMessage(id);\n  }\n\n  renderMessageItem(msg) {\n    const isCurrent = msg.id === this.state.lastMessageId;\n    const isBlocked = this.state.blockList.includes(msg.id);\n\n    let itemClassName = \"message-item\";\n    if (isCurrent) { itemClassName += \" current\"; }\n    if (isBlocked) { itemClassName += \" blocked\"; }\n\n    return (<tr className={itemClassName} key={msg.id}>\n      <td className=\"message-id\"><span>{msg.id}</span></td>\n      <td>\n        <button className={`button ${(isBlocked ? \"\" : \" primary\")}`} onClick={isBlocked ? this.handleUnblock(msg) : this.handleBlock(msg)}>{isBlocked ? \"Unblock\" : \"Block\"}</button>\n       {isBlocked ? null : <button className=\"button\" onClick={this.handleOverride(msg.id)}>Show</button>}\n      </td>\n      <td className=\"message-summary\">\n        <pre>{JSON.stringify(msg, null, 2)}</pre>\n      </td>\n    </tr>);\n  }\n\n  renderMessages() {\n    if (!this.state.messages) {\n      return null;\n    }\n    return (<table><tbody>\n      {this.state.messages.map(msg => this.renderMessageItem(msg))}\n    </tbody></table>);\n  }\n\n  renderProviders() {\n    return (<table><tbody>\n      {this.state.providers.map((provider, i) => (<tr className=\"message-item\" key={i}>\n        <td>{provider.id}</td>\n        <td>{provider.type === \"remote\" ? <a target=\"_blank\" href={provider.url}>{provider.url}</a> : \"(local)\"}</td>\n      </tr>))}\n    </tbody></table>);\n  }\n\n  render() {\n    return (<div className=\"asrouter-admin outer-wrapper\">\n      <h1>AS Router Admin</h1>\n      <button className=\"button primary\" onClick={ASRouterUtils.getNextMessage}>Refresh Current Message</button>\n      <h2>Message Providers</h2>\n      {this.state.providers ? this.renderProviders() : null}\n      <h2>Messages</h2>\n      {this.renderMessages()}\n    </div>);\n  }\n}\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {addLocaleData, injectIntl, IntlProvider} from \"react-intl\";\nimport {ASRouterAdmin} from \"content-src/components/ASRouterAdmin/ASRouterAdmin\";\nimport {ConfirmDialog} from \"content-src/components/ConfirmDialog/ConfirmDialog\";\nimport {connect} from \"react-redux\";\nimport {ErrorBoundary} from \"content-src/components/ErrorBoundary/ErrorBoundary\";\nimport {ManualMigration} from \"content-src/components/ManualMigration/ManualMigration\";\nimport {PrerenderData} from \"common/PrerenderData.jsm\";\nimport React from \"react\";\nimport {Search} from \"content-src/components/Search/Search\";\nimport {Sections} from \"content-src/components/Sections/Sections\";\nimport {StartupOverlay} from \"content-src/components/StartupOverlay/StartupOverlay\";\n\nconst PrefsButton = injectIntl(props => (\n  <div className=\"prefs-button\">\n    <button className=\"icon icon-settings\" onClick={props.onClick} title={props.intl.formatMessage({id: \"settings_pane_button_label\"})} />\n  </div>\n));\n\n// Add the locale data for pluralization and relative-time formatting for now,\n// this just uses english locale data. We can make this more sophisticated if\n// more features are needed.\nfunction addLocaleDataForReactIntl(locale) {\n  addLocaleData([{locale, parentLocale: \"en\"}]);\n}\n\nexport class _Base extends React.PureComponent {\n  componentWillMount() {\n    const {App, locale, Theme} = this.props;\n    if (Theme.className) {\n      this.updateTheme(Theme);\n    }\n    this.sendNewTabRehydrated(App);\n    addLocaleDataForReactIntl(locale);\n    if (this.props.isFirstrun) {\n      global.document.body.classList.add(\"welcome\");\n    }\n  }\n\n  componentDidMount() {\n    // Request state AFTER the first render to ensure we don't cause the\n    // prerendered DOM to be unmounted. Otherwise, NEW_TAB_STATE_REQUEST is\n    // dispatched right after the store is ready.\n    if (this.props.isPrerendered) {\n      this.props.dispatch(ac.AlsoToMain({type: at.NEW_TAB_STATE_REQUEST}));\n      this.props.dispatch(ac.AlsoToMain({type: at.PAGE_PRERENDERED}));\n    }\n  }\n\n  componentWillUnmount() {\n    this.updateTheme({className: \"\"});\n  }\n\n  componentWillUpdate({App, Theme}) {\n    this.updateTheme(Theme);\n    this.sendNewTabRehydrated(App);\n  }\n\n  updateTheme(Theme) {\n    const bodyClassName = [\n      \"activity-stream\",\n      // If we skipped the about:welcome overlay and removed the CSS class\n      // we don't want to add it back to the Activity Stream view\n      document.body.classList.contains(\"welcome\") ? \"welcome\" : \"\",\n      Theme.className\n    ].filter(v => v).join(\" \");\n    global.document.body.className = bodyClassName;\n  }\n\n  // The NEW_TAB_REHYDRATED event is used to inform feeds that their\n  // data has been consumed e.g. for counting the number of tabs that\n  // have rendered that data.\n  sendNewTabRehydrated(App) {\n    if (App && App.initialized && !this.renderNotified) {\n      this.props.dispatch(ac.AlsoToMain({type: at.NEW_TAB_REHYDRATED, data: {}}));\n      this.renderNotified = true;\n    }\n  }\n\n  render() {\n    const {props} = this;\n    const {App, locale, strings} = props;\n    const {initialized} = App;\n\n    const prefs = props.Prefs.values;\n    if ((prefs.asrouterExperimentEnabled || prefs.asrouterOnboardingCohort > 0) && window.location.hash === \"#asrouter\") {\n      return (<ASRouterAdmin />);\n    }\n\n    if (!props.isPrerendered && !initialized) {\n      return null;\n    }\n\n    // Until we can delete the existing onboarding tour, just hide the onboarding button when users are in\n    // the new simplified onboarding experiment. CSS hacks ftw\n    if (prefs.asrouterOnboardingCohort > 0) {\n      global.document.body.classList.add(\"hide-onboarding\");\n    }\n\n    return (<IntlProvider locale={locale} messages={strings}>\n        <ErrorBoundary className=\"base-content-fallback\">\n          <BaseContent {...this.props} />\n        </ErrorBoundary>\n      </IntlProvider>);\n  }\n}\n\nexport class BaseContent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.openPreferences = this.openPreferences.bind(this);\n  }\n\n  openPreferences() {\n    this.props.dispatch(ac.OnlyToMain({type: at.SETTINGS_OPEN}));\n    this.props.dispatch(ac.UserEvent({event: \"OPEN_NEWTAB_PREFS\"}));\n  }\n\n  render() {\n    const {props} = this;\n    const {App} = props;\n    const {initialized} = App;\n    const prefs = props.Prefs.values;\n\n    const shouldBeFixedToTop = PrerenderData.arePrefsValid(name => prefs[name]);\n\n    const outerClassName = [\n      \"outer-wrapper\",\n      shouldBeFixedToTop && \"fixed-to-top\"\n    ].filter(v => v).join(\" \");\n\n    return (\n      <div>\n        <div className={outerClassName}>\n          <main>\n            {prefs.showSearch &&\n              <div className=\"non-collapsible-section\">\n                <ErrorBoundary>\n                  <Search />\n                </ErrorBoundary>\n              </div>\n            }\n            <div className={`body-wrapper${(initialized ? \" on\" : \"\")}`}>\n              {!prefs.migrationExpired &&\n                <div className=\"non-collapsible-section\">\n                  <ManualMigration />\n                </div>\n                }\n              <Sections />\n              <PrefsButton onClick={this.openPreferences} />\n            </div>\n            <ConfirmDialog />\n          </main>\n        </div>\n        {this.props.isFirstrun && <StartupOverlay />}\n      </div>);\n  }\n}\n\nexport const Base = connect(state => ({App: state.App, Prefs: state.Prefs, Theme: state.Theme}))(_Base);\n","import React from \"react\";\n\nexport const VISIBLE = \"visible\";\nexport const VISIBILITY_CHANGE_EVENT = \"visibilitychange\";\n\n/**\n * Component wrapper used to send telemetry pings on every impression.\n */\nexport class ImpressionsWrapper extends React.PureComponent {\n  // This sends an event when a user sees a set of new content. If content\n  // changes while the page is hidden (i.e. preloaded or on a hidden tab),\n  // only send the event if the page becomes visible again.\n  sendImpressionOrAddListener() {\n    if (this.props.document.visibilityState === VISIBLE) {\n      this.props.sendImpression({id: this.props.id});\n    } else {\n      // We should only ever send the latest impression stats ping, so remove any\n      // older listeners.\n      if (this._onVisibilityChange) {\n        this.props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n      }\n\n      // When the page becomes visible, send the impression stats ping if the section isn't collapsed.\n      this._onVisibilityChange = () => {\n        if (this.props.document.visibilityState === VISIBLE) {\n          this.props.sendImpression({id: this.props.id});\n          this.props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n        }\n      };\n      this.props.document.addEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._onVisibilityChange) {\n      this.props.document.removeEventListener(VISIBILITY_CHANGE_EVENT, this._onVisibilityChange);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.sendOnMount) {\n      this.sendImpressionOrAddListener();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.shouldSendImpressionOnUpdate(this.props, prevProps)) {\n      this.sendImpressionOrAddListener();\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nImpressionsWrapper.defaultProps = {\n  document: global.document,\n  sendOnMount: true\n};\n","const DATABASE_NAME = \"snippets_db\";\nconst DATABASE_VERSION = 1;\nconst SNIPPETS_OBJECTSTORE_NAME = \"snippets\";\nexport const SNIPPETS_UPDATE_INTERVAL_MS = 14400000; // 4 hours.\n\nconst SNIPPETS_ENABLED_EVENT = \"Snippets:Enabled\";\nconst SNIPPETS_DISABLED_EVENT = \"Snippets:Disabled\";\n\nimport {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {ASRouterContent} from \"content-src/asrouter/asrouter-content\";\n\n/**\n * SnippetsMap - A utility for cacheing values related to the snippet. It has\n *               the same interface as a Map, but is optionally backed by\n *               indexedDB for persistent storage.\n *               Call .connect() to open a database connection and restore any\n *               previously cached data, if necessary.\n *\n */\nexport class SnippetsMap extends Map {\n  constructor(dispatch) {\n    super();\n    this._db = null;\n    this._dispatch = dispatch;\n  }\n\n  set(key, value) {\n    super.set(key, value);\n    return this._dbTransaction(db => db.put(value, key));\n  }\n\n  delete(key) {\n    super.delete(key);\n    return this._dbTransaction(db => db.delete(key));\n  }\n\n  clear() {\n    super.clear();\n    this._dispatch(ac.OnlyToMain({type: at.SNIPPETS_BLOCKLIST_CLEARED}));\n    return this._dbTransaction(db => db.clear());\n  }\n\n  get blockList() {\n    return this.get(\"blockList\") || [];\n  }\n\n  /**\n   * blockSnippetById - Blocks a snippet given an id\n   *\n   * @param  {str|int} id   The id of the snippet\n   * @return {Promise}      Resolves when the id has been written to indexedDB,\n   *                        or immediately if the snippetMap is not connected\n   */\n  async blockSnippetById(id) {\n    if (!id) {\n      return;\n    }\n    const {blockList} = this;\n    if (!blockList.includes(id)) {\n      blockList.push(id);\n      this._dispatch(ac.AlsoToMain({type: at.SNIPPETS_BLOCKLIST_UPDATED, data: id}));\n      await this.set(\"blockList\", blockList);\n    }\n  }\n\n  disableOnboarding() {\n    this._dispatch(ac.AlsoToMain({type: at.DISABLE_ONBOARDING}));\n  }\n\n  showFirefoxAccounts() {\n    this._dispatch(ac.AlsoToMain({type: at.SHOW_FIREFOX_ACCOUNTS}));\n  }\n\n  getTotalBookmarksCount() {\n    return new Promise(resolve => {\n      this._dispatch(ac.OnlyToMain({type: at.TOTAL_BOOKMARKS_REQUEST}));\n      global.addMessageListener(\"ActivityStream:MainToContent\", function onMessage({data: action}) {\n        if (action.type === at.TOTAL_BOOKMARKS_RESPONSE) {\n          resolve(action.data);\n          global.removeMessageListener(\"ActivityStream:MainToContent\", onMessage);\n        }\n      });\n    });\n  }\n\n  getAddonsInfo() {\n    return new Promise(resolve => {\n      this._dispatch(ac.OnlyToMain({type: at.ADDONS_INFO_REQUEST}));\n      global.addMessageListener(\"ActivityStream:MainToContent\", function onMessage({data: action}) {\n        if (action.type === at.ADDONS_INFO_RESPONSE) {\n          resolve(action.data);\n          global.removeMessageListener(\"ActivityStream:MainToContent\", onMessage);\n        }\n      });\n    });\n  }\n\n  /**\n   * connect - Attaches an indexedDB back-end to the Map so that any set values\n   *           are also cached in a store. It also restores any existing values\n   *           that are already stored in the indexedDB store.\n   *\n   * @return {type}  description\n   */\n  async connect() {\n    // Open the connection\n    const db = await this._openDB();\n\n    // Restore any existing values\n    await this._restoreFromDb(db);\n\n    // Attach a reference to the db\n    this._db = db;\n  }\n\n  /**\n   * _dbTransaction - Returns a db transaction wrapped with the given modifier\n   *                  function as a Promise. If the db has not been connected,\n   *                  it resolves immediately.\n   *\n   * @param  {func} modifier A function to call with the transaction\n   * @return {obj}           A Promise that resolves when the transaction has\n   *                         completed or errored\n   */\n  _dbTransaction(modifier) {\n    if (!this._db) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const transaction = modifier(\n        this._db\n          .transaction(SNIPPETS_OBJECTSTORE_NAME, \"readwrite\")\n          .objectStore(SNIPPETS_OBJECTSTORE_NAME)\n      );\n      transaction.onsuccess = event => resolve();\n\n      /* istanbul ignore next */\n      transaction.onerror = event => reject(transaction.error);\n    });\n  }\n\n  _openDB() {\n    return new Promise((resolve, reject) => {\n      const openRequest = indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n\n      /* istanbul ignore next */\n      openRequest.onerror = event => {\n        // Try to delete the old database so that we can start this process over\n        // next time.\n        indexedDB.deleteDatabase(DATABASE_NAME);\n        reject(event);\n      };\n\n      openRequest.onupgradeneeded = event => {\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains(SNIPPETS_OBJECTSTORE_NAME)) {\n          db.createObjectStore(SNIPPETS_OBJECTSTORE_NAME);\n        }\n      };\n\n      openRequest.onsuccess = event => {\n        let db = event.target.result;\n\n        /* istanbul ignore next */\n        db.onerror = err => console.error(err); // eslint-disable-line no-console\n        /* istanbul ignore next */\n        db.onversionchange = versionChangeEvent => versionChangeEvent.target.close();\n\n        resolve(db);\n      };\n    });\n  }\n\n  _restoreFromDb(db) {\n    return new Promise((resolve, reject) => {\n      let cursorRequest;\n      try {\n        cursorRequest = db.transaction(SNIPPETS_OBJECTSTORE_NAME)\n          .objectStore(SNIPPETS_OBJECTSTORE_NAME).openCursor();\n      } catch (err) {\n        // istanbul ignore next\n        reject(err);\n        // istanbul ignore next\n        return;\n      }\n\n      /* istanbul ignore next */\n      cursorRequest.onerror = event => reject(event);\n\n      cursorRequest.onsuccess = event => {\n        let cursor = event.target.result;\n        // Populate the cache from the persistent storage.\n        if (cursor) {\n          if (cursor.value !== \"blockList\") {\n            this.set(cursor.key, cursor.value);\n          }\n          cursor.continue();\n        } else {\n          // We are done.\n          resolve();\n        }\n      };\n    });\n  }\n}\n\n/**\n * SnippetsProvider - Initializes a SnippetsMap and loads snippets from a\n *                    remote location, or else default snippets if the remote\n *                    snippets cannot be retrieved.\n */\nexport class SnippetsProvider {\n  constructor(dispatch) {\n    // Initialize the Snippets Map and attaches it to a global so that\n    // the snippet payload can interact with it.\n    global.gSnippetsMap = new SnippetsMap(dispatch);\n    this._onAction = this._onAction.bind(this);\n  }\n\n  get snippetsMap() {\n    return global.gSnippetsMap;\n  }\n\n  async _refreshSnippets() {\n    // Check if the cached version of of the snippets in snippetsMap. If it's too\n    // old, blow away the entire snippetsMap.\n    const cachedVersion = this.snippetsMap.get(\"snippets-cached-version\");\n\n    if (cachedVersion !== this.appData.version) {\n      this.snippetsMap.clear();\n    }\n\n    // Has enough time passed for us to require an update?\n    const lastUpdate = this.snippetsMap.get(\"snippets-last-update\");\n    const needsUpdate = !(lastUpdate >= 0) || Date.now() - lastUpdate > SNIPPETS_UPDATE_INTERVAL_MS;\n\n    if (needsUpdate && this.appData.snippetsURL) {\n      this.snippetsMap.set(\"snippets-last-update\", Date.now());\n      try {\n        const response = await fetch(this.appData.snippetsURL);\n        if (response.status === 200) {\n          const payload = await response.text();\n\n          this.snippetsMap.set(\"snippets\", payload);\n          this.snippetsMap.set(\"snippets-cached-version\", this.appData.version);\n        }\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    }\n  }\n\n  _noSnippetFallback() {\n    // TODO\n  }\n\n  _forceOnboardingVisibility(shouldBeVisible) {\n    const onboardingEl = document.getElementById(\"onboarding-notification-bar\");\n\n    if (onboardingEl) {\n      onboardingEl.style.display = shouldBeVisible ? \"\" : \"none\";\n    }\n  }\n\n  _showRemoteSnippets() {\n    const snippetsEl = document.getElementById(this.elementId);\n    const payload = this.snippetsMap.get(\"snippets\");\n\n    if (!snippetsEl) {\n      throw new Error(`No element was found with id '${this.elementId}'.`);\n    }\n\n    // This could happen if fetching failed\n    if (!payload) {\n      throw new Error(\"No remote snippets were found in gSnippetsMap.\");\n    }\n\n    if (typeof payload !== \"string\") {\n      throw new Error(\"Snippet payload was incorrectly formatted\");\n    }\n\n    // Note that injecting snippets can throw if they're invalid XML.\n    // eslint-disable-next-line no-unsanitized/property\n    snippetsEl.innerHTML = payload;\n\n    // Scripts injected by innerHTML are inactive, so we have to relocate them\n    // through DOM manipulation to activate their contents.\n    for (const scriptEl of snippetsEl.getElementsByTagName(\"script\")) {\n      const relocatedScript = document.createElement(\"script\");\n      relocatedScript.text = scriptEl.text;\n      scriptEl.parentNode.replaceChild(relocatedScript, scriptEl);\n    }\n  }\n\n  _onAction(msg) {\n    if (msg.data.type === at.SNIPPET_BLOCKED) {\n      if (!this.snippetsMap.blockList.includes(msg.data.data)) {\n        this.snippetsMap.set(\"blockList\", this.snippetsMap.blockList.concat(msg.data.data));\n        document.getElementById(\"snippets-container\").style.display = \"none\";\n      }\n    }\n  }\n\n  /**\n   * init - Fetch the snippet payload and show snippets\n   *\n   * @param  {obj} options\n   * @param  {str} options.appData.snippetsURL  The URL from which we fetch snippets\n   * @param  {int} options.appData.version  The current snippets version\n   * @param  {str} options.elementId  The id of the element in which to inject snippets\n   * @param  {bool} options.connect  Should gSnippetsMap connect to indexedDB?\n   */\n  async init(options) {\n    Object.assign(this, {\n      appData: {},\n      elementId: \"snippets\",\n      connect: true\n    }, options);\n\n    // Add listener so we know when snippets are blocked on other pages\n    if (global.addMessageListener) {\n      global.addMessageListener(\"ActivityStream:MainToContent\", this._onAction);\n    }\n\n    // TODO: Requires enabling indexedDB on newtab\n    // Restore the snippets map from indexedDB\n    if (this.connect) {\n      try {\n        await this.snippetsMap.connect();\n      } catch (e) {\n        console.error(e); // eslint-disable-line no-console\n      }\n    }\n\n    // Cache app data values so they can be accessible from gSnippetsMap\n    for (const key of Object.keys(this.appData)) {\n      if (key === \"blockList\") {\n        this.snippetsMap.set(\"blockList\", this.appData[key]);\n      } else {\n        this.snippetsMap.set(`appData.${key}`, this.appData[key]);\n      }\n    }\n\n    // Refresh snippets, if enough time has passed.\n    await this._refreshSnippets();\n\n    // Try showing remote snippets, falling back to defaults if necessary.\n    try {\n      this._showRemoteSnippets();\n    } catch (e) {\n      this._noSnippetFallback(e);\n    }\n\n    window.dispatchEvent(new Event(SNIPPETS_ENABLED_EVENT));\n\n    this._forceOnboardingVisibility(true);\n    this.initialized = true;\n  }\n\n  uninit() {\n    window.dispatchEvent(new Event(SNIPPETS_DISABLED_EVENT));\n    this._forceOnboardingVisibility(false);\n    if (global.removeMessageListener) {\n      global.removeMessageListener(\"ActivityStream:MainToContent\", this._onAction);\n    }\n    this.initialized = false;\n  }\n}\n\n/**\n * addSnippetsSubscriber - Creates a SnippetsProvider that Initializes\n *                         when the store has received the appropriate\n *                         Snippet data.\n *\n * @param  {obj} store   The redux store\n * @return {obj}         Returns the snippets instance, asrouterContent instance and unsubscribe function\n */\nexport function addSnippetsSubscriber(store) {\n  const snippets = new SnippetsProvider(store.dispatch);\n  const asrouterContent = new ASRouterContent();\n\n  let initializing = false;\n\n  store.subscribe(async () => {\n    const state = store.getState();\n    const isASRouterEnabled = state.Prefs.values.asrouterExperimentEnabled && state.Prefs.values.asrouterOnboardingCohort > 0;\n    // state.Prefs.values[\"feeds.snippets\"]:  Should snippets be shown?\n    // state.Snippets.initialized             Is the snippets data initialized?\n    // snippets.initialized:                  Is SnippetsProvider currently initialised?\n    if (state.Prefs.values[\"feeds.snippets\"] &&\n      // If the message center experiment is enabled, don't show snippets\n      !isASRouterEnabled &&\n      !state.Prefs.values.disableSnippets &&\n      state.Snippets.initialized &&\n      !snippets.initialized &&\n      // Don't call init multiple times\n      !initializing &&\n      location.href !== \"about:welcome\"\n    ) {\n      initializing = true;\n      await snippets.init({appData: state.Snippets});\n      initializing = false;\n    } else if (\n      (state.Prefs.values[\"feeds.snippets\"] === false ||\n        state.Prefs.values.disableSnippets === true) &&\n      snippets.initialized\n    ) {\n      snippets.uninit();\n    }\n\n    // Turn on AS Router snippets if the experiment is enabled and the snippets pref is on;\n    // otherwise, turn it off.\n    if (\n      (state.Prefs.values.asrouterExperimentEnabled || state.Prefs.values.asrouterOnboardingCohort > 0) &&\n      state.Prefs.values[\"feeds.snippets\"] &&\n      !asrouterContent.initialized) {\n      asrouterContent.init();\n    } else if (\n      ((!state.Prefs.values.asrouterExperimentEnabled && state.Prefs.values.asrouterOnboardingCohort === 0) || !state.Prefs.values[\"feeds.snippets\"]) &&\n      asrouterContent.initialized\n    ) {\n      asrouterContent.uninit();\n    }\n  });\n\n  // These values are returned for testing purposes\n  return {snippets, asrouterContent};\n}\n","import {actionCreators as ac, actionTypes as at} from \"common/Actions.jsm\";\nimport {addSnippetsSubscriber} from \"content-src/lib/snippets\";\nimport {Base} from \"content-src/components/Base/Base\";\nimport {DetectUserSessionStart} from \"content-src/lib/detect-user-session-start\";\nimport {initStore} from \"content-src/lib/init-store\";\nimport {Provider} from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {reducers} from \"common/Reducers.jsm\";\n\nconst store = initStore(reducers, global.gActivityStreamPrerenderedState);\n\nnew DetectUserSessionStart(store).sendEventOrAddListener();\n\n// If we are starting in a prerendered state, we must wait until the first render\n// to request state rehydration (see Base.jsx). If we are NOT in a prerendered state,\n// we can request it immedately.\nif (!global.gActivityStreamPrerenderedState) {\n  store.dispatch(ac.AlsoToMain({type: at.NEW_TAB_STATE_REQUEST}));\n}\n\nReactDOM.hydrate(<Provider store={store}>\n  <Base\n    isFirstrun={global.document.location.href === \"about:welcome\"}\n    isPrerendered={!!global.gActivityStreamPrerenderedState}\n    locale={global.document.documentElement.lang}\n    strings={global.gActivityStreamStrings} />\n</Provider>, document.getElementById(\"root\"));\n\naddSnippetsSubscriber(store);\n"],"sourceRoot":""}